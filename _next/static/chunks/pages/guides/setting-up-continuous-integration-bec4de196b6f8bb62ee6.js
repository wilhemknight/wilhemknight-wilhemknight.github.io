_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[157],{"5omj":function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return l})),n.d(t,"headings",(function(){return c})),n.d(t,"default",(function(){return p}));var i=n("HALo"),a=n("dhJC"),r=(n("q1tI"),n("7ljp")),o=["components"],l={title:"Setting up Continuous Integration"},c=[{depth:2,type:"text",title:"Test with Jest"},{depth:3,type:"text",title:"Improving Jest performance"},{depth:2,type:"text",title:"Deploy to Expo"},{depth:3,type:"text",title:"Prepare Expo CLI"},{depth:3,type:"text",title:"Prepare authentication"},{depth:3,type:"text",title:"Publish new builds"},{depth:2,type:"text",title:"Next steps"},{depth:3,type:"text",title:"Useful subjects"},{depth:3,type:"text",title:"Official documentation CI/CD vendors"},{depth:3,type:"text",title:"Extra tutorials"},{depth:3,type:"text",title:"Example repositories from this guide"}],s={meta:l,headings:c};function p(e){var t=e.components,n=Object(a.a)(e,o);return Object(r.b)("wrapper",Object(i.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Continuous Integration (CI) and Continuous Delivery (CD) are concepts which can help you to build and deploy with confidence.\nIt's the idea of automating as much as you can, like running tests or creating new releases."),Object(r.b)("p",null,"CI/CD is a relatively broad idea and can get as complex as you can make it.\nIn this guide, we will create a basic setup for testing (CI) and deployments (CD).\nAlso, the configuration for Bitbucket Pipelines, GitLab CI, and Travis CI are provided.\nOther CI/CD vendors can be used too; everything is executable through CLI."),Object(r.b)("h2",{id:"test-with-jest"},"Test with Jest"),Object(r.b)("p",null,"Testing is an essential part of an average CI workflow.\nThis process gives you the confidence when shipping by running all automated tests on every relevant change.\nWithout this, you can't be sure if a proposed change breaks the expected behavior of any existing functionality."),Object(r.b)("p",null,"Before we can run the tests, we need to install the dependencies. You can use yarn, npm-install or even the faster npm-ci command.\nAfter this, we can run the tests with Jest. Unfortunately, we can't use the original npm-test script shipped with expo-cli.\nThis script is designed to start a daemon that watches for file changes and reruns the tests.\nIn CI environments we need Jest to run the tests once and exit with a (un)successful status code.\nAlso, it's also a good idea to explicitly tell Jest it is running in a CI environment.\nJest will handle snapshots more strictly."),Object(r.b)("p",null,"To summarize we will set up the CI to run the following two scripts."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"$ npm ci\n$ npx jest --ci\n")),Object(r.b)("details",null,Object(r.b)("summary",null,"Travis CI"),Object(r.b)("p",null,Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-yaml"},"---\nlanguage: node_js\nnode_js:\n  - node\n  - lts/*\ncache:\n  directories:\n    - ~/.npm\nbefore_script:\n  - npm install -g npm@latest\nscript:\n  - npm ci\n  - npx jest --ci\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Put this into ",Object(r.b)("inlineCode",{parentName:"p"},".travis.yml")," in the root of your repository.")),Object(r.b)("a",{href:"https://travis-ci.com/byCedric/expo-guide-ci/builds/79027881",target:"_blank"},"See it in action"))),Object(r.b)("details",null,Object(r.b)("summary",null,"GitLab CI"),Object(r.b)("p",null,Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-yaml"},"---\nimage: node:alpine\ncache:\n  key: ${CI_COMMIT_REF_SLUG}\n  paths:\n    - ~/.npm\nstages:\n  - test\nbefore_script:\n  - npm ci\njest-tests:\n  stage: test\n  script:\n    - npx jest --ci\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Put this into ",Object(r.b)("inlineCode",{parentName:"p"},".gitlab-ci.yml")," in the root of your repository.")),Object(r.b)("a",{href:"https://gitlab.com/byCedric/expo-guide-ci/pipelines/25800111",target:"_blank"},"See it in action"))),Object(r.b)("details",null,Object(r.b)("summary",null,"Bitbucket Pipelines"),Object(r.b)("p",null,Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-yaml"},"---\nimage: node:alpine\ndefinitions:\n  caches:\n    npm: ~/.npm\npipelines:\n  default:\n    - step:\n        name: Test with Jest\n        caches:\n          - npm\n        script:\n          - npm ci\n          - npx jest --ci\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Put this into ",Object(r.b)("inlineCode",{parentName:"p"},"bitbucket-pipelines.yml")," in the root of your repository.")),Object(r.b)("a",{href:"https://bitbucket.org/byCedric/expo-guide-ci/addon/pipelines/home#!/results/2",target:"_blank"},"See it in action"))),Object(r.b)("h3",{id:"improving-jest-performance"},"Improving Jest performance"),Object(r.b)("p",null,'As you might have noticed already, the tests in CI are a bit slower compared to running them locally.\nIt\'s slower because your hardware is more powerful than the CI hardware.\nJest can leverage the use of parallel testing with such equipment.\nAlso, Some vendors limit the hardware resources or offer "premium" services for more power.\nLuckily there is a relatively easy way to improve the speed of Jest; using the power of caching.'),Object(r.b)("p",null,"There is no definitive way of telling how much it improves.\nUsing the expo-cli tabs project as an example, it can speed up by a factor of 4x - 5x."),Object(r.b)("details",null,Object(r.b)("summary",null,"Travis CI"),Object(r.b)("p",null,Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-yaml"},"---\nlanguage: node_js\nnode_js:\n  - node\n  - lts/*\ncache:\n  directories:\n    - ~/.npm\n    - .jest\nbefore_script:\n  - npm install -g npm@latest\nscript:\n  - npm ci\n  - npx jest --ci\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Put this into ",Object(r.b)("inlineCode",{parentName:"p"},".travis.yml")," in the root of your repository.")),Object(r.b)("a",{href:"https://travis-ci.com/byCedric/expo-guide-ci/builds/79027970",target:"_blank"},"See it in action"))),Object(r.b)("details",null,Object(r.b)("summary",null,"GitLab CI"),Object(r.b)("p",null,Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-yaml"},"---\nimage: node:alpine\ncache:\n  key: ${CI_COMMIT_REF_SLUG}\n  paths:\n    - ~/.npm\n    - .jest\nstages:\n  - test\nbefore_script:\n  - npm ci\njest-tests:\n  stage: test\n  script:\n    - npx jest --ci\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Put this into ",Object(r.b)("inlineCode",{parentName:"p"},".gitlab-ci.yml")," in the root of your repository.")),Object(r.b)("a",{href:"https://gitlab.com/byCedric/expo-guide-ci/pipelines/25800165",target:"_blank"},"See it in action"))),Object(r.b)("details",null,Object(r.b)("summary",null,"Bitbucket Pipelines"),Object(r.b)("p",null,Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-yaml"},"---\nimage: node:alpine\ndefinitions:\n  caches:\n    npm: ~/.npm\n    jest: .jest\npipelines:\n  default:\n    - step:\n        name: Test with Jest\n        caches:\n          - npm\n          - jest\n        script:\n          - npm ci\n          - npx jest --ci\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Put this into ",Object(r.b)("inlineCode",{parentName:"p"},"bitbucket-pipelines.yml")," in the root of your repository.")),Object(r.b)("a",{href:"https://bitbucket.org/byCedric/expo-guide-ci/addon/pipelines/home#!/results/3",target:"_blank"},"See it in action"))),Object(r.b)("h2",{id:"deploy-to-expo"},"Deploy to Expo"),Object(r.b)("p",null,'Now that we have a proper CI workflow in place, we will focus on the Continuous Deployment (CD) part.\nIn this process, we will make a new build and push it to Expo.\nCombined with updates, this can create a simple but effective CD infrastructure.\nJust like the CI part, we first need to install the dependencies.\nAfter this, we need to authenticate at Expo and "publish" a new build.'),Object(r.b)("h3",{id:"prepare-expo-cli"},"Prepare Expo CLI"),Object(r.b)("p",null,"To interact with the Expo API, we need to install the Expo CLI.\nYou can use an environment with this library preinstalled, or you can add it to the project as a development dependency.\nThe latter is the easiest way but might increase the installation time.\nFor vendors that charge you per minute, it might we worth creating a prebuilt environment."),Object(r.b)("p",null,"To install the Expo CLI into your project, you can execute this script."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"$ npm install --save-dev expo-cli\n")),Object(r.b)("h3",{id:"prepare-authentication"},"Prepare authentication"),Object(r.b)("p",null,'Next, we will configure the publishing step of your application to Expo.\nBefore we can do this, we need to authenticate as the owner of the app.\nThis is possible by storing the username or email with the password in the environment.\nEvery vendor has implemented their storage mechanism for sensitive data like passwords, although they are very similar.\nMost vendors make use of environment variables which are "injected" into the environment and scrubbed from the logs to keep it safe.'),Object(r.b)("p",null,"To perform the authentication, we will add this script to our configuration:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"$ npx expo login -u <EXPO USERNAME> -p <EXPO PASSWORD>\n")),Object(r.b)("p",null,"If you don't want to expose the password in the login script, set the ",Object(r.b)("inlineCode",{parentName:"p"},"EXPO_CLI_PASSWORD")," environment variable to the password and run the following script instead:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"$ npx expo login --non-interactive -u <EXPO USERNAME>\n")),Object(r.b)("p",null,"Alternatively, you can ",Object(r.b)("a",{parentName:"p",href:"/../../../../../../accounts/programmatic-access/"},"generate an access token under your Expo account settings")," and configure it as an environment variable named ",Object(r.b)("inlineCode",{parentName:"p"},"EXPO_TOKEN"),"."),Object(r.b)("h3",{id:"publish-new-builds"},"Publish new builds"),Object(r.b)("p",null,"After having the CLI library and authentication in place, we can finally create the build step.\nIn this step, we will create a new build and send it to Expo.\nIt finalizes the whole workflow of creating, testing and shipping your application."),Object(r.b)("p",null,"To create the builds, we will add this script to our configuration:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"$ npx expo publish --non-interactive\n")),Object(r.b)("details",null,Object(r.b)("summary",null,"Travis CI"),Object(r.b)("p",null,Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-yaml"},"---\nlanguage: node_js\nnode_js:\n  - node\n  - lts/*\ncache:\n  directories:\n    - ~/.npm\n    - .jest\nbefore_script:\n  - npm install -g npm@latest\nscript:\n  - npm ci\n  - npx jest --ci\njobs:\n  include:\n    - stage: deploy\n      node_js: lts/*\n      script:\n        - npm ci\n        - npx expo login -u $EXPO_USERNAME -p $EXPO_PASSWORD\n        - npx expo publish --non-interactive\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Put this into ",Object(r.b)("inlineCode",{parentName:"p"},".travis.yml")," in the root of your repository.")),Object(r.b)("a",{href:"https://travis-ci.com/byCedric/expo-guide-ci/builds/79032797",target:"_blank"},"See it in action"))),Object(r.b)("details",null,Object(r.b)("summary",null,"GitLab CI"),Object(r.b)("p",null,Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-yaml"},"---\nimage: node:alpine\ncache:\n  key: ${CI_COMMIT_REF_SLUG}\n  paths:\n    - ~/.npm\n    - .jest\nstages:\n  - test\n  - deploy\nbefore_script:\n  - npm ci\njest-tests:\n  stage: test\n  script:\n    - npx jest --ci\nexpo-deployments:\n  stage: deploy\n  script:\n    - apk add --no-cache bash\n    - npx expo login -u $EXPO_USERNAME -p $EXPO_PASSWORD\n    - npx expo publish --non-interactive\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Put this into ",Object(r.b)("inlineCode",{parentName:"p"},".gitlab-ci.yml")," in the root of your repository.")),Object(r.b)("a",{href:"https://gitlab.com/byCedric/expo-guide-ci/pipelines/25806602",target:"_blank"},"See it in action"))),Object(r.b)("details",null,Object(r.b)("summary",null,"Bitbucket Pipelines"),Object(r.b)("p",null,Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-yaml"},"---\nimage: node:alpine\ndefinitions:\n  caches:\n    npm: ~/.npm\n    jest: .jest\npipelines:\n  default:\n    - step:\n        name: Test with Jest\n        caches:\n          - npm\n          - jest\n        script:\n          - npm ci\n          - npx jest --ci\n    - step:\n        name: Deploy to Expo\n        deployment: test\n        caches:\n          - npm\n        script:\n          - apk add --no-cache bash\n          - npm ci\n          - npx expo login -u $EXPO_USERNAME -p $EXPO_PASSWORD\n          - npx expo publish --non-interactive\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Put this into ",Object(r.b)("inlineCode",{parentName:"p"},"bitbucket-pipelines.yml")," in the root of your repository.")),Object(r.b)("a",{href:"https://bitbucket.org/byCedric/expo-guide-ci/addon/pipelines/home#!/results/11",target:"_blank"},"See it in action"))),Object(r.b)("details",null,Object(r.b)("summary",null,"CircleCI"),Object(r.b)("p",null,Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-yaml"},"---\nversion: 2\npublish: &publish\n  working_directory: ~/my-app\n  docker:\n    - image: circleci/node:10.4.1\n  steps:\n    - checkout\n\n    - run:\n        name: Installing dependencies\n        command: npm ci\n\n    - run:\n        name: Login into Expo\n        command: npx expo-cli login -u $EXPO_USERNAME -p $EXPO_PASSWORD\n\n    - run:\n        name: Publish to Expo\n        command: npx expo-cli publish --non-interactive --max-workers 1 --release-channel $EXPO_RELEASE_CHANNEL\n\njobs:\n  publish_to_expo_dev:\n    environment:\n      EXPO_RELEASE_CHANNEL: dev\n    <<: *publish\n\n  publish_to_expo_prod:\n    environment:\n      EXPO_RELEASE_CHANNEL: default\n    <<: *publish\n\nworkflows:\n  version: 2\n  my_app:\n    jobs:\n      - publish_to_expo_dev:\n          filters:\n            branches:\n              only: development\n      - publish_to_expo_prod:\n          filters:\n            branches:\n              only: master\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Put this into ",Object(r.b)("inlineCode",{parentName:"p"},".circleci/config.yml")," in the root of your repository.")))),Object(r.b)("h2",{id:"next-steps"},"Next steps"),Object(r.b)("p",null,"CI and CD are concepts which are far from fully covered in this guide.\nThe best thing you can do to get familiar with these subjects is to make stuff yourself.\nHere are some extra links that might help you further."),Object(r.b)("h3",{id:"useful-subjects"},"Useful subjects"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"/distribution/release-channels/"},"Release channels")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"/../../../../../../build/setup/"},"Creating your first build")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"/../../../../../../build/building-on-ci/"},"Triggering builds from CI")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"/guides/configuring-updates/"},"Configuring Updates"))),Object(r.b)("h3",{id:"official-documentation-cicd-vendors"},"Official documentation CI/CD vendors"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://docs.gitlab.com/ce/ci/"},"GitLab CI")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://docs.travis-ci.com/"},"Travis CI")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://confluence.atlassian.com/bitbucket/build-test-and-deploy-with-pipelines-792496469.html"},"Bitbucket Pipelines"))),Object(r.b)("h3",{id:"extra-tutorials"},"Extra tutorials"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://blog.expo.dev/setting-up-expo-and-bitbucket-pipelines-8995ef036a18"},"Setting up Expo and Bitbucket Pipelines"))),Object(r.b)("h3",{id:"example-repositories-from-this-guide"},"Example repositories from this guide"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://github.com/bycedric/expo-guide-ci"},"GitHub")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://gitlab.com/byCedric/expo-guide-ci"},"GitLab")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://bitbucket.org/byCedric/expo-guide-ci"},"Bitbucket"))))}p.isMDXComponent=!0},"7ljp":function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var i=n("q1tI"),a=n.n(i);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"===typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=p(n),m=i,d=b["".concat(o,".").concat(m)]||b[m]||u[m]||r;return n?a.a.createElement(d,l(l({ref:t},s),{},{components:n})):a.a.createElement(d,l({ref:t},s))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"===typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"===typeof e?e:i,o[1]=l;for(var s=2;s<r;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},"8F5J":function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/guides/setting-up-continuous-integration",function(){return n("5omj")}])},HALo:function(e,t,n){"use strict";function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return i}))},Qetd:function(e,t,n){"use strict";var i=Object.assign.bind(Object);e.exports=i,e.exports.default=e.exports},dhJC:function(e,t,n){"use strict";function i(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}n.d(t,"a",(function(){return i}))}},[["8F5J",1,0]]]);