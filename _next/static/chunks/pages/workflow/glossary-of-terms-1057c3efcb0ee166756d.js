_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[1531],{"+m+H":function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/workflow/glossary-of-terms",function(){return a("Hjak")}])},"7ljp":function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return h}));var o=a("q1tI"),r=a.n(o);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,o,r=function(e,t){if(null==e)return{};var a,o,r={},n=Object.keys(e);for(o=0;o<n.length;o++)a=n[o],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)a=n[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=r.a.createContext({}),s=function(e){var t=r.a.useContext(l),a=t;return e&&(a="function"===typeof e?e(t):i(i({},t),e)),a},b=function(e){var t=s(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=s(a),u=o,h=b["".concat(p,".").concat(u)]||b[u]||d[u]||n;return a?r.a.createElement(h,i(i({ref:t},l),{},{components:a})):r.a.createElement(h,i({ref:t},l))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"===typeof e||o){var n=a.length,p=new Array(n);p[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"===typeof e?e:o,p[1]=i;for(var l=2;l<n;l++)p[l]=a[l];return r.a.createElement.apply(null,p)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},HALo:function(e,t,a){"use strict";function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var o in a)Object.prototype.hasOwnProperty.call(a,o)&&(e[o]=a[o])}return e}).apply(this,arguments)}a.d(t,"a",(function(){return o}))},Hjak:function(e,t,a){"use strict";a.r(t),a.d(t,"meta",(function(){return i})),a.d(t,"headings",(function(){return c})),a.d(t,"default",(function(){return s}));var o=a("HALo"),r=a("dhJC"),n=(a("q1tI"),a("7ljp")),p=["components"],i={title:"Glossary of terms"},c=[{depth:3,type:"text",title:"app.json"},{depth:3,type:"text",title:"create-react-native-app"},{depth:3,type:"text",title:"detach"},{depth:3,type:"text",title:"EAS"},{depth:3,type:"text",title:"EAS CLI"},{depth:3,type:"text",title:"eject"},{depth:3,type:"text",title:"Emulator"},{depth:3,type:"text",title:"Experience"},{depth:3,type:"text",title:"Expo CLI"},{depth:3,type:"text",title:"Expo Go"},{depth:3,type:"text",title:"Expo client"},{depth:3,type:"text",title:"Expo Dev Tools"},{depth:3,type:"text",title:"Expo SDK"},{depth:3,type:"text",title:"ExpoKit"},{depth:3,type:"text",title:"iOS"},{depth:3,type:"text",title:"Linking"},{depth:3,type:"text",title:"Manifest"},{depth:3,type:"text",title:"Native Directory"},{depth:3,type:"text",title:"npm"},{depth:3,type:"text",title:"Updates"},{depth:3,type:"text",title:"Package Manager"},{depth:3,type:"text",title:"Publish"},{depth:3,type:"text",title:"React Native"},{depth:3,type:"text",title:"Shell app"},{depth:3,type:"text",title:"Simulator"},{depth:3,type:"text",title:"Slug"},{depth:3,type:"text",title:"Snack"},{depth:3,type:"text",title:"Standalone app"},{depth:3,type:"text",title:"XDE"},{depth:3,type:"text",title:"yarn"}],l={meta:i,headings:c};function s(e){var t=e.components,a=Object(r.a)(e,p);return Object(n.b)("wrapper",Object(o.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h3",{id:"appjson"},"app.json"),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"app.json")," is a file that exists for every Expo project and it is used to configure your project, for example the name, icon, and splash screen. ",Object(n.b)("a",{parentName:"p",href:"/workflow/configuration/"},'Read more in "Configuration with app.json / app.config.js"')),Object(n.b)("h3",{id:"create-react-native-app"},"create-react-native-app"),Object(n.b)("p",null,"Formerly the React Native equivalent of ",Object(n.b)("a",{parentName:"p",href:"https://github.com/facebookincubator/create-react-app"},"create-react-app"),". This has since been replaced with ",Object(n.b)("inlineCode",{parentName:"p"},"expo-cli"),"."),Object(n.b)("h3",{id:"detach"},"detach"),Object(n.b)("p",null,'The term "detach" was previously used in Expo to mean ',Object(n.b)("a",{parentName:"p",href:"/workflow/glossary-of-terms/#eject"},"ejecting")," your app to use ",Object(n.b)("a",{parentName:"p",href:"/workflow/glossary-of-terms/#expokit"},"ExpoKit"),"."),Object(n.b)("h3",{id:"eas"},"EAS"),Object(n.b)("p",null,Object(n.b)("a",{parentName:"p",href:"/../../../../../../eas/"},"Expo Application Services (EAS)")," are deeply-integrated cloud services for Expo and React Native apps, such as ",Object(n.b)("a",{parentName:"p",href:"/../../../../../../build/introduction/"},"EAS Build")," and ",Object(n.b)("a",{parentName:"p",href:"/../../../../../../submit/introduction/"},"EAS Submit"),"."),Object(n.b)("h3",{id:"eas-cli"},"EAS CLI"),Object(n.b)("p",null,"The command-line tool for working with EAS. "),Object(n.b)("h3",{id:"eject"},"eject"),Object(n.b)("p",null,'The term "eject" was popularized by ',Object(n.b)("a",{parentName:"p",href:"https://github.com/facebookincubator/create-react-app"},"create-react-app"),', and it is used in Expo to describe leaving the cozy comfort of the standard Expo development environment, where you do not have to deal with build configuration or native code. When you "eject" from Expo, you have two choices:'),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("em",{parentName:"li"},"Eject to bare workflow"),", where you jump between ",Object(n.b)("a",{parentName:"li",href:"/introduction/managed-vs-bare/"},"workflows")," and move into the bare workflow, where you can continue to use Expo APIs but have access and full control over your native iOS and Android projects."),Object(n.b)("li",{parentName:"ul"},Object(n.b)("em",{parentName:"li"},"Eject to ExpoKit"),", where you get the native projects along with ",Object(n.b)("a",{parentName:"li",href:"/workflow/glossary-of-terms/#expokit"},"ExpoKit"),". This option is deprecated and support for ExpoKit was removed after SDK 38.")),Object(n.b)("h3",{id:"emulator"},"Emulator"),Object(n.b)("p",null,"Emulator is used to describe software emulators of Android devices on your computers. Typically iOS emulators are referred to as ",Object(n.b)("a",{parentName:"p",href:"/workflow/glossary-of-terms/#simulator"},"Simulators"),"."),Object(n.b)("h3",{id:"experience"},"Experience"),Object(n.b)("p",null,"A synonym for app that usually implies something more single-use and smaller in scope, sometimes artistic and whimsical."),Object(n.b)("h3",{id:"expo-cli"},"Expo CLI"),Object(n.b)("p",null,"The command-line tool for working with Expo. ",Object(n.b)("a",{parentName:"p",href:"/workflow/expo-cli/"},"Read more"),"."),Object(n.b)("h3",{id:"expo-go"},"Expo Go"),Object(n.b)("p",null,"The iOS and Android app that runs Expo apps. When you want to run your app outside of the Expo Go app and deploy it to the App and/or Play stores, you can build a ",Object(n.b)("a",{parentName:"p",href:"/workflow/glossary-of-terms/#standalone-app"},"Standalone App"),"."),Object(n.b)("h3",{id:"expo-client"},"Expo client"),Object(n.b)("p",null,"The former name for the ",Object(n.b)("a",{parentName:"p",href:"/workflow/glossary-of-terms/#expo-go"},"Expo Go")," app."),Object(n.b)("h3",{id:"expo-dev-tools"},"Expo Dev Tools"),Object(n.b)("p",null,"Expo Developer Tools is a web browser based UI included in ",Object(n.b)("a",{parentName:"p",href:"/workflow/glossary-of-terms/#expo-cli"},"Expo CLI"),"."),Object(n.b)("h3",{id:"expo-sdk"},"Expo SDK"),Object(n.b)("p",null,"The Expo SDK provides access to device/system functionality such as camera, push notification, contacts, file system, and more. Scroll to the SDK API reference in the documentation navigation to see a full list of APIs and to explore them. ",Object(n.b)("a",{parentName:"p",href:"/../../../../../../versions/latest"},"Read more about the Expo SDK"),". ",Object(n.b)("a",{parentName:"p",href:"https://github.com/expo/expo-sdk"},"Find it on GitHub"),"."),Object(n.b)("h3",{id:"expokit"},"ExpoKit"),Object(n.b)("p",null,"ExpoKit is an Objective-C and Java library that allows you to use the ",Object(n.b)("a",{parentName:"p",href:"/workflow/glossary-of-terms/#expo-sdk"},"Expo SDK")," and platform and your existing Expo project as part of a larger standard native project \u2014 one that you would normally create using Xcode, Android Studio, or ",Object(n.b)("inlineCode",{parentName:"p"},"react-native init"),". ",Object(n.b)("a",{parentName:"p",href:"/expokit/eject/"},"Read more"),"."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Support for ExpoKit ended after SDK 38. Expo modules can implement support for custom native configuration, and projects that need even more custom native code can ",Object(n.b)("a",{parentName:"strong",href:"/../../../../../../workflow/customizing"},"expose their Android Studio and Xcode projects with ",Object(n.b)("inlineCode",{parentName:"a"},"expo prebuild")),".")),Object(n.b)("h3",{id:"ios"},"iOS"),Object(n.b)("p",null,"The operating system used on iPhone, iPad, and Apple TV. Expo currently runs on iOS for iPhone and iPad."),Object(n.b)("h3",{id:"linking"},"Linking"),Object(n.b)("p",null,"Linking can mean ",Object(n.b)("a",{parentName:"p",href:"/workflow/linking/"},"deep linking into apps similar to how you link to websites on the web")," or ",Object(n.b)("a",{parentName:"p",href:"/expokit/expokit/#changing-native-dependencies"},"linking native libraries into your ejected ExpoKit app"),"."),Object(n.b)("h3",{id:"manifest"},"Manifest"),Object(n.b)("p",null,"An Expo app manifest is similar to a ",Object(n.b)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/Manifest"},"web app manifest")," - it provides information that Expo needs to know how to run the app and other relevant data. ",Object(n.b)("a",{parentName:"p",href:"/workflow/how-expo-works/#expo-manifest"},'Read more in "How Expo Works"'),"."),Object(n.b)("h3",{id:"native-directory"},"Native Directory"),Object(n.b)("p",null,"The React Native ecosystem has thousands of libraries. Without a purpose-built tool, it's hard to know what the libraries are, to search through them, to determine the quality, try them out, and filter out the libraries that won't work for your project (some don't work with Expo, some don't work with Android or iOS). ",Object(n.b)("a",{parentName:"p",href:"http://native.directory/"},"Native Directory")," is a website that aims to solve this problem, we recommend you use it to find packages to use in your projects."),Object(n.b)("h3",{id:"npm"},"npm"),Object(n.b)("p",null,Object(n.b)("a",{parentName:"p",href:"https://www.npmjs.com/"},"npm")," is a package manager for JavaScript and the registry where the packages are stored. An alternative package manager, which we use internally at Expo, is ",Object(n.b)("a",{parentName:"p",href:"/workflow/glossary-of-terms/#yarn"},"yarn"),"."),Object(n.b)("h3",{id:"updates"},"Updates"),Object(n.b)("p",null,"Traditionally, apps for iOS and Android are updated by submitting an updated binary to the App and Play stores. Updates allow you to push an update to your app without the overhead of submitting a new release to the stores. ",Object(n.b)("a",{parentName:"p",href:"/workflow/publishing/"},'Read more in "Publishing"'),"."),Object(n.b)("h3",{id:"package-manager"},"Package Manager"),Object(n.b)("p",null,"Automates the process of installing, upgrading, configuring, and removing libraries, also known as dependencies, from your project. See ",Object(n.b)("a",{parentName:"p",href:"/workflow/glossary-of-terms/#npm"},"npm")," and ",Object(n.b)("a",{parentName:"p",href:"/workflow/glossary-of-terms/#yarn"},"yarn"),"."),Object(n.b)("h3",{id:"publish"},"Publish"),Object(n.b)("p",null,'We use the word "publish" as a synonym for "deploy". When you publish an app, it becomes available at a persistent URL from Expo Go, or in the case of ',Object(n.b)("a",{parentName:"p",href:"/workflow/glossary-of-terms/#standalone-app"},"Standalone apps"),", it updates the app."),Object(n.b)("h3",{id:"react-native"},"React Native"),Object(n.b)("p",null,'"React Native lets you build mobile apps using only JavaScript. It uses the same design as React, letting you compose a rich mobile UI from declarative components." ',Object(n.b)("a",{parentName:"p",href:"https://reactnative.dev/"},"Read more"),"."),Object(n.b)("h3",{id:"shell-app"},"Shell app"),Object(n.b)("p",null,"Another term we occasionally use for ",Object(n.b)("a",{parentName:"p",href:"/workflow/glossary-of-terms/#standalone-app"},"Standalone app"),"."),Object(n.b)("h3",{id:"simulator"},"Simulator"),Object(n.b)("p",null,"An emulator for iOS devices that you can run on macOS (or in ",Object(n.b)("a",{parentName:"p",href:"/workflow/glossary-of-terms/#snack"},"Snack"),") to work on your app without having to have a physical device handy."),Object(n.b)("h3",{id:"slug"},"Slug"),Object(n.b)("p",null,'We use the word "slug" in ',Object(n.b)("a",{parentName:"p",href:"/workflow/glossary-of-terms/#appjson"},"app.json")," to refer to the name to use for your app in its url. For example, the ",Object(n.b)("a",{parentName:"p",href:"https://expo.dev/@community/native-component-list"},"Native Component List")," app lives at ",Object(n.b)("a",{parentName:"p",href:"https://expo.dev/@community/native-component-list"},"https://expo.dev/@community/native-component-list")," and the slug is native-component-list."),Object(n.b)("h3",{id:"snack"},"Snack"),Object(n.b)("p",null,Object(n.b)("a",{parentName:"p",href:"https://snack.expo.dev/"},"Snack")," is an in-browser development environment where you can build Expo ",Object(n.b)("a",{parentName:"p",href:"/workflow/glossary-of-terms/#experience"},"experiences")," without installing any tools on your phone or computer."),Object(n.b)("h3",{id:"standalone-app"},"Standalone app"),Object(n.b)("p",null,"An application binary that can be submitted to the iOS App Store or Android Play Store. ",Object(n.b)("a",{parentName:"p",href:"/distribution/building-standalone-apps/"},'Read more in "Building Standalone Apps"'),"."),Object(n.b)("h3",{id:"xde"},"XDE"),Object(n.b)("p",null,"XDE was a desktop tool with a graphical user interface (GUI) for working with Expo projects. It's been replaced by ",Object(n.b)("a",{parentName:"p",href:"/workflow/glossary-of-terms/#expo-cli"},"Expo CLI"),", which now provides both command line and web interfaces."),Object(n.b)("h3",{id:"yarn"},"yarn"),Object(n.b)("p",null,"A package manager for JavaScript. ",Object(n.b)("a",{parentName:"p",href:"https://yarnpkg.com/"},"Read more")))}s.isMDXComponent=!0},Qetd:function(e,t,a){"use strict";var o=Object.assign.bind(Object);e.exports=o,e.exports.default=e.exports},dhJC:function(e,t,a){"use strict";function o(e,t){if(null==e)return{};var a,o,r=function(e,t){if(null==e)return{};var a,o,r={},n=Object.keys(e);for(o=0;o<n.length;o++)a=n[o],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)a=n[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}a.d(t,"a",(function(){return o}))}},[["+m+H",1,0]]]);