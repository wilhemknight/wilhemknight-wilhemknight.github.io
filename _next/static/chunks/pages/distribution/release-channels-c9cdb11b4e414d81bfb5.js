_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[100],{"+Css":function(e,n,t){"use strict";function a(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}t.d(n,"a",(function(){return a}))},"7LId":function(e,n,t){"use strict";function a(e,n){return(a=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function r(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&a(e,n)}t.d(n,"a",(function(){return r}))},"7ljp":function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return h}));var a=t("q1tI"),r=t.n(a);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=r.a.createContext({}),c=function(e){var n=r.a.useContext(s),t=n;return e&&(t="function"===typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.a.createElement(s.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=c(t),d=a,h=u["".concat(l,".").concat(d)]||u[d]||b[d]||o;return t?r.a.createElement(h,i(i({ref:n},s),{},{components:t})):r.a.createElement(h,i({ref:n},s))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"===typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"===typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},"C+bE":function(e,n){function t(n){return"function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?(e.exports=t=function(e){return typeof e},e.exports.default=e.exports,e.exports.__esModule=!0):(e.exports=t=function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.default=e.exports,e.exports.__esModule=!0),t(n)}e.exports=t,e.exports.default=e.exports,e.exports.__esModule=!0},FhZx:function(e,n,t){"use strict";var a=t("AeFk"),r=t("3zh3"),o=(t("q1tI"),Object(a.b)("background-color:",r.palette.light.black,";border-radius:4px;padding:24px;display:flex;flex-direction:column;overflow-x:auto;margin-bottom:1rem;","")),l=Object(a.b)("white-space:nowrap;font-family:",r.typography.fontFaces.mono,";font-size:13px;color:",r.palette.dark.gray[900],";line-height:160%;::before{content:'$ ';color:",r.palette.dark.primary[700],";}",""),i=Object(a.b)("user-select:none;white-space:nowrap;font-family:",r.typography.fontFaces.mono,";font-size:13px;color:",r.palette.dark.gray[600],";line-height:150%;",""),p=function(e){var n=e.children;return Object(a.c)("code",{unselectable:"on",css:i},n)};n.a=function(e){var n=e.cmd;return Object(a.c)("div",{css:o},n.map((function(e,n){var t="line-".concat(n);return e.startsWith("#")?Object(a.c)(p,{key:t},e):""===e.trim()?Object(a.c)("br",{key:t}):Object(a.c)("code",{key:t,css:l},e)})))}},"H+61":function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}t.d(n,"a",(function(){return a}))},UlJF:function(e,n,t){"use strict";function a(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function r(e,n,t){return n&&a(e.prototype,n),t&&a(e,t),e}t.d(n,"a",(function(){return r}))},VIvw:function(e,n,t){"use strict";t.d(n,"a",(function(){return l}));var a=t("C+bE"),r=t.n(a),o=t("+Css");function l(e,n){if(n&&("object"===r()(n)||"function"===typeof n))return n;if(void 0!==n)throw new TypeError("Derived constructors may only return object or undefined");return Object(o.a)(e)}},"hj/z":function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/distribution/release-channels",function(){return t("n3Co")}])},iHvq:function(e,n,t){"use strict";function a(e){return(a=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}t.d(n,"a",(function(){return a}))},n3Co:function(e,n,t){"use strict";t.r(n),t.d(n,"meta",(function(){return s})),t.d(n,"headings",(function(){return c})),t.d(n,"default",(function(){return b}));var a=t("HALo"),r=t("dhJC"),o=(t("q1tI"),t("7ljp")),l=t("3WCi"),i=t("FhZx"),p=["components"],s={title:"Release channels"},c=[{depth:2,type:"text",title:"Introduction"},{depth:2,type:"text",title:"Publish with release channels"},{depth:2,type:"text",title:"Build with release channels"},{depth:2,type:"text",title:"Access Channel from Code"},{depth:2,type:"text",title:"Example Workflow"},{depth:2,type:"text",title:"Using release channels in the bare workflow"},{depth:2,type:"text",title:"Using release channels for Environment Variable Configuration"}],u={meta:s,headings:c};function b(e){var n=e.components,t=Object(r.a)(e,p);return Object(o.b)("wrapper",Object(a.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Release channels are used for our Classic Updates service. As of Dec 2021, we started previewing the next generation of our updates service: EAS Update. ",Object(o.b)("a",{parentName:"p",href:"/../../../../../../eas-update"},"Learn more"),".")),Object(o.b)("h2",{id:"introduction"},"Introduction"),Object(o.b)("p",null,"Use release channels in Expo to send out different versions of your application to your users by giving them a URL or configuring your standalone app. You should use release channels if:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"You have an app in production and need a testing environment."),Object(o.b)("li",{parentName:"ul"},"You have multiple versions of your app.")),Object(o.b)("h2",{id:"publish-with-release-channels"},"Publish with release channels"),Object(o.b)("p",null,"Publish your update on a release channel by running:"),Object(o.b)(i.a,{cmd:["# Publish to release channel <your-channel>","expo publish --release-channel <your-channel>"],mdxType:"TerminalBlock"}),Object(o.b)("p",null,"Your team can see this release channel in the Expo Go app with a parameterized URL ",Object(o.b)("inlineCode",{parentName:"p"},"https://exp.host/@username/yourApp?release-channel=<your-release-channel>"),". If you do not specify a release channel, you will publish to the ",Object(o.b)("inlineCode",{parentName:"p"},"default")," channel."),Object(o.b)("p",null,"A release channel name can only contain lowercase letters, numbers and special characters ",Object(o.b)("inlineCode",{parentName:"p"},"."),", ",Object(o.b)("inlineCode",{parentName:"p"},"_")," and ",Object(o.b)("inlineCode",{parentName:"p"},"-"),"."),Object(o.b)("h2",{id:"build-with-release-channels"},"Build with release channels"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"/../../../../../../build/updates/"},"Set your release channel")," in the build profile in ",Object(o.b)("strong",{parentName:"p"},"eas.json"),":"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'{\n  "build": {\n    "your-build-profile": {\n      "releaseChannel": "your-channel"\n    }\n  }\n}\n')),Object(o.b)("p",null,"Then, build your standalone app by running ",Object(o.b)("inlineCode",{parentName:"p"},"eas build --profile <your-build-profile>")," with the EAS CLI. The binary produced will only pull releases published under the specified release channel. If you do not specify a release channel, your binary will pull releases from the ",Object(o.b)("inlineCode",{parentName:"p"},"default")," release channel."),Object(o.b)("details",null,Object(o.b)("summary",null,Object(o.b)("strong",null,"Are you using the classic build system?")," (",Object(o.b)(l.b,{mdxType:"InlineCode"},"expo build:[android|ios]"),")")," ",Object(o.b)("p",null,Object(o.b)("p",null,"Build your standalone app by running"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"expo build:ios --release-channel <your-channel>")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"expo build:android --release-channel <your-channel>")),Object(o.b)("p",null,"with the Expo CLI. The binary produced will only pull releases published under the specified release channel. If you do not specify a release channel, your binary will pull releases from the ",Object(o.b)("inlineCode",{parentName:"p"},"default")," release channel."))),Object(o.b)("h2",{id:"access-channel-from-code"},"Access Channel from Code"),Object(o.b)("p",null,"You can access the release channel your update is published under with the ",Object(o.b)("inlineCode",{parentName:"p"},"Updates.releaseChannel")," field from ",Object(o.b)("a",{parentName:"p",href:"/../../../../../../versions/latest/sdk/updates/"},"expo-updates"),"."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"In development in Expo Go, ",Object(o.b)("inlineCode",{parentName:"p"},"Updates.releaseChannel")," is always ",Object(o.b)("inlineCode",{parentName:"p"},"'default'"),".")),Object(o.b)("h2",{id:"example-workflow"},"Example Workflow"),Object(o.b)("p",null,"Consider a situation where you have a Staging stack for testing on Expo Go, and a Production stack for pushing through TestFlight, then promoting to the AppStore."),Object(o.b)("p",null,"On the staging stack, run ",Object(o.b)("inlineCode",{parentName:"p"},"expo publish --release-channel staging"),". Your test users can see the staging version of your app by specifying the release channel in the query parameter of the URL (ie)",Object(o.b)("inlineCode",{parentName:"p"},"https://exp.host/@username/yourApp?release-channel=staging"),", then opening the URL in their web browser, and finally scanning the QR code with the Expo Go app. Alternatively, they can open that URL directly on their mobile device."),Object(o.b)("p",null,"On the production stack, release v1 of your app by running ",Object(o.b)("inlineCode",{parentName:"p"},"expo publish --release-channel prod-v1"),". You can build this version of your app into a standalone ipa by running ",Object(o.b)("inlineCode",{parentName:"p"},"eas build --platform ios --profile prod")," with ",Object(o.b)("inlineCode",{parentName:"p"},"releaseChannel")," set to ",Object(o.b)("inlineCode",{parentName:"p"},"prod-v1")," in the ",Object(o.b)("inlineCode",{parentName:"p"},"prod")," build profile in ",Object(o.b)("strong",{parentName:"p"},"eas.json"),":"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'{\n  "build": {\n    "prod": {\n      "releaseChannel": "prod-v1"\n    },\n    "staging": {\n      "releaseChannel": "staging"\n    }\n  }\n}\n')),Object(o.b)("p",null,"You can push updates to your app by publishing to the ",Object(o.b)("inlineCode",{parentName:"p"},"prod-v1")," release channel. The standalone app will update with the most recent compatible version of your app on the ",Object(o.b)("inlineCode",{parentName:"p"},"prod-v1")," release channel."),Object(o.b)("p",null,"If you have a new version that you don't want v1 users getting, release v2 of your app by running ",Object(o.b)("inlineCode",{parentName:"p"},"expo publish --release-channel prod-v2"),", setting the ",Object(o.b)("inlineCode",{parentName:"p"},"releaseChannel")," in your ",Object(o.b)("inlineCode",{parentName:"p"},"prod")," build profile to ",Object(o.b)("inlineCode",{parentName:"p"},"prod-v2"),", and building again with ",Object(o.b)("inlineCode",{parentName:"p"},"eas build --platform ios --profile prod"),". Only users with the ",Object(o.b)("inlineCode",{parentName:"p"},"prod-v2")," ipa will pull releases from that release channel."),Object(o.b)("details",null,Object(o.b)("summary",null,Object(o.b)("strong",null,"Are you using the classic build system?")," (",Object(o.b)(l.b,{mdxType:"InlineCode"},"expo build:[android|ios]"),")")," ",Object(o.b)("p",null,Object(o.b)("p",null,"On the production stack, release v1 of your app by running ",Object(o.b)("inlineCode",{parentName:"p"},"expo publish --release-channel prod-v1"),". You can build this version of your app into a standalone ipa by running ",Object(o.b)("inlineCode",{parentName:"p"},"expo build:ios --release-channel prod-v1"),". You can push updates to your app by publishing to the ",Object(o.b)("inlineCode",{parentName:"p"},"prod-v1")," release channel. The standalone app will update with the most recent compatible version of your app on the ",Object(o.b)("inlineCode",{parentName:"p"},"prod-v1")," release channel."),Object(o.b)("p",null,"If you have a new version that you dont want v1 users getting, release v2 of your app by running ",Object(o.b)("inlineCode",{parentName:"p"},"expo publish --release-channel prod-v2")," and building it with ",Object(o.b)("inlineCode",{parentName:"p"},"expo build:ios --release-channel prod-v2"),". Users with the ",Object(o.b)("inlineCode",{parentName:"p"},"prod-v2")," ipa will only be pulling releases from that release channel."))),Object(o.b)("p",null,"You can continue updating v1 of your app with ",Object(o.b)("inlineCode",{parentName:"p"},"expo publish --release-channel prod-v1"),", and users who haven't updated to the latest ",Object(o.b)("inlineCode",{parentName:"p"},"prod-v2")," ipa in the Apple App Store will continue receiving the latest ",Object(o.b)("inlineCode",{parentName:"p"},"prod-v1")," releases."),Object(o.b)("h2",{id:"using-release-channels-in-the-bare-workflow"},"Using release channels in the bare workflow"),Object(o.b)("p",null,"You can edit the native project's release channel by modifying the ",Object(o.b)("inlineCode",{parentName:"p"},"EXUpdatesReleaseChannel")," key in ",Object(o.b)("strong",{parentName:"p"},"Expo.plist")," (iOS) or the ",Object(o.b)("inlineCode",{parentName:"p"},"releaseChannel")," meta-data tag value in ",Object(o.b)("strong",{parentName:"p"},"AndroidManifest.xml")," (Android). ",Object(o.b)("a",{parentName:"p",href:"/../../../../../../bare/updating-your-app/"},"Read this guide")," for more information on configuring updates in a bare app."),Object(o.b)("h2",{id:"using-release-channels-for-environment-variable-configuration"},"Using release channels for Environment Variable Configuration"),Object(o.b)("p",null,"Environment variables don't exist explicitly, but you can utilize release channels to make that happen!"),Object(o.b)("p",null,"Say you have a workflow of releasing builds like this:"),Object(o.b)(i.a,{cmd:["# Publish to release channel prod-v1","expo publish --release-channel prod-v1","","# Publish to release channel prod-v2","expo publish --release-channel prod-v2","","# Publish to release channel prod-v3","expo publish --release-channel prod-v3","","","# Publish to release channel staging-v1","expo publish --release-channel staging-v1","","# Publish to release channel staging-v2","expo publish --release-channel staging-v2"],mdxType:"TerminalBlock"}),Object(o.b)("p",null,"You can create a function that looks for the specific release and adjust your app's behaviour accordingly:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import * as Updates from 'expo-updates';\n\nfunction getEnvironment() {\n  if (Updates.releaseChannel.startsWith('prod')) {\n    // matches prod-v1, prod-v2, prod-v3\n    return { envName: 'PRODUCTION', dbUrl: 'ccc', apiKey: 'ddd' }; // prod env settings\n  } else if (Updates.releaseChannel.startsWith('staging')) {\n    // matches staging-v1, staging-v2\n    return { envName: 'STAGING', dbUrl: 'eee', apiKey: 'fff' }; // stage env settings\n  } else {\n    // assume any other release channel is development\n    return { envName: 'DEVELOPMENT', dbUrl: 'aaa', apiKey: 'bbb' }; // dev env settings\n  }\n}\n")))}b.isMDXComponent=!0}},[["hj/z",1,0,2,3,7]]]);