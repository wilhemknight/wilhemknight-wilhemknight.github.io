_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[102],{"7ljp":function(e,t,o){"use strict";o.d(t,"a",(function(){return d})),o.d(t,"b",(function(){return b}));var n=o("q1tI"),i=o.n(n);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function c(e,t){if(null==e)return{};var o,n,i=function(e,t){if(null==e)return{};var o,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(i[o]=e[o]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}var l=i.a.createContext({}),p=function(e){var t=i.a.useContext(l),o=t;return e&&(o="function"===typeof e?e(t):s(s({},t),e)),o},d=function(e){var t=p(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},h=i.a.forwardRef((function(e,t){var o=e.components,n=e.mdxType,r=e.originalType,a=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(o),h=n,b=d["".concat(a,".").concat(h)]||d[h]||u[h]||r;return o?i.a.createElement(b,s(s({ref:t},l),{},{components:o})):i.a.createElement(b,s({ref:t},l))}));function b(e,t){var o=arguments,n=t&&t.mdxType;if("string"===typeof e||n){var r=o.length,a=new Array(r);a[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"===typeof e?e:n,a[1]=s;for(var l=2;l<r;l++)a[l]=o[l];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,o)}h.displayName="MDXCreateElement"},"9IbH":function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/distribution/security",function(){return o("Eiy/")}])},"Eiy/":function(e,t,o){"use strict";o.r(t),o.d(t,"meta",(function(){return s})),o.d(t,"headings",(function(){return c})),o.d(t,"default",(function(){return p}));var n=o("HALo"),i=o("dhJC"),r=(o("q1tI"),o("7ljp")),a=["components"],s={title:"Security"},c=[{depth:2,type:"text",title:"iOS Push Notification credentials"},{depth:3,type:"text",title:"APNs auth key (p8) + key ID (string)"},{depth:3,type:"text",title:"Consequences if compromised"},{depth:3,type:"text",title:"Consequences if lost"},{depth:2,type:"text",title:"iOS build credentials"},{depth:3,type:"text",title:"Consequences if compromised"},{depth:3,type:"text",title:"Consequences if lost"},{depth:2,type:"text",title:"Apple Developer account credentials"},{depth:3,type:"text",title:"Keychain"},{depth:3,type:"text",title:"Changing Apple ID Password in Keychain"},{depth:3,type:"text",title:"Consequences if compromised"},{depth:3,type:"text",title:"Consequences if lost"},{depth:2,type:"text",title:"Android Push Notification credentials"},{depth:3,type:"text",title:"Consequences if compromised"},{depth:3,type:"text",title:"Consequences if lost"},{depth:2,type:"text",title:"Android build credentials"},{depth:3,type:"text",title:"Consequences if compromised"},{depth:3,type:"text",title:"Consequences if lost"},{depth:2,type:"text",title:"Google Developer credentials"},{depth:2,type:"text",title:"Device tokens for iOS and Android push notifications"},{depth:3,type:"text",title:"Consequences if compromised"},{depth:3,type:"text",title:"Consequences if lost"},{depth:2,type:"text",title:"Need more control?"}],l={meta:s,headings:c};function p(e){var t=e.components,o=Object(i.a)(e,a);return Object(r.b)("wrapper",Object(n.a)({},l,o,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Before you enter outside credentials or provide other sensitive data to third-party software you should ask yourself whether you trust the software to use it responsibly and protect it. Due to the nature of what goes into building an app binary for distribution on app stores, the Expo standalone app build service requires various pieces of information with varying degrees of sensitivity. This document explains what those are, how we store them, and what could go wrong if they were to be compromised."),Object(r.b)("p",null,"Most data stored by Expo \u2014 credentials or otherwise \u2014 is encrypted at rest by our cloud provider, Google Cloud. Credentials are additionally encrypted using ",Object(r.b)("a",{parentName:"p",href:"https://cloud.google.com/kms/"},"KMS"),". Credentials are only unencrypted for as long as we need them in memory in the standalone app builders or push notification services. Credentials are always encrypted in our databases, message queues, and other less transient parts of the system."),Object(r.b)("p",null,"All of the data related to the information explained below can be downloaded and removed from Expo servers (if it is stored there at all in the first place), and some of it may be available through other locations such as the Apple Developer Portal."),Object(r.b)("h2",{id:"ios-push-notification-credentials"},"iOS Push Notification credentials"),Object(r.b)("p",null,"There are two types of iOS push notification credentials: one modern recommended approach recommended by Apple and the legacy approach. The default behavior is to use the modern approach, but developers may opt in to the legacy approach by providing a p12 certificate."),Object(r.b)("h3",{id:"apns-auth-key-p8--key-id-string"},"APNs auth key (p8) + key ID (string)"),Object(r.b)("p",null,"Each developer account has up to two auth keys, each of which can send notifications to any app on the account."),Object(r.b)("p",null,"Auth keys are revocable from the Apple Developer Center. If you revoke them, notifications will stop working. If you provision a new auth key and upload it to Expo then notifications will resume working. Device tokens are not invalidated when auth keys are revoked."),Object(r.b)("h3",{id:"consequences-if-compromised"},"Consequences if compromised"),Object(r.b)("p",null,"If a malicious actor were to somehow gain access to the credentials, they would be able to send push notifications to your app. However, they would need to know which device tokens to send them to."),Object(r.b)("h3",{id:"consequences-if-lost"},"Consequences if lost"),Object(r.b)("p",null,"The Apple Developer console lets you download an APNs Auth Key only when it is created. If an Auth Key is lost, it can be revoked through the Apple Developer console and replaced with a new key."),Object(r.b)("h2",{id:"ios-build-credentials"},"iOS build credentials"),Object(r.b)("p",null,"This refers to the production distribution certificate and password (which are automatically generated if you let Expo manage them for you) and provisioning profiles (which are not secret). Like most credential data stored by Expo these are all encrypted with KMS. Your build credentials let you build an app to upload to App Store Connect. In order to actually upload it and submit it for review, though, you need to have your Apple Developer account credentials."),Object(r.b)("h3",{id:"consequences-if-compromised-1"},"Consequences if compromised"),Object(r.b)("p",null,"There isn't much that a malicious actor could do with this alone ","\u2014"," they would be unable to actually submit any apps without having your Apple Developer account credentials. You can revoke the distribution certificate and provisioning profile from the Apple Developer website."),Object(r.b)("h3",{id:"consequences-if-lost-1"},"Consequences if lost"),Object(r.b)("p",null,"None, they are available through the Apple Developer console."),Object(r.b)("h2",{id:"apple-developer-account-credentials"},"Apple Developer account credentials"),Object(r.b)("p",null,"When creating a standalone app build, or uploading to the App Store you will be prompted for your Apple Developer account credentials. We do not store these on our servers ","\u2014"," Expo CLI only uses them locally. Your computer alone provisions distribution certificates and auth keys that are sent to Expo; your developer credentials are not sent to Expo. An additional layer of security is enforced by Apple, as they require two-factor authentication for all Apple Developer accounts."),Object(r.b)("p",null,"When creating ad-hoc builds, we temporarily store an Apple Developer session token used to create an ad-hoc provisioning profile with your development device\u2019s UDID. Once we are done using this session token we destroy it."),Object(r.b)("h3",{id:"keychain"},"Keychain"),Object(r.b)("p",null,"By default, your Apple ID credentials are stored in the macOS Keychain.\nYour password is only ever stored locally on your computer. This feature is not available for Windows or Linux users."),Object(r.b)("p",null,"Disable Keychain support with the environment variable ",Object(r.b)("inlineCode",{parentName:"p"},"EXPO_NO_KEYCHAIN=1"),". You can also use this to change the saved password."),Object(r.b)("h3",{id:"changing-apple-id-password-in-keychain"},"Changing Apple ID Password in Keychain"),Object(r.b)("p",null,'To delete the locally stored password, open the "Keychain Access" app, switch to "All Items", and search for "deliver.',"[Your Apple ID]",'" (ex. ',Object(r.b)("inlineCode",{parentName:"p"},"deliver.bacon@expo.dev"),"). Select the item you wish to modify and delete it. Next time running an Expo command you'll be prompted for a new password."),Object(r.b)("h3",{id:"consequences-if-compromised-2"},"Consequences if compromised"),Object(r.b)("p",null,"For standalone builds, as explained above, your own machine would need to be compromised for a malicious actor to have access to your username and password. They would also need to have access to your two-factor authentication code generator, which for Apple Developer accounts is a pre-authorized Apple device. At this point you may have worse problems, but as you may expect, the actor would be able to do whatever they like with your Apple Developer account."),Object(r.b)("p",null,"For ad-hoc builds, if a user were to gain access to your session token it would be comparable to being signed in to your account."),Object(r.b)("h3",{id:"consequences-if-lost-2"},"Consequences if lost"),Object(r.b)("p",null,"None, they are available through the Apple Developer console."),Object(r.b)("h2",{id:"android-push-notification-credentials"},"Android Push Notification credentials"),Object(r.b)("p",null,"Android uses Firebase Cloud Messaging (FCM) for push notifications. If you build a standalone app with Expo we store your FCM server key for you."),Object(r.b)("h3",{id:"consequences-if-compromised-3"},"Consequences if compromised"),Object(r.b)("p",null,"Each FCM server key can send push notifications to any of the Android apps associated with the Firebase project to which the key belongs. A malicious actor would need to have access to the FCM server key and device tokens in order to send a notification."),Object(r.b)("p",null,"You can create and delete server keys through the Firebase console. When you delete a key, notifications using that key will stop working. When you create a new one and upload it to Expo, notifications will resume working."),Object(r.b)("h3",{id:"consequences-if-lost-3"},"Consequences if lost"),Object(r.b)("p",null,"None, you can access it through the Firebase console."),Object(r.b)("h2",{id:"android-build-credentials"},"Android build credentials"),Object(r.b)("p",null,"A keystore and keystore password are required to sign a build for release to the Play Store. These are encrypted with KMS and additionally at rest. After an app is first submitted to the Google Play Store, the same keystore must be used to sign the app again in order to update it. It proves that the APK came from the developer who owns the keystore. The keystore alone doesn\u2019t let you submit to Google Play ","\u2014"," your Google account needs access to the Google Play Console as well."),Object(r.b)("h3",{id:"consequences-if-compromised-4"},"Consequences if compromised"),Object(r.b)("p",null,"Provided that your Google Play Developer account is secure, a malicious actor will not be able to update your app with your keystore and keystore password. You cannot change your keystore."),Object(r.b)("h3",{id:"consequences-if-lost-4"},"Consequences if lost"),Object(r.b)("p",null,"You will not be able to update your app on Google Play. You may want to download and backup the keystore and keystore password in a secure location of your choosing or in Google Play with the App Signing feature."),Object(r.b)("h2",{id:"google-developer-credentials"},"Google Developer credentials"),Object(r.b)("p",null,"Expo tools never ask you to provide your Google account credentials."),Object(r.b)("h2",{id:"device-tokens-for-ios-and-android-push-notifications"},"Device tokens for iOS and Android push notifications"),Object(r.b)("p",null,"On top of the platform-specific credentials, a device token is necessary to send a push notification. Expo manages this for you and provides an abstraction on top of it with the Expo Push Token. The device token identifies the recipient, i.e., the device who the notification is being sent to. The device tokens are encrypted at rest and periodically cycled automatically by iOS and Android."),Object(r.b)("h3",{id:"consequences-if-compromised-5"},"Consequences if compromised"),Object(r.b)("p",null,"If a malicious actor has access to the device tokens, they will be unable to do anything with them unless they also have the push notification credentials for the appropriate platform."),Object(r.b)("h3",{id:"consequences-if-lost-5"},"Consequences if lost"),Object(r.b)("p",null,"You won't be able to send notifications to users until they open your app again."),Object(r.b)("h2",{id:"need-more-control"},"Need more control?"),Object(r.b)("p",null,"If the above information doesn't satisfy your security requirements, you may wish to run your standalone app builds ",Object(r.b)("a",{parentName:"p",href:"/build-reference/local-builds"},"on your own infrastructure"),". Note that you will still need to provide your push notification credentials in order to use the push notification service. If that is also not possible, we recommend handling push notifications on your own."))}p.isMDXComponent=!0},HALo:function(e,t,o){"use strict";function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var n in o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n])}return e}).apply(this,arguments)}o.d(t,"a",(function(){return n}))},Qetd:function(e,t,o){"use strict";var n=Object.assign.bind(Object);e.exports=n,e.exports.default=e.exports},dhJC:function(e,t,o){"use strict";function n(e,t){if(null==e)return{};var o,n,i=function(e,t){if(null==e)return{};var o,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(i[o]=e[o]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}o.d(t,"a",(function(){return n}))}},[["9IbH",1,0]]]);