_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[96],{"+Css":function(e,t,n){"use strict";function o(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}n.d(t,"a",(function(){return o}))},"75Vs":function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return l})),n.d(t,"headings",(function(){return s})),n.d(t,"default",(function(){return c}));var o=n("HALo"),r=n("dhJC"),i=(n("q1tI"),n("7ljp")),a=n("3WCi"),p=["components"],l={title:"Hosting Updates on Your Servers"},s=[{depth:2,type:"text",title:"Exporting the update"},{depth:2,type:"text",title:"Hosting your static files"},{depth:3,type:"text",title:"HTTP Headers"},{depth:2,type:"text",title:"Building the standalone app"},{depth:2,type:"text",title:"Loading QR Code/URL in Development"},{depth:3,type:"text",title:"QR code:"},{depth:4,type:"text",title:"Here\u2019s an example of how you\u2019d do this with a remote server:"},{depth:4,type:"text",title:"Here\u2019s an example of how you\u2019d do this from localhost:"},{depth:3,type:"text",title:"URL"},{depth:2,type:"text",title:"Advanced Topics"},{depth:3,type:"text",title:"Debugging"},{depth:3,type:"text",title:"Asset Hosting"},{depth:3,type:"text",title:"Special fields"}],u={meta:l,headings:s};function c(e){var t=e.components,n=Object(r.a)(e,p);return Object(i.b)("wrapper",Object(o.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Normally, when updates are enabled, your app will fetch updates comprising JavaScript bundles and assets from Expo\u2019s CDN. However, there will be situations when you will want to host your JS bundles and assets on your own servers. For example, updates are slow or unusable in countries that have blocked Expo\u2019s CDN providers on AWS and Google Cloud. In these cases, you can host your updates on your own servers to better suit your use cases."),Object(i.b)("p",null,"For simplicity, the rest of this article will refer to hosting an update for the Android platform, but you could swap out Android for iOS at any point and everything would still be true."),Object(i.b)("h2",{id:"exporting-the-update"},"Exporting the update"),Object(i.b)("p",null,"First, you\u2019ll need to export all the static files of your update so they can be served from your CDN. To do this, run ",Object(i.b)("inlineCode",{parentName:"p"},"expo export --public-url <server-endpoint>")," in your project directory and it will output all your app\u2019s static files to a directory named ",Object(i.b)("inlineCode",{parentName:"p"},"dist"),". In this guide, we will use ",Object(i.b)("inlineCode",{parentName:"p"},"https://expo.github.io/self-hosting-example")," as our example server endpoint. Asset and bundle files are named by the MD5 hash of their content. Your output directory should look something like this now:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},".\n\u251c\u2500\u2500 android-index.json\n\u251c\u2500\u2500 ios-index.json\n\u251c\u2500\u2500 assets\n\u2502   \u2514\u2500\u2500 1eccbc4c41d49fd81840aef3eaabe862\n\u2514\u2500\u2500 bundles\n      \u251c\u2500\u2500 android-01ee6e3ab3e8c16a4d926c91808d5320.js\n      \u2514\u2500\u2500 ios-ee8206cc754d3f7aa9123b7f909d94ea.js\n")),Object(i.b)("h2",{id:"hosting-your-static-files"},"Hosting your static files"),Object(i.b)("p",null,"Once you've exported your update's static files, you can host the contents on your own server. For example, in your ",Object(i.b)("inlineCode",{parentName:"p"},"dist")," output directory, an easy way to host your own files is to push the contents to GitHub. You can enable ",Object(i.b)("a",{parentName:"p",href:"https://pages.github.com/"},"GitHub Pages")," to make your app available at a base URL like ",Object(i.b)("a",{parentName:"p",href:"https://username.github.io/project-name"},"https://username.github.io/project-name"),". To host your files on GitHub, you'd do something like this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},'# run this from your project directory\nexpo export --public-url https://expo.github.io/self-hosting-example\n\n# commit output directory contents to your repo\ncd dist\ngit init && git remote add origin git@github.com:expo/self-hosting-example.git\ngit add * && git commit -m "Update my app with this JS bundle"\ngit push origin master\n')),Object(i.b)("p",null,"To setup a QR code to view your hosted update, or if you want to host your files locally, follow the instructions below in the 'Loading QR Code/URL in Development' section."),Object(i.b)("h3",{id:"http-headers"},"HTTP Headers"),Object(i.b)("p",null,"On some hosting services such as ",Object(i.b)("a",{parentName:"p",href:"https://aws.amazon.com/"},"AWS")," and ",Object(i.b)("a",{parentName:"p",href:"http://firebase.google.com/"},"Firebase"),", you'll need to explicitly set the header ",Object(i.b)("inlineCode",{parentName:"p"},'"Content-Type"')," of JavaScript files as ",Object(i.b)("inlineCode",{parentName:"p"},'"application/javascript"')," so that ",Object(i.b)("a",{parentName:"p",href:"/../../../../../../guides/configuring-updates"},"updates")," work correctly. Otherwise ",Object(i.b)("a",{parentName:"p",href:"/../../../../../../versions/latest/sdk/updates/#updatescheckforupdateasync"},"Updates.checkForUpdateAsync()")," will fail with the error ",Object(i.b)("em",{parentName:"p"},'"Failed to fetch new update"'),"."),Object(i.b)("p",null,"Here's an example of ",Object(i.b)("strong",{parentName:"p"},"firebase.json")," configuration, with a ",Object(i.b)("a",{parentName:"p",href:"https://firebase.google.com/docs/cli/targets"},"deploy target"),' named "native".'),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-diff"},'{\n  "hosting": [\n    {\n      "target": "native",\n      "public": "dist",\n+      "headers": [\n+        {\n+          "source": "**/*.js",\n+          "headers": [\n+            {\n+              "key": "Content-Type",\n+              "value": "application/javascript"\n+            }\n+          ]\n        }\n      ]\n    }\n  ]\n}\n')),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},'# export your app locally\nexpo export --public-url https://my-app-native.firebaseapp.com/\n\n# deploy the app to firebase\nfirebase deploy --only hosting:native -m "Deploy my app"`\n')),Object(i.b)("h2",{id:"building-the-standalone-app"},"Building the standalone app"),Object(i.b)("p",null,"To configure your standalone binary to pull updates from your server, you\u2019ll need to define the URL where you will host your ",Object(i.b)("strong",{parentName:"p"},"index.json")," file. When using EAS Build, just set the ",Object(i.b)("a",{parentName:"p",href:"/../../../../../../versions/latest/config/app/#url"},Object(i.b)("inlineCode",{parentName:"a"},"updates.url")," property in app.json")," to point to that url."),Object(i.b)("details",null,Object(i.b)("summary",null,Object(i.b)("strong",null,"Are you using the classic build system?")," (",Object(i.b)(a.b,{mdxType:"InlineCode"},"expo build:[android|ios]"),")")," ",Object(i.b)("p",null,Object(i.b)("p",null,"With the classic build system, you need to pass the URL to your hosted ",Object(i.b)("inlineCode",{parentName:"p"},"index.json")," file to the ",Object(i.b)("inlineCode",{parentName:"p"},"expo build")," command."),Object(i.b)("p",null,"For iOS builds, run the following commands from your terminal:\n",Object(i.b)("inlineCode",{parentName:"p"},"expo build:ios --public-url <path-to-ios-index.json>"),", where the ",Object(i.b)("inlineCode",{parentName:"p"},"public-url")," option will be something like ",Object(i.b)("a",{parentName:"p",href:"https://expo.github.io/self-hosting-example/ios-index.json"},"https://expo.github.io/self-hosting-example/ios-index.json")),Object(i.b)("p",null,"For Android builds, run the following commands from your terminal:\n",Object(i.b)("inlineCode",{parentName:"p"},"expo build:android --public-url <path-to-android-index.json>"),", where the ",Object(i.b)("inlineCode",{parentName:"p"},"public-url")," option will be something like ",Object(i.b)("a",{parentName:"p",href:"https://expo.github.io/self-hosting-example/android-index.json"},"https://expo.github.io/self-hosting-example/android-index.json")))),Object(i.b)("h2",{id:"loading-qr-codeurl-in-development"},"Loading QR Code/URL in Development"),Object(i.b)("p",null,"You can also load an update hosted on your own servers as a QR code/URL into the Expo mobile client for development purposes."),Object(i.b)("h3",{id:"qr-code"},"QR code:"),Object(i.b)("p",null,"The URI you\u2019ll use to convert to QR code will be deeplinked using the ",Object(i.b)("inlineCode",{parentName:"p"},"exps"),"/",Object(i.b)("inlineCode",{parentName:"p"},"exp")," protocol. Both ",Object(i.b)("inlineCode",{parentName:"p"},"exps")," and ",Object(i.b)("inlineCode",{parentName:"p"},"exp")," deeplink into the mobile app and perform a request using HTTPS and HTTP respectively. You can create your own QR code using an online QR code generator from the input URI."),Object(i.b)("h4",{id:"heres-an-example-of-how-youd-do-this-with-a-remote-server"},"Here\u2019s an example of how you\u2019d do this with a remote server:"),Object(i.b)("p",null,"URI: ",Object(i.b)("inlineCode",{parentName:"p"},"exps://expo.github.io/self-hosting-example/android-index.json")),Object(i.b)("p",null,"QR code: Generate the URI from a website like ",Object(i.b)("a",{parentName:"p",href:"https://www.qr-code-generator.com/"},"https://www.qr-code-generator.com/")),Object(i.b)("h4",{id:"heres-an-example-of-how-youd-do-this-from-localhost"},"Here\u2019s an example of how you\u2019d do this from localhost:"),Object(i.b)("p",null,"Run ",Object(i.b)("inlineCode",{parentName:"p"},"expo export")," in dev mode and then start a simple HTTP server in your output directory:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"# Find your local IP address with `ipconfig getifaddr en0`\n# export static app files\nexpo export --public-url http://`ipconfig getifaddr en0`:8000 --dev\n\n# cd into your output directory\ncd dist\n\n# run a simple http server from output directory\npython -m SimpleHTTPServer 8000\n")),Object(i.b)("p",null,"URI: ",Object(i.b)("inlineCode",{parentName:"p"},"exp://192.xxx.xxx.xxx:8000/android-index.json")," (find your local IP with a command like ",Object(i.b)("inlineCode",{parentName:"p"},"ipconfig getifaddr en0"),")"),Object(i.b)("p",null,"QR code: Generate a QR code using your URI from a website like ",Object(i.b)("a",{parentName:"p",href:"https://www.qr-code-generator.com/"},"https://www.qr-code-generator.com/")),Object(i.b)("h3",{id:"url"},"URL"),Object(i.b)("p",null,"If you are loading in your update into a development build by passing in a URL string, you will need to pass in an URL pointing to your JSON manifest file."),Object(i.b)("p",null,"Here is an example URL from a remote server: ",Object(i.b)("a",{parentName:"p",href:"https://expo.github.io/self-hosting-example/android-index.json"},"https://expo.github.io/self-hosting-example/android-index.json")),Object(i.b)("p",null,"Here is an example URL from localhost: ",Object(i.b)("inlineCode",{parentName:"p"},"http://localhost:8000/android-index.json")),Object(i.b)("h2",{id:"advanced-topics"},"Advanced Topics"),Object(i.b)("h3",{id:"debugging"},"Debugging"),Object(i.b)("p",null,"When Expo CLI bundles your update, minification is always enabled. In order to see the original source code of your update for debugging purposes, you can generate source maps. Here is an example workflow:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Run ",Object(i.b)("inlineCode",{parentName:"li"},"expo export --dump-sourcemap --public-url <your-url>"),". This will also export your bundle sourcemaps in the ",Object(i.b)("strong",{parentName:"li"},"bundles")," directory."),Object(i.b)("li",{parentName:"ol"},"A ",Object(i.b)("strong",{parentName:"li"},"debug.html")," file will also be created at the root of your output directory."),Object(i.b)("li",{parentName:"ol"},"In Chrome, open up ",Object(i.b)("strong",{parentName:"li"},"debug.html")," and navigate to the ",Object(i.b)("inlineCode",{parentName:"li"},"Source")," tab. In the left tab there should be a resource explorer with a red folder containing the reconstructed source code from your bundle.")),Object(i.b)("p",null,Object(i.b)("img",{parentName:"p",src:"/static/images/host-your-app-debug.png",alt:"Debugging Source Code"})),Object(i.b)("h3",{id:"asset-hosting"},"Asset Hosting"),Object(i.b)("p",null,"By default, all assets are hosted from an ",Object(i.b)("inlineCode",{parentName:"p"},"assets")," path resolving from your ",Object(i.b)("inlineCode",{parentName:"p"},"public-url")," (e.g. ",Object(i.b)("a",{parentName:"p",href:"https://expo.github.io/self-hosting-example/assets"},"https://expo.github.io/self-hosting-example/assets"),"). You can override this behavior in the ",Object(i.b)("inlineCode",{parentName:"p"},"assetUrlOverride")," field of your ",Object(i.b)("inlineCode",{parentName:"p"},"android-index.json"),". All relative URL's will be resolved from the ",Object(i.b)("inlineCode",{parentName:"p"},"public-url"),"."),Object(i.b)("h3",{id:"special-fields"},"Special fields"),Object(i.b)("p",null,"Most of the fields in the ",Object(i.b)("strong",{parentName:"p"},"index.json")," files are the same as in ",Object(i.b)("strong",{parentName:"p"},"app.json"),". Here are some fields that are notable in ",Object(i.b)("strong",{parentName:"p"},"index.json"),":"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"revisionId"),", ",Object(i.b)("inlineCode",{parentName:"li"},"commitTime"),", ",Object(i.b)("inlineCode",{parentName:"li"},"publishedTime"),": These fields are generated by ",Object(i.b)("inlineCode",{parentName:"li"},"expo export")," and used to determine whether or not an update should occur."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"bundleUrl"),": This points to the path where the app's bundles are hosted. They are also used to determined whether or not an update should occur."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"slug"),": This should not be changed. Your app is namespaced by ",Object(i.b)("inlineCode",{parentName:"li"},"slug"),", and changing this field will result in undefined behavior in the Expo SDK components such as ",Object(i.b)("inlineCode",{parentName:"li"},"Filesystem"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"assetUrlOverride"),": The path which assets are hosted from. It is by default ",Object(i.b)("inlineCode",{parentName:"li"},"./assets"),", which is resolved relative to the base ",Object(i.b)("inlineCode",{parentName:"li"},"public-url")," value you initially passed in.")))}c.isMDXComponent=!0},"7LId":function(e,t,n){"use strict";function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function r(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}n.d(t,"a",(function(){return r}))},"7ljp":function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return h}));var o=n("q1tI"),r=n.n(o);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),u=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"===typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=u(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(n),b=o,h=c["".concat(a,".").concat(b)]||c[b]||d[b]||i;return n?r.a.createElement(h,p(p({ref:t},s),{},{components:n})):r.a.createElement(h,p({ref:t},s))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"===typeof e||o){var i=n.length,a=new Array(i);a[0]=b;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"===typeof e?e:o,a[1]=p;for(var s=2;s<i;s++)a[s]=n[s];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},"C+bE":function(e,t){function n(t){return"function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?(e.exports=n=function(e){return typeof e},e.exports.default=e.exports,e.exports.__esModule=!0):(e.exports=n=function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.default=e.exports,e.exports.__esModule=!0),n(t)}e.exports=n,e.exports.default=e.exports,e.exports.__esModule=!0},"H+61":function(e,t,n){"use strict";function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}n.d(t,"a",(function(){return o}))},UlJF:function(e,t,n){"use strict";function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function r(e,t,n){return t&&o(e.prototype,t),n&&o(e,n),e}n.d(t,"a",(function(){return r}))},VIvw:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var o=n("C+bE"),r=n.n(o),i=n("+Css");function a(e,t){if(t&&("object"===r()(t)||"function"===typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Object(i.a)(e)}},iHvq:function(e,t,n){"use strict";function o(e){return(o=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}n.d(t,"a",(function(){return o}))},kdjP:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/distribution/hosting-your-app",function(){return n("75Vs")}])}},[["kdjP",1,0,2,3,7]]]);