_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[83],{"7ljp":function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return h}));var r=n("q1tI"),i=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=i.a.createContext({}),s=function(e){var t=i.a.useContext(p),n=t;return e&&(n="function"===typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=s(e.components);return i.a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),b=s(n),d=r,h=b["".concat(a,".").concat(d)]||b[d]||c[d]||o;return n?i.a.createElement(h,l(l({ref:t},p),{},{components:n})):i.a.createElement(h,l({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"===typeof e||r){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"===typeof e?e:r,a[1]=l;for(var p=2;p<o;p++)a[p]=n[p];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},HALo:function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return r}))},Qetd:function(e,t,n){"use strict";var r=Object.assign.bind(Object);e.exports=r,e.exports.default=e.exports},dhJC:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}n.d(t,"a",(function(){return r}))},"fTw/":function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/classic/turtle-cli",function(){return n("fo76")}])},fo76:function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return l})),n.d(t,"headings",(function(){return u})),n.d(t,"default",(function(){return s}));var r=n("HALo"),i=n("dhJC"),o=(n("q1tI"),n("7ljp")),a=["components"],l={title:"Building Standalone Apps on Your CI"},u=[{depth:2,type:"text",title:"Install Turtle CLI"},{depth:3,type:"text",title:"Prerequisites"},{depth:4,type:"text",title:"For Android builds"},{depth:4,type:"text",title:"For iOS builds"},{depth:3,type:"text",title:"Turtle CLI"},{depth:2,type:"text",title:"Publish your project!"},{depth:2,type:"text",title:"Start the build"},{depth:3,type:"text",title:"Building for Android"},{depth:3,type:"text",title:"Building for iOS"},{depth:2,type:"text",title:"CI configuration file examples"}],p={meta:l,headings:u};function s(e){var t=e.components,n=Object(i.a)(e,a);return Object(o.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\ud83c\udd95 Using ",Object(o.b)("a",{parentName:"p",href:"/../../../../../../build/introduction/"},"EAS Build"),"? Check out ",Object(o.b)("a",{parentName:"p",href:"/../../../../../../build-reference/local-builds/"},'"Running builds on your own infrastructure"')," and ",Object(o.b)("a",{parentName:"p",href:"/../../../../../../build/building-on-ci/"},'"Triggering builds from CI"'),".")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"NOTE:")," macOS is required to build standalone iOS apps.")),Object(o.b)("p",null,"This guide describes an advanced feature of Expo. In most cases you can build\nstandalone Expo apps using Expo's build services as described in the guide\non ",Object(o.b)("a",{parentName:"p",href:"/classic/building-standalone-apps/"},"Building Standalone Apps"),"."),Object(o.b)("p",null,"If you prefer to not rely on our builders stability and you don't like waiting\nin the queue to get your standalone app build then you can build your Expo\nproject on your own. The only thing you need is Turtle CLI. Turtle CLI is\na command line interface for building Expo standalone apps. You can use it\nboth on your CI and your private computer."),Object(o.b)("h2",{id:"install-turtle-cli"},"Install Turtle CLI"),Object(o.b)("h3",{id:"prerequisites"},"Prerequisites"),Object(o.b)("p",null,"You'll need to have these things installed:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"bash"),Object(o.b)("li",{parentName:"ul"},"Node.js (version 10 or newer) - ",Object(o.b)("a",{parentName:"li",href:"https://nodejs.org/en/"},"download the latest version of Node.js"),".")),Object(o.b)("h4",{id:"for-android-builds"},"For Android builds"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"macOS or Linux"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://jdk.java.net/"},"Java Development Kit (version 8)"))),Object(o.b)("h4",{id:"for-ios-builds"},"For iOS builds"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"macOS"),Object(o.b)("li",{parentName:"ul"},"Xcode (version 11.4 or newer) - make sure you have run it at least once\nand you have agreed to the license agreements. Alternatively you can run ",Object(o.b)("inlineCode",{parentName:"li"},"sudo xcodebuild -license"),"."),Object(o.b)("li",{parentName:"ul"},"fastlane - ",Object(o.b)("a",{parentName:"li",href:"https://docs.fastlane.tools/getting-started/ios/setup/#installing-fastlane"},"see how to install it"))),Object(o.b)("h3",{id:"turtle-cli"},"Turtle CLI"),Object(o.b)("p",null,"Install Turtle CLI by running:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"},"$ npm install -g turtle-cli\n")),Object(o.b)("p",null,"Then run ",Object(o.b)("inlineCode",{parentName:"p"},"turtle setup:ios")," and/or ",Object(o.b)("inlineCode",{parentName:"p"},"turtle setup:android")," to verify everything\nis installed correctly. This step is optional and is also performed during\nthe first run of ",Object(o.b)("inlineCode",{parentName:"p"},"turtle build:[ios|android]"),". Please note that the Android setup command\ndownloads, installs, and configures the appropriate versions of the Android SDK\nand NDK."),Object(o.b)("p",null,"If you would like to make the first build even faster, you can supply the Expo\nSDK version to the setup command like so: ",Object(o.b)("inlineCode",{parentName:"p"},"turtle setup:ios --sdk-version 38.0.0"),".\nThis tells Turtle CLI to download additional Expo-related dependencies for\nthe given SDK version."),Object(o.b)("p",null,"All Expo-related dependencies will be installed in a directory named ",Object(o.b)("inlineCode",{parentName:"p"},".turtle"),"\nwithin your home directory. This directory may be removed safely if you ever\nneed to free up some disk space."),Object(o.b)("h2",{id:"publish-your-project"},"Publish your project!"),Object(o.b)("p",null,"When you're building standalone apps with Turtle CLI, the build process is happening on your local machine.\nTurtle CLI makes use of exactly the same codebase which is running on our servers (",Object(o.b)("inlineCode",{parentName:"p"},"expo build:[ios|android]")," command).\nThis means you're required to publish your app to Expo's servers or host it on your own server ",Object(o.b)("strong",{parentName:"p"},"prior to building it with Turtle CLI"),".\nWhether you want Expo to host your app, or you'd like to do it yourself, all you need to do is follow the appropriate guide:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/../../../../../../workflow/publishing/"},"Publishing an app to Expo's servers")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/../../../../../../distribution/hosting-your-app/"},"Hosting an app on your own server"))),Object(o.b)("h2",{id:"start-the-build"},"Start the build"),Object(o.b)("p",null,"If you choose to publish your app to Expo servers, you must have an Expo\ndeveloper account and supply your credentials to the ",Object(o.b)("inlineCode",{parentName:"p"},"turtle-cli"),".\nThe recommended approach is to define two environment variables called\n",Object(o.b)("inlineCode",{parentName:"p"},"EXPO_USERNAME")," and ",Object(o.b)("inlineCode",{parentName:"p"},"EXPO_PASSWORD")," with your credentials, though you may also\npass these values to the build command from the command line. We recommend\nusing the environment variables to help keep your credentials out of your\nterminal history or CI logs."),Object(o.b)("p",null,"Turtle CLI is using the published app manifest (and not the local app.json/app.config.js file)\nas a source of truth for your app configuration (",Object(o.b)("inlineCode",{parentName:"p"},"ios.buildNumber"),", ",Object(o.b)("inlineCode",{parentName:"p"},"android.versionCode"),", etc.)."),Object(o.b)("h3",{id:"building-for-android"},"Building for Android"),Object(o.b)("p",null,"Before starting the build, prepare the following things:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Keystore"),Object(o.b)("li",{parentName:"ul"},"Keystore alias"),Object(o.b)("li",{parentName:"ul"},"Keystore password and key password")),Object(o.b)("p",null,"To learn how to generate those, see the guide on ",Object(o.b)("a",{parentName:"p",href:"/classic/building-standalone-apps/"},"Building Standalone Apps"),"\nfirst."),Object(o.b)("p",null,"Set the ",Object(o.b)("inlineCode",{parentName:"p"},"EXPO_ANDROID_KEYSTORE_PASSWORD")," and ",Object(o.b)("inlineCode",{parentName:"p"},"EXPO_ANDROID_KEY_PASSWORD"),"\nenvironment variables with the values of the keystore password and key password,\nrespectively."),Object(o.b)("p",null,"Then, start the standalone app build:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"},"$ turtle build:android \\\\\n  --keystore-path /path/to/your/keystore.jks \\\\\n  --keystore-alias PUT_KEYSTORE_ALIAS_HERE\n")),Object(o.b)("p",null,"If the build finishes successfully you will find the path to the build artifact\nin the last line of the logs."),Object(o.b)("p",null,"If you want to print the list of all available command arguments,\nplease run ",Object(o.b)("inlineCode",{parentName:"p"},"turtle build:android --help"),"."),Object(o.b)("h3",{id:"building-for-ios"},"Building for iOS"),Object(o.b)("p",null,"Prepare the following unless you're building only for the iOS simulator:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},'Apple Team ID - (a 10-character string like "Q2DBWS92CA")'),Object(o.b)("li",{parentName:"ul"},"Distribution Certificate .p12 file ",Object(o.b)("em",{parentName:"li"},"(+ password)")),Object(o.b)("li",{parentName:"ul"},"Provisioning Profile")),Object(o.b)("p",null,"To learn how to generate those, see the guide\non ",Object(o.b)("a",{parentName:"p",href:"/classic/building-standalone-apps/"},"Building Standalone Apps")," first."),Object(o.b)("p",null,"Set the ",Object(o.b)("inlineCode",{parentName:"p"},"EXPO_IOS_DIST_P12_PASSWORD")," environment variable with the value of\nthe Distribution Certificate password."),Object(o.b)("p",null,"Then, start the standalone app build:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"},"$ turtle build:ios \\\\\n  --team-id YOUR_TEAM_ID \\\\\n  --dist-p12-path /path/to/your/dist/cert.p12 \\\\\n  --provisioning-profile-path /path/to/your/provisioning/profile.mobileprovision\n")),Object(o.b)("p",null,"If the build finishes successfully you will find the path to the build artifact\nin the last line of the logs."),Object(o.b)("p",null,"If you want to print the list of all available command arguments,\nplease run ",Object(o.b)("inlineCode",{parentName:"p"},"turtle build:ios --help"),"."),Object(o.b)("h2",{id:"ci-configuration-file-examples"},"CI configuration file examples"),Object(o.b)("p",null,"See the ",Object(o.b)("a",{parentName:"p",href:"https://github.com/expo/turtle-cli-example"},"expo/turtle-cli-example")," repository\nfor examples of how to use Turtle CLI with popular CI services (i.e. ",Object(o.b)("a",{parentName:"p",href:"https://github.com/expo/turtle-cli-example#circleci"},"CircleCI"),"\nand ",Object(o.b)("a",{parentName:"p",href:"https://github.com/expo/turtle-cli-example#travis-ci"},"Travis CI"),")."))}s.isMDXComponent=!0}},[["fTw/",1,0]]]);