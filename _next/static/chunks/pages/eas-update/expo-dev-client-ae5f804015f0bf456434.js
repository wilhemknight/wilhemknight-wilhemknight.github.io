_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[113],{"7ljp":function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n("q1tI"),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),b=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"===typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=b(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=b(n),d=r,m=u["".concat(i,".").concat(d)]||u[d]||s[d]||o;return n?a.a.createElement(m,l(l({ref:t},c),{},{components:n})):a.a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"===typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"===typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},HALo:function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return r}))},Qetd:function(e,t,n){"use strict";var r=Object.assign.bind(Object);e.exports=r,e.exports.default=e.exports},RN5s:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/eas-update/expo-dev-client",function(){return n("fAcb")}])},dhJC:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}n.d(t,"a",(function(){return r}))},fAcb:function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return l})),n.d(t,"headings",(function(){return p})),n.d(t,"default",(function(){return b}));var r=n("HALo"),a=n("dhJC"),o=(n("q1tI"),n("7ljp")),i=["components"],l={title:"Using expo-dev-client with EAS Update"},p=[{depth:2,type:"text",title:"How to load a published EAS Update inside a development build"}],c={meta:l,headings:p};function b(e){var t=e.components,n=Object(a.a)(e,i);return Object(o.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\u26a0\ufe0f This guide is likely to change as we continue to work on EAS Update.")),Object(o.b)("p",null,"The ",Object(o.b)("a",{parentName:"p",href:"/../../../../../../development/introduction"},Object(o.b)("inlineCode",{parentName:"a"},"expo-dev-client"))," library allows us to launch different versions of our project. One of the most popular use-cases is to preview a published update inside a development build, using the ",Object(o.b)("inlineCode",{parentName:"p"},"expo-dev-client")," library."),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"expo-dev-client")," library supports loading published EAS Updates through channels. Below, learn how to load a specific channel to preview an update in a development build."),Object(o.b)("h2",{id:"how-to-load-a-published-eas-update-inside-a-development-build"},"How to load a published EAS Update inside a development build"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Create a ",Object(o.b)("a",{parentName:"p",href:"/../../../../../../development/getting-started"},"development build")," of the project.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Next, make non-native changes locally, then publish them using ",Object(o.b)("inlineCode",{parentName:"p"},"eas update --branch ..."),". The branch specified should correspond to a channel. You can see how channels are linked to branches with ",Object(o.b)("inlineCode",{parentName:"p"},"eas channel:list"),".")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"After publishing an update, it's time to load the update in the development build. To accomplish this, we'll have to construct a specific URL. The URL will look like this:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre",className:"language-bash"},"exp+[project-slug]://expo-development-client/?url=[https://u.expo.dev/project-id]?channel-name=[channel]\n\n# Example\n\nexp+form-duo://expo-development-client/?url=https://u.expo.dev/675cb1f0-fa3c-11e8-ac99-6374d9643cb2?channel-name=preview\n")),Object(o.b)("p",{parentName:"li"},"Let's break down the parts of this URL:"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"exp+"),": The beginning of the URL."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"form-duo"),": This is the project slug found in ",Object(o.b)("strong",{parentName:"li"},"app.json"),"/",Object(o.b)("strong",{parentName:"li"},"app.config.js"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"://expo-development-client/"),": necessary for the deep link to work with the ",Object(o.b)("inlineCode",{parentName:"li"},"expo-dev-client")," library."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"?url="),": Defines a ",Object(o.b)("inlineCode",{parentName:"li"},"url")," query parameter."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"https://u.expo.dev/675cb1f0-fa3c-11e8-ac99-6374d9643cb2"),": This is the updates URL, which is inside the project's app config (",Object(o.b)("strong",{parentName:"li"},"app.json"),"/",Object(o.b)("strong",{parentName:"li"},"app.config.js"),") under ",Object(o.b)("inlineCode",{parentName:"li"},"updates.url"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"?channel-name="),": Defines a channel query parameter."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"preview"),": The name of the channel to request."))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Once we've constructed the URL, we can either copy/paste it directly into the ",Object(o.b)("inlineCode",{parentName:"p"},"expo-dev-client"),"'s launcher screen. Alternatively, we could create a QR code of the URL, then scan it. Scanning this URL should open up the development build to the specified channel."))),Object(o.b)("p",null,"If you'd like to see a working example, check out this ",Object(o.b)("a",{parentName:"p",href:"https://github.com/jonsamp/test-expo-dev-client-eas-update"},"demo repo"),"."))}b.isMDXComponent=!0}},[["RN5s",1,0]]]);