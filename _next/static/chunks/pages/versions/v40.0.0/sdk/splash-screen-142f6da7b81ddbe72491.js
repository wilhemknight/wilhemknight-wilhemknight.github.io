_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[706],{"0hBA":function(e,n,t){"use strict";t.r(n),t.d(n,"meta",(function(){return l})),t.d(n,"headings",(function(){return c})),t.d(n,"default",(function(){return d}));var a=t("HALo"),s=t("dhJC"),i=(t("q1tI"),t("7ljp")),o=t("HCau"),p=t("hykZ"),r=["components"],l={title:"SplashScreen",sourceCodeUrl:"https://github.com/expo/expo/tree/sdk-40/packages/expo-splash-screen"},c=[{depth:2,type:"text",title:"Installation"},{depth:2,type:"text",title:"Usage"},{depth:3,type:"text",title:"Animating the splash screen"},{depth:2,type:"text",title:"API"},{depth:3,type:"inlineCode",title:"SplashScreen.preventAutoHideAsync()"},{depth:3,type:"inlineCode",title:"SplashScreen.hideAsync()"}],h={meta:l,headings:c};function d(e){var n=e.components,t=Object(s.a)(e,r);return Object(i.b)("wrapper",Object(a.a)({},h,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"SplashScreen")," module tells the splash screen to remain visible until it has been explicitly told to hide. This is useful to do some work behind the scenes before displaying your app (eg: make API calls) and to animated your splash screen (eg: fade out or slide away, or switch from a static splash screen to an animated splash screen)."),Object(i.b)("p",null,"Read more about ",Object(i.b)("a",{parentName:"p",href:"/guides/splash-screens/"},"creating a splash screen image"),", or ",Object(i.b)("a",{parentName:"p",href:"https://buildicon.netlify.app/"},"quickly generate an icon and splash screen on the web")),Object(i.b)(p.a,{android:!0,emulator:!0,ios:!0,simulator:!0,mdxType:"PlatformsSection"}),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)(o.b,{packageName:"expo-splash-screen",mdxType:"InstallSection"}),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("p",null,"This example shows how to keep the splash screen visible while loading app resources and then hide the splash screen when the app has rendered some initial content."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import React, { useCallback, useEffect, useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport Entypo from '@expo/vector-icons/Entypo';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as Font from 'expo-font';\n\nexport default function App() {\n  const [appIsReady, setAppIsReady] = useState(false);\n\n  useEffect(() => {\n    async function prepare() {\n      try {\n        // Keep the splash screen visible while we fetch resources\n        await SplashScreen.preventAutoHideAsync();\n        // Pre-load fonts, make any API calls you need to do here\n        await Font.loadAsync(Entypo.font);\n        // Artificially delay for two seconds to simulate a slow loading\n        // experience. Please remove this if you copy and paste the code!\n        await new Promise(resolve => setTimeout(resolve, 2000));\n      } catch (e) {\n        console.warn(e);\n      } finally {\n        // Tell the application to render\n        setAppIsReady(true);\n      }\n    }\n\n    prepare();\n  }, []);\n\n  const onLayoutRootView = useCallback(async () => {\n    if (appIsReady) {\n      // This tells the splash screen to hide immediately! If we call this after\n      // `setAppIsReady`, then we may see a blank screen while the app is\n      // loading its initial state and rendering its first pixels. So instead,\n      // we hide the splash screen once we know the root view has already\n      // performed layout.\n      await SplashScreen.hideAsync();\n    }\n  }, [appIsReady]);\n\n  if (!appIsReady) {\n    return null;\n  }\n\n  return (\n    <View\n      style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}\n      onLayout={onLayoutRootView}>\n      <Text>SplashScreen Demo! \ud83d\udc4b</Text>\n      <Entypo name=\"rocket\" size={30} />\n    </View>\n  );\n}\n")),Object(i.b)("h3",{id:"animating-the-splash-screen"},"Animating the splash screen"),Object(i.b)("p",null,"Refer to the ",Object(i.b)("a",{parentName:"p",href:"https://github.com/expo/examples/tree/master/with-splash-screen"},"with-splash-screen example")," to see how to apply any arbitrary animations to your splash screen, such as a fade out. You can initialize a new project from this example by running ",Object(i.b)("inlineCode",{parentName:"p"},"npx create-react-native-app -t with-splash-screen"),"."),Object(i.b)("h2",{id:"api"},"API"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import * as SplashScreen from 'expo-splash-screen';\n")),Object(i.b)("h3",{id:"splashscreenpreventautohideasync"},Object(i.b)("inlineCode",{parentName:"h3"},"SplashScreen.preventAutoHideAsync()")),Object(i.b)("p",null,"Makes the native splash screen (configured in ",Object(i.b)("strong",{parentName:"p"},"app.json"),") remain visible until ",Object(i.b)("inlineCode",{parentName:"p"},"hideAsync")," is called."),Object(i.b)("h3",{id:"splashscreenhideasync"},Object(i.b)("inlineCode",{parentName:"h3"},"SplashScreen.hideAsync()")),Object(i.b)("p",null,"Hides the native splash screen immediately. Be careful to ensure that your app has content ready to display when you hide the splash screen, or you may see a blank screen briefly. See the ",Object(i.b)("a",{parentName:"p",href:"/versions/v40.0.0/sdk/splash-screen/#usage"},'"Usage"')," section for an example."))}d.isMDXComponent=!0},PBjn:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/versions/v40.0.0/sdk/splash-screen",function(){return t("0hBA")}])}},[["PBjn",1,0,2,3,4,5,6]]]);