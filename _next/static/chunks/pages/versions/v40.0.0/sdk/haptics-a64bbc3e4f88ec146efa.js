_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[665],{"2Qld":function(e,t,i){"use strict";i.r(t),i.d(t,"meta",(function(){return p})),i.d(t,"headings",(function(){return l})),i.d(t,"default",(function(){return d}));var n=i("HALo"),a=i("dhJC"),o=(i("q1tI"),i("7ljp")),c=i("HCau"),r=i("hykZ"),s=["components"],p={title:"Haptics",sourceCodeUrl:"https://github.com/expo/expo/tree/sdk-40/packages/expo-haptics"},l=[{depth:2,type:"text",title:"Installation"},{depth:2,type:"text",title:"Configuration"},{depth:2,type:"text",title:"API"},{depth:2,type:"text",title:"Methods"},{depth:3,type:"inlineCode",title:"Haptics.selectionAsync()"},{depth:4,type:"text",title:"Returns"},{depth:3,type:"inlineCode",title:"Haptics.notificationAsync(type)"},{depth:4,type:"text",title:"Arguments"},{depth:4,type:"text",title:"Returns"},{depth:3,type:"inlineCode",title:"Haptics.impactAsync(style)"},{depth:4,type:"text",title:"Arguments"},{depth:4,type:"text",title:"Returns"}],b={meta:p,headings:l};function d(e){var t=e.components,i=Object(a.a)(e,s);return Object(o.b)("wrapper",Object(n.a)({},b,i,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"expo-haptics"))," provides haptic (touch) feedback for"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"iOS 10+ devices using the Taptic Engine"),Object(o.b)("li",{parentName:"ul"},"Android devices using Vibrator system service.")),Object(o.b)("p",null,"On iOS, ",Object(o.b)("em",{parentName:"p"},"the Taptic engine will do nothing if any of the following conditions are true on a user's device:")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Low Power Mode is enabled (",Object(o.b)("a",{parentName:"li",href:"https://expo.canny.io/feature-requests/p/expose-low-power-mode-ios-battery-saver-android"},"Feature Request"),")"),Object(o.b)("li",{parentName:"ul"},"User disabled the Taptic Engine in settings (",Object(o.b)("a",{parentName:"li",href:"https://expo.canny.io/feature-requests/p/react-native-settings"},"Feature Request"),")"),Object(o.b)("li",{parentName:"ul"},"Haptic engine generation is too low (less than 2nd gen) - Private API",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Using private API will get your app rejected: ",Object(o.b)("inlineCode",{parentName:"li"},'[[UIDevice currentDevice] valueForKey: @"_feedbackSupportLevel"]')," so this is not added in Expo"))),Object(o.b)("li",{parentName:"ul"},"iOS version is less than 10 (iPhone 7 is the first phone to support this)",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"This could be found through: ",Object(o.b)("inlineCode",{parentName:"li"},"Constants.platform.ios.systemVersion")," or ",Object(o.b)("inlineCode",{parentName:"li"},"Constants.platform.ios.platform"))))),Object(o.b)(r.a,{android:!0,emulator:!0,ios:!0,simulator:!0,mdxType:"PlatformsSection"}),Object(o.b)("h2",{id:"installation"},"Installation"),Object(o.b)(c.b,{packageName:"expo-haptics",mdxType:"InstallSection"}),Object(o.b)("h2",{id:"configuration"},"Configuration"),Object(o.b)("p",null,"On Android, this module requires permission to control vibration on the device. The ",Object(o.b)("inlineCode",{parentName:"p"},"VIBRATE")," permission is added automatically."),Object(o.b)("h2",{id:"api"},"API"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import * as Haptics from 'expo-haptics';\n")),Object(o.b)("h2",{id:"methods"},"Methods"),Object(o.b)("h3",{id:"hapticsselectionasync"},Object(o.b)("inlineCode",{parentName:"h3"},"Haptics.selectionAsync()")),Object(o.b)("p",null,"Used to let a user know when a selection change has been registered"),Object(o.b)("h4",{id:"returns"},"Returns"),Object(o.b)("p",null,"A ",Object(o.b)("inlineCode",{parentName:"p"},"Promise")," resolving once native size haptics functionality is triggered."),Object(o.b)("h3",{id:"hapticsnotificationasynctype"},Object(o.b)("inlineCode",{parentName:"h3"},"Haptics.notificationAsync(type)")),Object(o.b)("p",null,"The kind of notification response used in the feedback"),Object(o.b)("h4",{id:"arguments"},"Arguments"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"type: ",Object(o.b)("inlineCode",{parentName:"strong"},"NotificationFeedbackType"))," -- A notification feedback type that on ",Object(o.b)("inlineCode",{parentName:"li"},"iOS")," is directly mapped to ",Object(o.b)("a",{parentName:"li",href:"https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype"},"UINotificationFeedbackType"),", while on ",Object(o.b)("inlineCode",{parentName:"li"},"Android")," these are simulated using ",Object(o.b)("a",{parentName:"li",href:"https://developer.android.com/reference/android/os/Vibrator"},"Vibrator"),". You can use one of ",Object(o.b)("inlineCode",{parentName:"li"},"Haptics.NotificationFeedbackType.{Success, Warning, Error}"),".")),Object(o.b)("h4",{id:"returns-1"},"Returns"),Object(o.b)("p",null,"A ",Object(o.b)("inlineCode",{parentName:"p"},"Promise")," resolving once native size haptics functionality is triggered."),Object(o.b)("h3",{id:"hapticsimpactasyncstyle"},Object(o.b)("inlineCode",{parentName:"h3"},"Haptics.impactAsync(style)")),Object(o.b)("h4",{id:"arguments-1"},"Arguments"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"style: ",Object(o.b)("inlineCode",{parentName:"strong"},"ImpactFeedbackStyle"))," -- A collision indicator that on ",Object(o.b)("inlineCode",{parentName:"li"},"iOS")," is directly mapped to ",Object(o.b)("a",{parentName:"li",href:"https://developer.apple.com/documentation/uikit/uiimpactfeedbackstyle"},"UIImpactFeedbackStyle"),", while on ",Object(o.b)("inlineCode",{parentName:"li"},"Android")," these are simulated using ",Object(o.b)("a",{parentName:"li",href:"https://developer.android.com/reference/android/os/Vibrator"},"Vibrator"),". You can use one of ",Object(o.b)("inlineCode",{parentName:"li"},"Haptics.ImpactFeedbackStyle.{Light, Medium, Heavy}"),".")),Object(o.b)("h4",{id:"returns-2"},"Returns"),Object(o.b)("p",null,"A ",Object(o.b)("inlineCode",{parentName:"p"},"Promise")," resolving once native size haptics functionality is triggered."))}d.isMDXComponent=!0},Fd96:function(e,t,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/versions/v40.0.0/sdk/haptics",function(){return i("2Qld")}])}},[["Fd96",1,0,2,3,4,5,6]]]);