_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[632],{"5BX9":function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return s})),n.d(t,"c",(function(){return c}));var a=n("q1tI"),r=n("AeFk"),o=Object(a.createContext)({version:"latest",hasVersion:!1,setVersion:function(e){throw new Error("PageApiVersionContext not found")}});function s(e){var t=i(e.router.pathname),n=null!==t,s=Object(a.useCallback)((function(t){e.router.push(function(e,t){var n=i(e);return n?e.replace(n,t):e}(e.router.pathname,t))}),[]);return Object(r.c)(o.Provider,{value:{setVersion:s,hasVersion:n,version:t||"latest"}},e.children)}function c(){return Object(a.useContext)(o)}function i(e){return function(e){return e.startsWith("/versions/")}(e)?e.split("/",3).pop():null}},"6FTQ":function(e,t,n){"use strict";function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}n.d(t,"a",(function(){return a}))},"8rE2":function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var a=n("6FTQ");function r(e,t){if(e){if("string"===typeof e)return Object(a.a)(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Object(a.a)(e,t):void 0}}},I0q5:function(e,t,n){"use strict";n.d(t,"a",(function(){return y}));var a=n("z7pX"),r=n("H+61"),o=n("UlJF"),s=n("+Css"),c=n("7LId"),i=n("VIvw"),b=n("iHvq"),l=n("cpVT"),p=n("q1tI"),d=n("ufKf"),u=n("3zh3"),m=n("AeFk"),j=function(e){var t=e.size,n=void 0===t?24:t,a=e.stroke,r=void 0===a?u.palette.dark.white:a;return Object(m.c)("svg",{"aria-label":"check",width:n,height:n,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"},Object(m.c)("path",{d:"M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2h6m4-3h6v6m-11 5L21 3",stroke:r,strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"}))},O=n("5BX9");function h(e){var t=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=Object(b.a)(e);if(t){var r=Object(b.a)(this).constructor;n=Reflect.construct(a,arguments,r)}else n=a.apply(this,arguments);return Object(i.a)(this,n)}}var f="v".concat(n("kiQV").version),y=function(e){Object(c.a)(n,e);var t=h(n);function n(){var e;Object(r.a)(this,n);for(var o=arguments.length,c=new Array(o),i=0;i<o;i++)c[i]=arguments[i];return e=t.call.apply(t,[this].concat(c)),Object(l.a)(Object(s.a)(e),"contentRef",p.createRef()),Object(l.a)(Object(s.a)(e),"state",{ready:!1}),Object(l.a)(Object(s.a)(e),"getSelectedDocsVersion",(function(){var t=e.context.version;return"latest"===t?f:t})),Object(l.a)(Object(s.a)(e),"getSnackSdkVersion",(function(){var t=e.getSelectedDocsVersion();return"unversioned"===t&&(t=f),t.replace("v","")})),Object(l.a)(Object(s.a)(e),"getExamplesPath",(function(){return"".concat(document.location.origin,"/static/examples/").concat(e.getSelectedDocsVersion())})),Object(l.a)(Object(s.a)(e),"getDependencies",(function(){return Object(a.a)(e.props.dependencies).join(",")})),Object(l.a)(Object(s.a)(e),"getCode",(function(){return(e.contentRef.current&&e.contentRef.current.textContent||"").replace(/%%placeholder-start%%.*%%placeholder-end%%/g,"")})),e}return Object(o.a)(n,[{key:"componentDidMount",value:function(){this.setState({ready:!0})}},{key:"render",value:function(){return Object(m.c)("div",null,Object(m.c)("div",{ref:this.contentRef,style:this.props.contentHidden?{display:"none"}:void 0},this.props.children),Object(m.c)("form",{action:d.a,method:"POST",target:"_blank"},Object(m.c)("input",{type:"hidden",name:"platform",value:this.props.defaultPlatform||"android"}),Object(m.c)("input",{type:"hidden",name:"name",value:this.props.label||"Example"}),Object(m.c)("input",{type:"hidden",name:"dependencies",value:this.getDependencies()}),Object(m.c)("input",{type:"hidden",name:"sdkVersion",value:this.getSnackSdkVersion()}),this.props.platforms&&Object(m.c)("input",{type:"hidden",name:"supportedPlatforms",value:this.props.platforms.join(",")}),this.state.ready&&Object(m.c)("input",{type:"hidden",name:"files",value:JSON.stringify(Object(d.b)({templateId:this.props.templateId,code:this.getCode(),files:this.props.files,baseURL:this.getExamplesPath()}))}),Object(m.c)("button",{className:"snack-inline-example-button",disabled:!this.state.ready},Object(m.c)(j,{size:16})," ",this.props.buttonTitle||"Try this example on Snack")))}}]),n}(p.Component);Object(l.a)(y,"contextType",O.a),Object(l.a)(y,"defaultProps",{dependencies:[]})},"L/Jr":function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return l})),n.d(t,"headings",(function(){return p})),n.d(t,"default",(function(){return u}));var a=n("HALo"),r=n("dhJC"),o=(n("q1tI"),n("7ljp")),s=n("HCau"),c=n("hykZ"),i=n("I0q5"),b=["components"],l={title:"BarCodeScanner",sourceCodeUrl:"https://github.com/expo/expo/tree/sdk-40/packages/expo-barcode-scanner"},p=[{depth:2,type:"text",title:"Installation"},{depth:2,type:"text",title:"Configuration"},{depth:2,type:"text",title:"Supported formats"},{depth:2,type:"text",title:"Usage"},{depth:2,type:"text",title:"API"},{depth:2,type:"text",title:"Props"},{depth:2,type:"text",title:"Methods"},{depth:3,type:"inlineCode",title:"BarCodeScanner.requestPermissionsAsync()"},{depth:4,type:"text",title:"Returns"},{depth:3,type:"inlineCode",title:"BarCodeScanner.getPermissionsAsync()"},{depth:4,type:"text",title:"Returns"},{depth:3,type:"inlineCode",title:"BarCodeScanner.scanFromURLAsync(url, barCodeTypes)"},{depth:4,type:"text",title:"Arguments"},{depth:4,type:"text",title:"Returns"},{depth:2,type:"text",title:"Types"},{depth:3,type:"inlineCode",title:"BarCodeScanner.BarCodePoint"},{depth:3,type:"inlineCode",title:"BarCodeScanner.BarCodeSize"},{depth:3,type:"inlineCode",title:"BarCodeBounds"},{depth:3,type:"inlineCode",title:"BarCodeScanner.BarCodeScannerResult"}],d={meta:l,headings:p};function u(e){var t=e.components,n=Object(r.a)(e,b);return Object(o.b)("wrapper",Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"expo-barcode-scanner"))," provides a React component that renders a viewfinder for the device's camera (either front or back) and will scan bar codes that show up in the frame."),Object(o.b)(c.a,{android:!0,emulator:!0,ios:!0,simulator:!0,mdxType:"PlatformsSection"}),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"Note:")," Only one active BarCodeScanner preview is supported currently. When using navigation, the best practice is to unmount any previously rendered BarCodeScanner component so the following screens can use ",Object(o.b)("inlineCode",{parentName:"p"},"<BarCodeScanner />")," without issues.")),Object(o.b)("h2",{id:"installation"},"Installation"),Object(o.b)(s.b,{packageName:"expo-barcode-scanner",mdxType:"InstallSection"}),Object(o.b)("h2",{id:"configuration"},"Configuration"),Object(o.b)("p",null,"In managed apps, scanning barcodes with the camera requires the ",Object(o.b)("a",{parentName:"p",href:"/versions/v40.0.0/sdk/permissions/#permissionscamera"},Object(o.b)("inlineCode",{parentName:"a"},"Permission.CAMERA"))," permission. See the ",Object(o.b)("a",{parentName:"p",href:"/versions/v40.0.0/sdk/bar-code-scanner/#usage"},"usage example")," below."),Object(o.b)("h2",{id:"supported-formats"},"Supported formats"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Bar code format"),Object(o.b)("th",{parentName:"tr",align:null},"iOS"),Object(o.b)("th",{parentName:"tr",align:null},"Android"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"aztec"),Object(o.b)("td",{parentName:"tr",align:null},"Yes"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"codabar"),Object(o.b)("td",{parentName:"tr",align:null},"No"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"code39"),Object(o.b)("td",{parentName:"tr",align:null},"Yes"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"code93"),Object(o.b)("td",{parentName:"tr",align:null},"Yes"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"code128"),Object(o.b)("td",{parentName:"tr",align:null},"Yes"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"code39mod43"),Object(o.b)("td",{parentName:"tr",align:null},"Yes"),Object(o.b)("td",{parentName:"tr",align:null},"No")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"datamatrix"),Object(o.b)("td",{parentName:"tr",align:null},"Yes"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"ean13"),Object(o.b)("td",{parentName:"tr",align:null},"Yes"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"ean8"),Object(o.b)("td",{parentName:"tr",align:null},"Yes"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"interleaved2of5"),Object(o.b)("td",{parentName:"tr",align:null},"Yes"),Object(o.b)("td",{parentName:"tr",align:null},"use ",Object(o.b)("inlineCode",{parentName:"td"},"itf14"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"itf14"),Object(o.b)("td",{parentName:"tr",align:null},"Yes","*"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"maxicode"),Object(o.b)("td",{parentName:"tr",align:null},"No"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"pdf417"),Object(o.b)("td",{parentName:"tr",align:null},"Yes"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"rss14"),Object(o.b)("td",{parentName:"tr",align:null},"No"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"rssexpanded"),Object(o.b)("td",{parentName:"tr",align:null},"No"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"upc_a"),Object(o.b)("td",{parentName:"tr",align:null},"No"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"upc_e"),Object(o.b)("td",{parentName:"tr",align:null},"Yes"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"upc_ean"),Object(o.b)("td",{parentName:"tr",align:null},"No"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"qr"),Object(o.b)("td",{parentName:"tr",align:null},"Yes"),Object(o.b)("td",{parentName:"tr",align:null},"Yes")))),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Important notes:"),Object(o.b)("ul",{parentName:"blockquote"},Object(o.b)("li",{parentName:"ul"},"When an ITF-14 barcode is recognized, it's type can sometimes be set to ",Object(o.b)("inlineCode",{parentName:"li"},"interleaved2of5"),"."))),Object(o.b)("blockquote",null,Object(o.b)("ul",{parentName:"blockquote"},Object(o.b)("li",{parentName:"ul"},"Scanning for either ",Object(o.b)("inlineCode",{parentName:"li"},"PDF417")," and/or ",Object(o.b)("inlineCode",{parentName:"li"},"Code39")," formats can result in a noticable increase in battery consumption on iOS. It is recommended to provide only the bar code formats you expect to scan to the ",Object(o.b)("inlineCode",{parentName:"li"},"barCodeTypes")," prop."))),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("p",null,"You must request permission to access the user's camera before attempting to get it. To do this, you will want to use the ",Object(o.b)("a",{parentName:"p",href:"/versions/v40.0.0/sdk/permissions/"},"Permissions")," API. You can see this in practice in the following example."),Object(o.b)(i.a,{label:"Basic BarCodeScanner usage",dependencies:["expo-barcode-scanner"],mdxType:"SnackInline"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState, useEffect } from 'react';\nimport { Text, View, StyleSheet, Button } from 'react-native';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\n\nexport default function App() {\n  const [hasPermission, setHasPermission] = useState(null);\n  const [scanned, setScanned] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\n      setHasPermission(status === 'granted');\n    })();\n  }, []);\n\n  const handleBarCodeScanned = ({ type, data }) => {\n    setScanned(true);\n    alert(`Bar code with type ${type} and data ${data} has been scanned!`);\n  };\n\n  if (hasPermission === null) {\n    return <Text>Requesting for camera permission</Text>;\n  }\n  if (hasPermission === false) {\n    return <Text>No access to camera</Text>;\n  }\n\n  return (\n    <View style={styles.container}>\n      <BarCodeScanner\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\n        style={StyleSheet.absoluteFillObject}\n      />\n      {scanned && <Button title={'Tap to Scan Again'} onPress={() => setScanned(false)} />}\n    </View>\n  );\n}\n\n/* @hide const styles = StyleSheet.create({ ... }); */\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n});\n/* @end */\n"))),Object(o.b)("h2",{id:"api"},"API"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { BarCodeScanner } from 'expo-barcode-scanner';\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Note: Passing ",Object(o.b)("inlineCode",{parentName:"p"},"undefined")," to the ",Object(o.b)("inlineCode",{parentName:"p"},"onBarCodeScanned"),' prop will result in no scanning. This can be used to effectively "pause" the scanner so that it doesn\'t continually scan even after data has been retrieved.')),Object(o.b)("h2",{id:"props"},"Props"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"type (",Object(o.b)("em",{parentName:"strong"},"string"),")")," -- Camera facing. Use one of ",Object(o.b)("inlineCode",{parentName:"p"},"BarCodeScanner.Constants.Type"),". Use either ",Object(o.b)("inlineCode",{parentName:"p"},"Type.front")," or ",Object(o.b)("inlineCode",{parentName:"p"},"Type.back"),". Same as ",Object(o.b)("inlineCode",{parentName:"p"},"Camera.Constants.Type"),". Default: ",Object(o.b)("inlineCode",{parentName:"p"},"Type.back"),".")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"barCodeTypes (",Object(o.b)("em",{parentName:"strong"},"Array\\<string",">"),")")," -- An array of bar code types. Usage: ",Object(o.b)("inlineCode",{parentName:"p"},"BarCodeScanner.Constants.BarCodeType.<codeType>")," where ",Object(o.b)("inlineCode",{parentName:"p"},"codeType")," is one of these ",Object(o.b)("a",{parentName:"p",href:"/versions/v40.0.0/sdk/bar-code-scanner/#supported-formats"},"listed above"),". Defaults to all supported bar code types. It is recommended to provide only the bar code formats you expect to scan to minimize battery usage. For example: ",Object(o.b)("inlineCode",{parentName:"p"},"barCodeTypes={[BarCodeScanner.Constants.BarCodeType.qr]}"),".")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"onBarCodeScanned (",Object(o.b)("em",{parentName:"strong"},"function"),")")," -- A callback that is invoked when a bar code has been successfully scanned. The callback is provided with an ",Object(o.b)("a",{parentName:"p",href:"/versions/v40.0.0/sdk/bar-code-scanner/#barcodescannerbarcodescannerresult"},"BarCodeScanner.BarCodeScannerResult"),"."))),Object(o.b)("h2",{id:"methods"},"Methods"),Object(o.b)("h3",{id:"barcodescannerrequestpermissionsasync"},Object(o.b)("inlineCode",{parentName:"h3"},"BarCodeScanner.requestPermissionsAsync()")),Object(o.b)("p",null,"Asks the user to grant permissions for accessing the camera."),Object(o.b)("p",null,"On iOS this will require apps to specify the ",Object(o.b)("inlineCode",{parentName:"p"},"NSCameraUsageDescription")," entry in the ",Object(o.b)("strong",{parentName:"p"},"Info.plist")),Object(o.b)("h4",{id:"returns"},"Returns"),Object(o.b)("p",null,"A promise that resolves to an object of type ",Object(o.b)("a",{parentName:"p",href:"/versions/v40.0.0/sdk/permissions/#permissionresponse"},"PermissionResponse"),"."),Object(o.b)("h3",{id:"barcodescannergetpermissionsasync"},Object(o.b)("inlineCode",{parentName:"h3"},"BarCodeScanner.getPermissionsAsync()")),Object(o.b)("p",null,"Checks user's permissions for accessing the camera."),Object(o.b)("h4",{id:"returns-1"},"Returns"),Object(o.b)("p",null,"A promise that resolves to an object of type ",Object(o.b)("a",{parentName:"p",href:"/versions/v40.0.0/sdk/permissions/#permissionresponse"},"PermissionResponse"),"."),Object(o.b)("h3",{id:"barcodescannerscanfromurlasyncurl-barcodetypes"},Object(o.b)("inlineCode",{parentName:"h3"},"BarCodeScanner.scanFromURLAsync(url, barCodeTypes)")),Object(o.b)("p",null,"Scan bar codes from the image given by the URL."),Object(o.b)("h4",{id:"arguments"},"Arguments"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"url (",Object(o.b)("em",{parentName:"strong"},"string"),")")," -- URL to get the image from."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"barCodeTypes (",Object(o.b)("em",{parentName:"strong"},"Array\\<BarCodeScanner.Constants.BarCodeType",">"),")")," -- (as in prop) An array of bar code types. Default: all supported bar code types.",Object(o.b)("blockquote",{parentName:"li"},Object(o.b)("p",{parentName:"blockquote"},"Note: Only QR codes are supported on iOS.")))),Object(o.b)("h4",{id:"returns-2"},"Returns"),Object(o.b)("p",null,"A possibly empty array of objects of the shape ",Object(o.b)("inlineCode",{parentName:"p"},"{ type: BarCodeScanner.Constants.BarCodeType, data: string }"),", where the type refers to the bar code type that was scanned and the data is the information encoded in the bar code."),Object(o.b)("h2",{id:"types"},"Types"),Object(o.b)("h3",{id:"barcodescannerbarcodepoint"},Object(o.b)("inlineCode",{parentName:"h3"},"BarCodeScanner.BarCodePoint")),Object(o.b)("p",null,"Object of type ",Object(o.b)("inlineCode",{parentName:"p"},"BarCodePoint")," contains following keys:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"x (",Object(o.b)("em",{parentName:"strong"},"number"),")")," -- The x value."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"y (",Object(o.b)("em",{parentName:"strong"},"number"),")")," -- The y value.")),Object(o.b)("p",null,"Those coordinates are represented in the coordinate space of the barcode source (e.g. when you are using the barcode scanner view, these values are adjusted to the dimensions of the view)."),Object(o.b)("h3",{id:"barcodescannerbarcodesize"},Object(o.b)("inlineCode",{parentName:"h3"},"BarCodeScanner.BarCodeSize")),Object(o.b)("p",null,"Object of type ",Object(o.b)("inlineCode",{parentName:"p"},"BarCodeSize")," contains following keys:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"height (",Object(o.b)("em",{parentName:"strong"},"number"),")")," -- The height value."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"width (",Object(o.b)("em",{parentName:"strong"},"number"),")")," -- The width value.")),Object(o.b)("h3",{id:"barcodebounds"},Object(o.b)("inlineCode",{parentName:"h3"},"BarCodeBounds")),Object(o.b)("p",null,"Object of type ",Object(o.b)("inlineCode",{parentName:"p"},"BarCodeBounds")," contains following keys:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"origin : ",Object(o.b)("a",{parentName:"strong",href:"/versions/v40.0.0/sdk/bar-code-scanner/#barcodescannerbarcodepoint"},"BarCodeScanner.BarCodePoint"))," -- The origin point of the bounding box."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"size : ",Object(o.b)("a",{parentName:"strong",href:"/versions/v40.0.0/sdk/bar-code-scanner/#barcodescannerbarcodesize"},"BarCodeScanner.BarCodeSize"))," -- The size of the bounding box.")),Object(o.b)("h3",{id:"barcodescannerbarcodescannerresult"},Object(o.b)("inlineCode",{parentName:"h3"},"BarCodeScanner.BarCodeScannerResult")),Object(o.b)("p",null,"Object of type ",Object(o.b)("inlineCode",{parentName:"p"},"BarCodeScannerResult")," contains following keys:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"type (",Object(o.b)("em",{parentName:"strong"},"BarCodeScanner.Constants.BarCodeType"),")")," -- The barcode type."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"data (",Object(o.b)("em",{parentName:"strong"},"string"),")")," -- The information encoded in the bar code."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"bounds : ",Object(o.b)("a",{parentName:"strong",href:"/versions/v40.0.0/sdk/bar-code-scanner/#barcodescannerbarcodebounds"},"BarCodeScanner.BarCodeBounds"))," -- (",Object(o.b)("em",{parentName:"li"},"Optional"),") The ",Object(o.b)("inlineCode",{parentName:"li"},"BarCodeBounds")," object."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"cornerPoints : Array<",Object(o.b)("a",{parentName:"strong",href:"/versions/v40.0.0/sdk/bar-code-scanner/#barcodescannerbarcodepoint"},"BarCodeScanner.BarCodePoint"),">")," -- (",Object(o.b)("em",{parentName:"li"},"Optional"),") Corner points of the bounding box.")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"NOTE")," ",Object(o.b)("inlineCode",{parentName:"p"},"bounds")," and ",Object(o.b)("inlineCode",{parentName:"p"},"cornerPoints")," are not always available. On iOS, for ",Object(o.b)("inlineCode",{parentName:"p"},"code39")," and ",Object(o.b)("inlineCode",{parentName:"p"},"pdf417")," you don't get those values. Moreover, on iOS, those values don't have to bounds the whole barcode. For some types, they will represent the area used by the scanner.")))}u.isMDXComponent=!0},"Q/aB":function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/versions/v40.0.0/sdk/bar-code-scanner",function(){return n("L/Jr")}])},cpVT:function(e,t,n){"use strict";function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,"a",(function(){return a}))},kiQV:function(e){e.exports=JSON.parse('{"name":"expo-docs","version":"44.0.0","private":true,"scripts":{"dev":"rimraf .next/preval && next dev -p 3002","build":"cross-env NODE_OPTIONS=--max-old-space-size=8192 next build","export":"yarn run build && next export && yarn run export-issue-404","export-issue-404":"echo \\"\ud83d\udee0  Patching https://github.com/vercel/next.js/issues/16528\\"; cp out/404/index.html out/404.html","export-server":"http-server out -p 8000","import-react-native-docs":"node ./scripts/import-react-native-docs.js","test-links":"node --async-stack-traces --unhandled-rejections=strict ./scripts/test-links.js","prettier":"prettier --write \'**/*.{js,ts,tsx,md}\'","lint":"tsc --noEmit && eslint .","lint-links":"remark -u validate-links ./pages","watch":"tsc --noEmit -w","test":"jest","schema-sync":"node --async-stack-traces --unhandled-rejections=strict ./scripts/schema-sync.js","remove-version":"node --unhandled-rejections=strict ./scripts/remove-version.js"},"resolutions":{"webpack":"^5.28.0"},"dependencies":{"@emotion/react":"^11.4.0","@expo/spawn-async":"^1.5.0","@expo/styleguide":"^4.0.1","@mdx-js/loader":"^1.6.22","@mdx-js/mdx":"^1.6.22","@mdx-js/react":"^1.6.22","@mdx-js/runtime":"^1.6.22","@reach/tabs":"^0.15.0","@sentry/browser":"^5.6.1","date-fns":"^2.28.0","docsearch.js":"^2.5.2","emoji-regex":"^9.2.2","front-matter":"^2.3.0","fs-extra":"^6.0.1","github-slugger":"^1.3.0","hotshot":"^1.0.5","lodash":"^4.17.20","next":"^11.1.4","nprogress":"0.2.0","path-browserify":"^1.0.1","prism-react-renderer":"1.0.2","prop-types":"15.7.2","react":"^17.0.2","react-diff-view":"^2.4.7","react-dom":"^17.0.2","react-feather":"^2.0.9","react-markdown":"^6.0.3","react-player":"^1.11.1","react-visibility-sensor":"^5.1.1","remark-gfm":"^1.0.0","tippy.js":"^6.3.1"},"devDependencies":{"@apidevtools/json-schema-ref-parser":"^9.0.9","@babel/core":"^7.13.14","@emotion/babel-preset-css-prop":"^11.2.0","@emotion/jest":"^11.7.1","@testing-library/jest-dom":"5.11.0","@testing-library/react":"10.4.3","@testing-library/react-hooks":"^7.0.2","@types/cacache":"^15.0.1","@types/fs-extra":"^9.0.11","@types/github-slugger":"^1.3.0","@types/google.analytics":"^0.0.41","@types/gtag.js":"^0.0.6","@types/lodash":"^4.14.161","@types/long":"^4.0.1","@types/mdx-js__react":"^1.5.3","@types/node":"^14.11.2","@types/nprogress":"^0.2.0","@types/react":"^17.0.11","axios":"^0.21.2","babel-plugin-module-resolver":"3.1.1","babel-plugin-preval":"^3.0.1","cross-env":"^5.2.0","danger":"^9.2.10","esbuild-loader":"^2.13.1","eslint":"^8.6.0","eslint-config-next":"^10.2.3","eslint-config-universe":"^10.0.0","eslint-plugin-lodash":"^7.3.0","http-server":"^0.12.3","jest":"^27.4.7","js-yaml":"^4.1.0","prettier":"^2.3.1","puppeteer":"^10.2.0","react-test-renderer":"^17.0.2","rehype-slug":"^4.0.1","remark-cli":"^9.0.0","remark-frontmatter":"^2.0.0","remark-validate-links":"^10.0.4","rimraf":"^3.0.2","semver":"^7.3.5","sitemap":"^6.3.0","typescript":"^4.5.4","unist-builder":"^2.0.0","unist-util-visit":"^2.0.3"}}')},ufKf:function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return r}));var a="https://snack.expo.dev";function r(e){var t=e.templateId,n=e.code,a=e.files,r=e.baseURL,o={};return a&&Object.keys(a).forEach((function(e){var t=a[e],n=/\.(jsx?|tsx?|json|md)$/i.test(e);o[e]=n?{type:"CODE",url:t.match(/^https?:\/\//)?t:"".concat(r,"/").concat(t)}:{type:"ASSET",contents:t}})),t?o["App.js"]={type:"CODE",url:"".concat(r,"/").concat(t,".js")}:n&&(o["App.js"]={type:"CODE",contents:n}),o}},z7pX:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var a=n("6FTQ");var r=n("8rE2");function o(e){return function(e){if(Array.isArray(e))return Object(a.a)(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||Object(r.a)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}}},[["Q/aB",1,0,2,3,4,5,6]]]);