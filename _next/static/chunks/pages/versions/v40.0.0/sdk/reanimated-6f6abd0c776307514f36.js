_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[691],{GObd:function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return c})),n.d(t,"headings",(function(){return p})),n.d(t,"default",(function(){return u}));var a=n("HALo"),i=n("dhJC"),o=(n("q1tI"),n("7ljp")),r=n("HCau"),s=n("hykZ"),l=["components"],c={title:"Reanimated",sourceCodeUrl:"https://github.com/software-mansion/react-native-reanimated"},p=[{depth:2,type:"text",title:"Installation"},{depth:3,type:"text",title:"Experimental support for v2"},{depth:2,type:"text",title:"API Usage"}],b={meta:c,headings:p};function u(e){var t=e.components,n=Object(i.a)(e,l);return Object(o.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"react-native-reanimated"))," provides an API that greatly simplifies the process of creating smooth, powerful, and maintainable animations. From the project's README:"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"It provides a more comprehensive, low level abstraction for the Animated library API to be built on top of and hence allow for much greater flexibility especially when it comes to gesture based interactions.")),Object(o.b)(s.a,{android:!0,emulator:!0,ios:!0,simulator:!0,web:!0,mdxType:"PlatformsSection"}),Object(o.b)("h2",{id:"installation"},"Installation"),Object(o.b)(r.b,{packageName:"react-native-reanimated",href:"https://docs.swmansion.com/react-native-reanimated/docs/installation",mdxType:"InstallSection"}),Object(o.b)("h3",{id:"experimental-support-for-v2"},"Experimental support for v2"),Object(o.b)("p",null,"The second major version of this library offers a much easier API, along with significantly improved performance characteristics. It uses React Native APIs that are incompatible with Remote Debugging JS."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\u23e9 If you want to play with v2-rc in a new project before adding it to an existing project, run ",Object(o.b)("inlineCode",{parentName:"p"},"npx crna --template with-reanimated2")," to create a project with it configured and ready to use.")),Object(o.b)("p",null,"You also need to install the library directly with npm or yarn rather than using ",Object(o.b)("inlineCode",{parentName:"p"},"expo install")," because we still default to installing the stable react-native-reanimated v1."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"# This exact version is supported:\nnpm install react-native-reanimated@2.0.0-rc.0\n")),Object(o.b)("p",null,"Finally, you'll need to add the babel plugin to ",Object(o.b)("strong",{parentName:"p"},"babel.config.js"),":"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"module.exports = function(api) {\n  api.cache(true);\n  return {\n    presets: ['babel-preset-expo'],\n    plugins: ['react-native-reanimated/plugin'],\n  };\n};\n")),Object(o.b)("p",null,"Note: If you load other babel plugins, the Reanimated plugin has to be listed last in the plugins array."),Object(o.b)("p",null,"When you run the project you will get a warning about an incompatible version:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"Some of your project's dependencies are not compatible with currently installed expo package version:\n - react-native-reanimated - expected version range: ~1.13.0 - actual version installed: 2.0.0-rc.0\n")),Object(o.b)("p",null,"You can ignore this, as you are intentionally opting in to an experimental feature."),Object(o.b)("h2",{id:"api-usage"},"API Usage"),Object(o.b)("p",null,"You should refer to the ",Object(o.b)("a",{parentName:"p",href:"https://docs.swmansion.com/react-native-reanimated/docs/2.0.0-alpha.8/"},"react-native-reanimated docs")," for more information on the API and its usage. But the following example (courtesy of that repo) is a quick way to get started."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import React from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\n\nimport Animated, { Easing } from 'react-native-reanimated';\n\nconst { Value, timing } = Animated;\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this._transX = new Value(0);\n    this._config = {\n      duration: 5000,\n      toValue: 180,\n      easing: Easing.inOut(Easing.ease),\n    };\n    this._anim = timing(this._transX, this._config);\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Animated.View style={[styles.box, { transform: [{ translateX: this._transX }] }]} />\n        <Button\n          onPress={() => {\n            this._anim.start();\n          }}\n          title=\"Start\"\n        />\n      </View>\n    );\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1',\n    padding: 8,\n  },\n  box: {\n    width: 50,\n    height: 50,\n    backgroundColor: 'purple',\n    borderRadius: 5,\n  },\n});\n")))}u.isMDXComponent=!0},joS7:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/versions/v40.0.0/sdk/reanimated",function(){return n("GObd")}])}},[["joS7",1,0,2,3,4,5,6]]]);