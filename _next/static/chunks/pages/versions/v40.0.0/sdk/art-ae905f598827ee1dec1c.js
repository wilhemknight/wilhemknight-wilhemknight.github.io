_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[625],{"7ljp":function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return m}));var n=r("q1tI"),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=o.a.createContext({}),p=function(e){var t=o.a.useContext(s),r=t;return e&&(r="function"===typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=p(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),l=p(r),b=n,m=l["".concat(c,".").concat(b)]||l[b]||f[b]||a;return r?o.a.createElement(m,i(i({ref:t},s),{},{components:r})):o.a.createElement(m,i({ref:t},s))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"===typeof e||n){var a=r.length,c=new Array(a);c[0]=b;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"===typeof e?e:n,c[1]=i;for(var s=2;s<a;s++)c[s]=r[s];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},HALo:function(e,t,r){"use strict";function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}r.d(t,"a",(function(){return n}))},Qetd:function(e,t,r){"use strict";var n=Object.assign.bind(Object);e.exports=n,e.exports.default=e.exports},dhJC:function(e,t,r){"use strict";function n(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}r.d(t,"a",(function(){return n}))},kbZQ:function(e,t,r){"use strict";r.r(t),r.d(t,"meta",(function(){return i})),r.d(t,"headings",(function(){return u})),r.d(t,"default",(function(){return p}));var n=r("HALo"),o=r("dhJC"),a=(r("q1tI"),r("7ljp")),c=["components"],i={title:"ART"},u=[],s={meta:i,headings:u};function p(e){var t=e.components,r=Object(o.a)(e,c);return Object(a.b)("wrapper",Object(n.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"This library has been removed as of SDK 36. You likely want to use ",Object(a.b)("a",{parentName:"p",href:"/versions/v40.0.0/sdk/svg/"},"Svg")," which is more feature complete, has better documentation, and is a more standard implementation of vector graphics."),Object(a.b)("p",null,"If you need to use ",Object(a.b)("a",{parentName:"p",href:"https://github.com/oblador/react-native-progress"},"react-native-progress"),", which relies on ART, you can use the bare workflow and install ",Object(a.b)("a",{parentName:"p",href:"https://github.com/react-native-community/art"},Object(a.b)("inlineCode",{parentName:"a"},"@react-native-community/art")),", or implement your own progress indicator using Svg (",Object(a.b)("a",{parentName:"p",href:"https://github.com/bartgryszko/react-native-circular-progress"},"here's an example"),")."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Again, you almost definitely want to use ",Object(a.b)("a",{parentName:"strong",href:"/versions/v40.0.0/sdk/svg/"},"Svg")," instead of this unless you are really sure you want to use ART for some reason.")))}p.isMDXComponent=!0},vQjZ:function(e,t,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/versions/v40.0.0/sdk/art",function(){return r("kbZQ")}])}},[["vQjZ",1,0]]]);