_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[1008],{"2sOa":function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/versions/v42.0.0/sdk/random",function(){return n("okMp")}])},okMp:function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return s})),n.d(t,"headings",(function(){return m})),n.d(t,"default",(function(){return l}));var o=n("HALo"),a=n("dhJC"),p=(n("q1tI"),n("7ljp")),r=n("3Ukx"),i=n("HCau"),d=n("hykZ"),c=["components"],s={title:"Random",sourceCodeUrl:"https://github.com/expo/expo/tree/sdk-42/packages/expo-random"},m=[{depth:2,type:"text",title:"Installation"},{depth:2,type:"text",title:"API"}],b={meta:s,headings:m};function l(e){var t=e.components,n=Object(a.a)(e,c);return Object(p.b)("wrapper",Object(o.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"expo-random")," provides a native interface for creating strong random bytes. With ",Object(p.b)("inlineCode",{parentName:"p"},"Random")," you can create values equivalent to Node.js core ",Object(p.b)("inlineCode",{parentName:"p"},"crypto.randomBytes")," API. ",Object(p.b)("inlineCode",{parentName:"p"},"expo-random")," also works with ",Object(p.b)("inlineCode",{parentName:"p"},"expo-standard-web-crypto"),", which implements the W3C Crypto API for generating random bytes."),Object(p.b)(d.a,{android:!0,emulator:!0,ios:!0,simulator:!0,web:!0,mdxType:"PlatformsSection"}),Object(p.b)("h2",{id:"installation"},"Installation"),Object(p.b)(i.b,{packageName:"expo-random",mdxType:"InstallSection"}),Object(p.b)("h2",{id:"api"},"API"),Object(p.b)("pre",null,Object(p.b)("code",{parentName:"pre",className:"language-js"},"import * as Random from 'expo-random';\n")),Object(p.b)(r.a,{packageName:"expo-random",apiName:"Random",mdxType:"APISection"}))}l.isMDXComponent=!0}},[["2sOa",1,0,2,3,4,5,6,7,8,9,10,11,12,13,14]]]);