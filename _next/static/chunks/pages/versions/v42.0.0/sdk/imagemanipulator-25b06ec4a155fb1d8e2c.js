_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[985],{"5BX9":function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return s}));var a=n("q1tI"),r=n("AeFk"),i=Object(a.createContext)({version:"latest",hasVersion:!1,setVersion:function(e){throw new Error("PageApiVersionContext not found")}});function o(e){var t=c(e.router.pathname),n=null!==t,o=Object(a.useCallback)((function(t){e.router.push(function(e,t){var n=c(e);return n?e.replace(n,t):e}(e.router.pathname,t))}),[]);return Object(r.c)(i.Provider,{value:{setVersion:o,hasVersion:n,version:t||"latest"}},e.children)}function s(){return Object(a.useContext)(i)}function c(e){return function(e){return e.startsWith("/versions/")}(e)?e.split("/",3).pop():null}},"6FTQ":function(e,t,n){"use strict";function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}n.d(t,"a",(function(){return a}))},"8rE2":function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var a=n("6FTQ");function r(e,t){if(e){if("string"===typeof e)return Object(a.a)(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Object(a.a)(e,t):void 0}}},I0q5:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var a=n("z7pX"),r=n("H+61"),i=n("UlJF"),o=n("+Css"),s=n("7LId"),c=n("VIvw"),p=n("iHvq"),l=n("cpVT"),u=n("q1tI"),m=n("ufKf"),b=n("3zh3"),d=n("AeFk"),h=function(e){var t=e.size,n=void 0===t?24:t,a=e.stroke,r=void 0===a?b.palette.dark.white:a;return Object(d.c)("svg",{"aria-label":"check",width:n,height:n,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"},Object(d.c)("path",{d:"M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2h6m4-3h6v6m-11 5L21 3",stroke:r,strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"}))},f=n("5BX9");function g(e){var t=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=Object(p.a)(e);if(t){var r=Object(p.a)(this).constructor;n=Reflect.construct(a,arguments,r)}else n=a.apply(this,arguments);return Object(c.a)(this,n)}}var j="v".concat(n("kiQV").version),O=function(e){Object(s.a)(n,e);var t=g(n);function n(){var e;Object(r.a)(this,n);for(var i=arguments.length,s=new Array(i),c=0;c<i;c++)s[c]=arguments[c];return e=t.call.apply(t,[this].concat(s)),Object(l.a)(Object(o.a)(e),"contentRef",u.createRef()),Object(l.a)(Object(o.a)(e),"state",{ready:!1}),Object(l.a)(Object(o.a)(e),"getSelectedDocsVersion",(function(){var t=e.context.version;return"latest"===t?j:t})),Object(l.a)(Object(o.a)(e),"getSnackSdkVersion",(function(){var t=e.getSelectedDocsVersion();return"unversioned"===t&&(t=j),t.replace("v","")})),Object(l.a)(Object(o.a)(e),"getExamplesPath",(function(){return"".concat(document.location.origin,"/static/examples/").concat(e.getSelectedDocsVersion())})),Object(l.a)(Object(o.a)(e),"getDependencies",(function(){return Object(a.a)(e.props.dependencies).join(",")})),Object(l.a)(Object(o.a)(e),"getCode",(function(){return(e.contentRef.current&&e.contentRef.current.textContent||"").replace(/%%placeholder-start%%.*%%placeholder-end%%/g,"")})),e}return Object(i.a)(n,[{key:"componentDidMount",value:function(){this.setState({ready:!0})}},{key:"render",value:function(){return Object(d.c)("div",null,Object(d.c)("div",{ref:this.contentRef,style:this.props.contentHidden?{display:"none"}:void 0},this.props.children),Object(d.c)("form",{action:m.a,method:"POST",target:"_blank"},Object(d.c)("input",{type:"hidden",name:"platform",value:this.props.defaultPlatform||"android"}),Object(d.c)("input",{type:"hidden",name:"name",value:this.props.label||"Example"}),Object(d.c)("input",{type:"hidden",name:"dependencies",value:this.getDependencies()}),Object(d.c)("input",{type:"hidden",name:"sdkVersion",value:this.getSnackSdkVersion()}),this.props.platforms&&Object(d.c)("input",{type:"hidden",name:"supportedPlatforms",value:this.props.platforms.join(",")}),this.state.ready&&Object(d.c)("input",{type:"hidden",name:"files",value:JSON.stringify(Object(m.b)({templateId:this.props.templateId,code:this.getCode(),files:this.props.files,baseURL:this.getExamplesPath()}))}),Object(d.c)("button",{className:"snack-inline-example-button",disabled:!this.state.ready},Object(d.c)(h,{size:16})," ",this.props.buttonTitle||"Try this example on Snack")))}}]),n}(u.Component);Object(l.a)(O,"contextType",f.a),Object(l.a)(O,"defaultProps",{dependencies:[]})},IS2d:function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return l})),n.d(t,"headings",(function(){return u})),n.d(t,"default",(function(){return b}));var a=n("HALo"),r=n("dhJC"),i=(n("q1tI"),n("7ljp")),o=n("HCau"),s=n("hykZ"),c=n("I0q5"),p=["components"],l={title:"ImageManipulator",sourceCodeUrl:"https://github.com/expo/expo/tree/sdk-42/packages/expo-image-manipulator"},u=[{depth:2,type:"text",title:"Installation"},{depth:2,type:"text",title:"Usage"},{depth:2,type:"text",title:"API"},{depth:2,type:"text",title:"Methods"},{depth:3,type:"inlineCode",title:"ImageManipulator.manipulateAsync(uri, actions, saveOptions)"},{depth:4,type:"text",title:"Arguments"},{depth:4,type:"text",title:"Returns"}],m={meta:l,headings:u};function b(e){var t=e.components,n=Object(r.a)(e,p);return Object(i.b)("wrapper",Object(a.a)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"expo-image-manipulator"))," provides an API to modify images stored on the local file system."),Object(i.b)(s.a,{android:!0,emulator:!0,ios:!0,simulator:!0,web:!0,mdxType:"PlatformsSection"}),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)(o.b,{packageName:"expo-image-manipulator",mdxType:"InstallSection"}),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("p",null,"This will first rotate the image 90 degrees clockwise, then flip the rotated image vertically and save it as a PNG."),Object(i.b)(c.a,{label:"Basic ImageManipulator usage",files:{"assets/snack-icon.png":"https://snack-code-uploads.s3.us-west-1.amazonaws.com/~asset/2f7d32b1787708aba49b3586082d327b"},dependencies:["expo-asset","expo-image-manipulator"],mdxType:"SnackInline"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import React, { useState, useEffect } from 'react';\nimport { Button, View, Image } from 'react-native';\nimport { Asset } from 'expo-asset';\nimport * as ImageManipulator from 'expo-image-manipulator';\n\nexport default function App() {\n  const [ready, setReady] = useState(false);\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      const image = Asset.fromModule(require('./assets/snack-icon.png'));\n      await image.downloadAsync();\n      setImage(image);\n      setReady(true);\n    })();\n  }, []);\n\n  const _rotate90andFlip = async () => {\n    const manipResult = await ImageManipulator.manipulateAsync(\n      image.localUri || image.uri,\n      [{ rotate: 90 }, { flip: ImageManipulator.FlipType.Vertical }],\n      { compress: 1, format: ImageManipulator.SaveFormat.PNG }\n    );\n    setImage(manipResult);\n  };\n\n  const _renderImage = () => {\n    return (\n      <View\n        style={{\n          marginVertical: 20,\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}>\n        <Image\n          source={{ uri: image.localUri || image.uri }}\n          style={{ width: 300, height: 300, resizeMode: 'contain' }}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <View style={{ flex: 1, justifyContent: 'center' }}>\n      {ready && image && _renderImage()}\n      <Button title=\"Rotate and Flip\" onPress={_rotate90andFlip} />\n    </View>\n  );\n}\n"))),Object(i.b)("h2",{id:"api"},"API"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import * as ImageManipulator from 'expo-image-manipulator';\n")),Object(i.b)("h2",{id:"methods"},"Methods"),Object(i.b)("h3",{id:"imagemanipulatormanipulateasyncuri-actions-saveoptions"},Object(i.b)("inlineCode",{parentName:"h3"},"ImageManipulator.manipulateAsync(uri, actions, saveOptions)")),Object(i.b)("p",null,"Manipulate the image provided via ",Object(i.b)("inlineCode",{parentName:"p"},"uri"),". Available modifications are rotating, flipping (mirroring), resizing and cropping. Each invocation results in a new file. With one invocation you can provide a set of actions to perform over the image. Overwriting the source file would not have an effect in displaying the result as images are cached."),Object(i.b)("h4",{id:"arguments"},"Arguments"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"uri (",Object(i.b)("em",{parentName:"strong"},"string"),")")," -- URI of the file to manipulate. Should be on the local file system.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"actions (",Object(i.b)("em",{parentName:"strong"},"array"),")")," --"),Object(i.b)("p",{parentName:"li"},"An array of objects representing manipulation options. Each object should have ",Object(i.b)("em",{parentName:"p"},"only one")," of the following keys that corresponds to specific transformation:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"resize (",Object(i.b)("em",{parentName:"strong"},"object"),")")," -- An object of shape ",Object(i.b)("inlineCode",{parentName:"li"},"{ width, height }"),". Values correspond to the result image dimensions. If you specify only one value, the other will be calculated automatically to preserve image ratio."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"rotate (",Object(i.b)("em",{parentName:"strong"},"number"),")")," -- Degrees to rotate the image. Rotation is clockwise when the value is positive and counter-clockwise when negative."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"flip (",Object(i.b)("em",{parentName:"strong"},"string"),")")," -- ",Object(i.b)("inlineCode",{parentName:"li"},"ImageManipulator.FlipType.{Vertical, Horizontal}"),". Only one flip per transformation is available. If you want to flip according to both axes then provide two separate transformations."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"crop (",Object(i.b)("em",{parentName:"strong"},"object"),")")," -- An object of shape ",Object(i.b)("inlineCode",{parentName:"li"},"{ originX, originY, width, height }"),". Fields specify top-left corner and dimensions of a crop rectangle."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"saveOptions (",Object(i.b)("em",{parentName:"strong"},"object"),")")," -- A map defining how modified image should be saved:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"compress (",Object(i.b)("em",{parentName:"strong"},"number"),")")," -- A value in range ",Object(i.b)("inlineCode",{parentName:"li"},"0.0")," - ",Object(i.b)("inlineCode",{parentName:"li"},"1.0")," specifying compression level of the result image. ",Object(i.b)("inlineCode",{parentName:"li"},"1")," means no compression (highest quality) and ",Object(i.b)("inlineCode",{parentName:"li"},"0")," the highest compression (lowest quality)."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"format (",Object(i.b)("em",{parentName:"strong"},"string"),")")," -- ",Object(i.b)("inlineCode",{parentName:"li"},"ImageManipulator.SaveFormat.{JPEG, PNG}"),". Specifies what type of compression should be used and what is the result file extension. ",Object(i.b)("inlineCode",{parentName:"li"},"SaveFormat.PNG")," compression is lossless but slower, ",Object(i.b)("inlineCode",{parentName:"li"},"SaveFormat.JPEG")," is faster but the image has visible artifacts. Defaults to ",Object(i.b)("inlineCode",{parentName:"li"},"SaveFormat.JPEG"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"base64 (",Object(i.b)("em",{parentName:"strong"},"boolean"),")")," -- Whether to also include the image data in Base64 format.")))),Object(i.b)("h4",{id:"returns"},"Returns"),Object(i.b)("p",null,"Returns ",Object(i.b)("inlineCode",{parentName:"p"},"{ uri, width, height }")," where ",Object(i.b)("inlineCode",{parentName:"p"},"uri")," is a URI to the modified image (useable as the source for an ",Object(i.b)("inlineCode",{parentName:"p"},"Image"),"/",Object(i.b)("inlineCode",{parentName:"p"},"Video")," element), ",Object(i.b)("inlineCode",{parentName:"p"},"width, height")," specify the dimensions of the image. It can contain also ",Object(i.b)("inlineCode",{parentName:"p"},"base64")," - it is included if the ",Object(i.b)("inlineCode",{parentName:"p"},"base64")," saveOption was truthy, and is a string containing the JPEG/PNG (depending on ",Object(i.b)("inlineCode",{parentName:"p"},"format"),") data of the image in Base64--prepend that with ",Object(i.b)("inlineCode",{parentName:"p"},"'data:image/xxx;base64,'")," to get a data URI, which you can use as the source for an ",Object(i.b)("inlineCode",{parentName:"p"},"Image")," element for example (where ",Object(i.b)("inlineCode",{parentName:"p"},"xxx")," is 'jpeg' or 'png')."))}b.isMDXComponent=!0},cpVT:function(e,t,n){"use strict";function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,"a",(function(){return a}))},kWbz:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/versions/v42.0.0/sdk/imagemanipulator",function(){return n("IS2d")}])},kiQV:function(e){e.exports=JSON.parse('{"name":"expo-docs","version":"44.0.0","private":true,"scripts":{"dev":"rimraf .next/preval && next dev -p 3002","build":"cross-env NODE_OPTIONS=--max-old-space-size=8192 next build","export":"yarn run build && next export && yarn run export-issue-404","export-issue-404":"echo \\"\ud83d\udee0  Patching https://github.com/vercel/next.js/issues/16528\\"; cp out/404/index.html out/404.html","export-server":"http-server out -p 8000","import-react-native-docs":"node ./scripts/import-react-native-docs.js","test-links":"node --async-stack-traces --unhandled-rejections=strict ./scripts/test-links.js","prettier":"prettier --write \'**/*.{js,ts,tsx,md}\'","lint":"tsc --noEmit && eslint .","lint-links":"remark -u validate-links ./pages","watch":"tsc --noEmit -w","test":"jest","schema-sync":"node --async-stack-traces --unhandled-rejections=strict ./scripts/schema-sync.js","remove-version":"node --unhandled-rejections=strict ./scripts/remove-version.js"},"resolutions":{"webpack":"^5.28.0"},"dependencies":{"@emotion/react":"^11.4.0","@expo/spawn-async":"^1.5.0","@expo/styleguide":"^4.0.1","@mdx-js/loader":"^1.6.22","@mdx-js/mdx":"^1.6.22","@mdx-js/react":"^1.6.22","@mdx-js/runtime":"^1.6.22","@reach/tabs":"^0.15.0","@sentry/browser":"^5.6.1","date-fns":"^2.28.0","docsearch.js":"^2.5.2","emoji-regex":"^9.2.2","front-matter":"^2.3.0","fs-extra":"^6.0.1","github-slugger":"^1.3.0","hotshot":"^1.0.5","lodash":"^4.17.20","next":"^11.1.4","nprogress":"0.2.0","path-browserify":"^1.0.1","prism-react-renderer":"1.0.2","prop-types":"15.7.2","react":"^17.0.2","react-diff-view":"^2.4.7","react-dom":"^17.0.2","react-feather":"^2.0.9","react-markdown":"^6.0.3","react-player":"^1.11.1","react-visibility-sensor":"^5.1.1","remark-gfm":"^1.0.0","tippy.js":"^6.3.1"},"devDependencies":{"@apidevtools/json-schema-ref-parser":"^9.0.9","@babel/core":"^7.13.14","@emotion/babel-preset-css-prop":"^11.2.0","@emotion/jest":"^11.7.1","@testing-library/jest-dom":"5.11.0","@testing-library/react":"10.4.3","@testing-library/react-hooks":"^7.0.2","@types/cacache":"^15.0.1","@types/fs-extra":"^9.0.11","@types/github-slugger":"^1.3.0","@types/google.analytics":"^0.0.41","@types/gtag.js":"^0.0.6","@types/lodash":"^4.14.161","@types/long":"^4.0.1","@types/mdx-js__react":"^1.5.3","@types/node":"^14.11.2","@types/nprogress":"^0.2.0","@types/react":"^17.0.11","axios":"^0.21.2","babel-plugin-module-resolver":"3.1.1","babel-plugin-preval":"^3.0.1","cross-env":"^5.2.0","danger":"^9.2.10","esbuild-loader":"^2.13.1","eslint":"^8.6.0","eslint-config-next":"^10.2.3","eslint-config-universe":"^10.0.0","eslint-plugin-lodash":"^7.3.0","http-server":"^0.12.3","jest":"^27.4.7","js-yaml":"^4.1.0","prettier":"^2.3.1","puppeteer":"^10.2.0","react-test-renderer":"^17.0.2","rehype-slug":"^4.0.1","remark-cli":"^9.0.0","remark-frontmatter":"^2.0.0","remark-validate-links":"^10.0.4","rimraf":"^3.0.2","semver":"^7.3.5","sitemap":"^6.3.0","typescript":"^4.5.4","unist-builder":"^2.0.0","unist-util-visit":"^2.0.3"}}')},ufKf:function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return r}));var a="https://snack.expo.dev";function r(e){var t=e.templateId,n=e.code,a=e.files,r=e.baseURL,i={};return a&&Object.keys(a).forEach((function(e){var t=a[e],n=/\.(jsx?|tsx?|json|md)$/i.test(e);i[e]=n?{type:"CODE",url:t.match(/^https?:\/\//)?t:"".concat(r,"/").concat(t)}:{type:"ASSET",contents:t}})),t?i["App.js"]={type:"CODE",url:"".concat(r,"/").concat(t,".js")}:n&&(i["App.js"]={type:"CODE",contents:n}),i}},z7pX:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var a=n("6FTQ");var r=n("8rE2");function i(e){return function(e){if(Array.isArray(e))return Object(a.a)(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||Object(r.a)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}}},[["kWbz",1,0,2,3,4,5,6]]]);