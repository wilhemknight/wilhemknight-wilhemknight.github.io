_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[1454],{go0j:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/versions/v45.0.0/sdk/document-picker",function(){return o("qhPp")}])},qhPp:function(e,t,o){"use strict";o.r(t),o.d(t,"meta",(function(){return u})),o.d(t,"headings",(function(){return b})),o.d(t,"default",(function(){return m}));var n=o("HALo"),i=o("dhJC"),a=(o("q1tI"),o("7ljp")),p=o("3Ukx"),r=o("HCau"),c=o("hykZ"),l=o("3iwL"),d=["components"],u={title:"DocumentPicker",sourceCodeUrl:"https://github.com/expo/expo/tree/sdk-45/packages/expo-document-picker",packageName:"expo-document-picker"},b=[{depth:2,type:"text",title:"Installation"},{depth:2,type:"text",title:"Configuration"},{depth:3,type:"text",title:"Managed workflow"},{depth:3,type:"text",title:"Bare workflow"},{depth:2,type:"text",title:"API"}],s={meta:u,headings:b};function m(e){var t=e.components,o=Object(i.a)(e,d);return Object(a.b)("wrapper",Object(n.a)({},s,o,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Provides access to the system's UI for selecting documents from the available providers on the user's device."),Object(a.b)(l.a,{file:"sdk/documentpicker.mp4",loop:!1,mdxType:"Video"}),Object(a.b)(c.a,{android:!0,emulator:!0,ios:!0,simulator:!0,web:!0,mdxType:"PlatformsSection"}),Object(a.b)("h2",{id:"installation"},"Installation"),Object(a.b)(r.a,{mdxType:"APIInstallSection"}),Object(a.b)("h2",{id:"configuration"},"Configuration"),Object(a.b)("h3",{id:"managed-workflow"},"Managed workflow"),Object(a.b)("p",null,"For iOS, outside of the Expo Go app, the DocumentPicker module requires the iCloud entitlement to work properly. You need to set the ",Object(a.b)("inlineCode",{parentName:"p"},"usesIcloudStorage")," key to ",Object(a.b)("inlineCode",{parentName:"p"},"true")," in your ",Object(a.b)("strong",{parentName:"p"},"app.json")," file as specified ",Object(a.b)("a",{parentName:"p",href:"/workflow/configuration/#ios"},"here"),"."),Object(a.b)("p",null,"In addition, you'll also need to enable the iCloud Application Service in your App identifier. This can be done in the detail of your ",Object(a.b)("a",{parentName:"p",href:"https://developer.apple.com/account/ios/identifier/bundle"},"App ID in the Apple developer interface"),"."),Object(a.b)("p",null,"Enable iCloud service with CloudKit support, create one iCloud Container, and name it ",Object(a.b)("inlineCode",{parentName:"p"},"iCloud.<your_bundle_identifier>"),"."),Object(a.b)("p",null,"And finally, to apply those changes, you'll need to revoke your existing provisioning profile and run ",Object(a.b)("inlineCode",{parentName:"p"},"expo build:ios -c")),Object(a.b)("h3",{id:"bare-workflow"},"Bare workflow"),Object(a.b)("p",null,"For iOS bare projects, the ",Object(a.b)("inlineCode",{parentName:"p"},"DocumentPicker")," module requires the iCloud entitlement to work properly. If your app doesn't have it already, you can add it by opening the project in Xcode and following these steps:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"In the project, go to the ",Object(a.b)("inlineCode",{parentName:"li"},"Capabilities")," tab"),Object(a.b)("li",{parentName:"ul"},"Set the iCloud switch to ",Object(a.b)("inlineCode",{parentName:"li"},"on")),Object(a.b)("li",{parentName:"ul"},"Check the ",Object(a.b)("inlineCode",{parentName:"li"},"iCloud Documents")," checkbox")),Object(a.b)("h2",{id:"api"},"API"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"import * as DocumentPicker from 'expo-document-picker';\n")),Object(a.b)(p.a,{packageName:"expo-document-picker",apiName:"DocumentPicker",mdxType:"APISection"}))}m.isMDXComponent=!0}},[["go0j",1,0,2,3,4,5,6,7,8,9,10,11,12,13,14,15]]]);