_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[280],{"7ljp":function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return s}));var a=n("q1tI"),l=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=l.a.createContext({}),d=function(e){var t=l.a.useContext(c),n=t;return e&&(n="function"===typeof e?e(t):b(b({},t),e)),n},p=function(e){var t=d(e.components);return l.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},u=l.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=d(n),u=a,s=p["".concat(i,".").concat(u)]||p[u]||m[u]||r;return n?l.a.createElement(s,b(b({ref:t},c),{},{components:n})):l.a.createElement(s,b({ref:t},c))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"===typeof e||a){var r=n.length,i=new Array(r);i[0]=u;var b={};for(var o in t)hasOwnProperty.call(t,o)&&(b[o]=t[o]);b.originalType=e,b.mdxType="string"===typeof e?e:a,i[1]=b;for(var c=2;c<r;c++)i[c]=n[c];return l.a.createElement.apply(null,i)}return l.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},HALo:function(e,t,n){"use strict";function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return a}))},Qetd:function(e,t,n){"use strict";var a=Object.assign.bind(Object);e.exports=a,e.exports.default=e.exports},dhJC:function(e,t,n){"use strict";function a(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}n.d(t,"a",(function(){return a}))},"hA/Q":function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return b})),n.d(t,"headings",(function(){return o})),n.d(t,"default",(function(){return d}));var a=n("HALo"),l=n("dhJC"),r=(n("q1tI"),n("7ljp")),i=["components"],b={id:"text-style-props",title:"Text Style Props"},o=[{depth:3,type:"text",title:"Example"},{depth:1,type:"text",title:"Reference"},{depth:2,type:"text",title:"Props"},{depth:3,type:"inlineCode",title:"color"},{depth:3,type:"inlineCode",title:"fontFamily"},{depth:3,type:"inlineCode",title:"fontSize"},{depth:3,type:"inlineCode",title:"fontStyle"},{depth:3,type:"inlineCode",title:"fontWeight"},{depth:3,type:"inlineCode",title:"includeFontPadding   "},{depth:3,type:"inlineCode",title:"fontVariant"},{depth:3,type:"inlineCode",title:"letterSpacing"},{depth:3,type:"inlineCode",title:"lineHeight"},{depth:3,type:"inlineCode",title:"textAlign"},{depth:3,type:"inlineCode",title:"textAlignVertical   "},{depth:3,type:"inlineCode",title:"textDecorationColor   "},{depth:3,type:"inlineCode",title:"textDecorationLine"},{depth:3,type:"inlineCode",title:"textDecorationStyle   "},{depth:3,type:"inlineCode",title:"textShadowColor"},{depth:3,type:"inlineCode",title:"textShadowOffset"},{depth:3,type:"inlineCode",title:"textShadowRadius"},{depth:3,type:"inlineCode",title:"textTransform"},{depth:3,type:"inlineCode",title:"writingDirection   "}],c={meta:b,headings:o};function d(e){var t=e.components,n=Object(l.a)(e,i);return Object(r.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h3",{id:"example"},"Example"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},"import React, { useState } from 'react';\nimport {\n  FlatList,\n  Platform,\n  ScrollView,\n  Slider,\n  StatusBar,\n  StyleSheet,\n  Switch,\n  Text,\n  TouchableWithoutFeedback,\n  View,\n} from 'react-native';\n\nconst fontStyles = ['normal', 'italic'];\nconst fontVariants = [\n  undefined,\n  'small-caps',\n  'oldstyle-nums',\n  'lining-nums',\n  'tabular-nums',\n  'proportional-nums',\n];\nconst fontWeights = [\n  'normal',\n  'bold',\n  '100',\n  '200',\n  '300',\n  '400',\n  '500',\n  '600',\n  '700',\n  '800',\n  '900',\n];\nconst textAlignments = ['auto', 'left', 'right', 'center', 'justify'];\nconst textDecorationLines = ['none', 'underline', 'line-through', 'underline line-through'];\nconst textDecorationStyles = ['solid', 'double', 'dotted', 'dashed'];\nconst textTransformations = ['none', 'uppercase', 'lowercase', 'capitalize'];\nconst textAlignmentsVertical = ['auto', 'top', 'bottom', 'center'];\nconst writingDirections = ['auto', 'ltr', 'rtl'];\n\nconst App = () => {\n  const [fontSize, setFontSize] = useState(10);\n  const [fontStyleIdx, setFontStyleIdx] = useState(0);\n  const [fontWeightIdx, setFontWeightIdx] = useState(0);\n  const [lineHeight, setLineHeight] = useState(10);\n  const [textAlignIdx, setTextAlignIdx] = useState(0);\n  const [textDecorationLineIdx, setTextDecorationLineIdx] = useState(0);\n  const [includeFontPadding, setIncludeFontPadding] = useState(false);\n  const [textVerticalAlignIdx, setTextVerticalAlignIdx] = useState(0);\n  const [fontVariantIdx, setFontVariantIdx] = useState(0);\n  const [letterSpacing, setLetterSpacing] = useState(0);\n  const [textDecorationStyleIdx, setTextDecorationStyleIdx] = useState(0);\n  const [textTransformIdx, setTextTransformIdx] = useState(0);\n  const [writingDirectionIdx, setWritingDirectionIdx] = useState(0);\n  const [textShadowRadius, setTextShadowRadius] = useState(0);\n  const [textShadowOffset, setTextShadowOffset] = useState({\n    height: 0,\n    width: 0,\n  });\n\n  return (\n    <View style={styles.container}>\n      <Text\n        style={[\n          styles.paragraph,\n          {\n            fontSize,\n            fontStyle: fontStyles[fontStyleIdx],\n            fontWeight: fontWeights[fontWeightIdx],\n            lineHeight,\n            textAlign: textAlignments[textAlignIdx],\n            textDecorationLine: textDecorationLines[textDecorationLineIdx],\n            textTransform: textTransformations[textTransformIdx],\n            textAlignVertical: textAlignmentsVertical[textVerticalAlignIdx],\n            fontVariant: [fontVariants[fontVariantIdx]],\n            letterSpacing,\n            includeFontPadding,\n            textDecorationStyle: textDecorationStyles[textDecorationStyleIdx],\n            writingDirection: writingDirections[writingDirectionIdx],\n            textShadowOffset,\n            textShadowRadius,\n          },\n        ]}>\n        Lorem Ipsum is simply dummy text of the printing and typesetting industry. 112 Likes\n      </Text>\n      <ScrollView>\n        <View>\n          <Text>Common platform properties</Text>\n          <CustomSlider\n            label=\"Text Shadow Offset - Height\"\n            value={textShadowOffset.height}\n            minimumValue={-40}\n            maximumValue={40}\n            handleValueChange={val => setTextShadowOffset(prev => ({ ...prev, height: val }))}\n          />\n          <CustomSlider\n            label=\"Text Shadow Offset - Width\"\n            value={textShadowOffset.width}\n            minimumValue={-40}\n            maximumValue={40}\n            handleValueChange={val => setTextShadowOffset(prev => ({ ...prev, width: val }))}\n          />\n          <CustomSlider\n            label=\"Font Size\"\n            value={fontSize}\n            maximumValue={40}\n            handleValueChange={setFontSize}\n          />\n          <CustomPicker\n            label=\"Font Style\"\n            data={fontStyles}\n            currentIndex={fontStyleIdx}\n            onSelected={setFontStyleIdx}\n          />\n          <CustomPicker\n            label=\"Font Weight\"\n            data={fontWeights}\n            currentIndex={fontWeightIdx}\n            onSelected={setFontWeightIdx}\n          />\n          <CustomSlider\n            label=\"Line Height\"\n            value={lineHeight}\n            minimumValue={10}\n            maximumValue={50}\n            handleValueChange={setLineHeight}\n          />\n          <CustomPicker\n            label=\"Text Align\"\n            data={textAlignments}\n            currentIndex={textAlignIdx}\n            onSelected={setTextAlignIdx}\n          />\n          <CustomPicker\n            label=\"Text Decoration Line\"\n            data={textDecorationLines}\n            currentIndex={textDecorationLineIdx}\n            onSelected={setTextDecorationLineIdx}\n          />\n          <CustomSlider\n            label=\"Text Shadow Radius\"\n            value={textShadowRadius}\n            handleValueChange={setTextShadowRadius}\n          />\n          <CustomPicker\n            label=\"Font Variant\"\n            data={fontVariants}\n            currentIndex={fontVariantIdx}\n            onSelected={setFontVariantIdx}\n          />\n          <CustomSlider\n            label=\"Letter Spacing\"\n            step={0.1}\n            value={letterSpacing}\n            handleValueChange={setLetterSpacing}\n          />\n          <CustomPicker\n            label=\"Text Transform\"\n            data={textTransformations}\n            currentIndex={textTransformIdx}\n            onSelected={setTextTransformIdx}\n          />\n        </View>\n        {Platform.OS === 'android' && (\n          <View style={styles.platformContainer}>\n            <Text style={styles.platformContainerTitle}>Android only properties</Text>\n            <CustomPicker\n              label=\"Text Vertical Align\"\n              data={textAlignmentsVertical}\n              currentIndex={textVerticalAlignIdx}\n              onSelected={setTextVerticalAlignIdx}\n            />\n            <CustomSwitch\n              label=\"Include Font Padding\"\n              handleValueChange={setIncludeFontPadding}\n              value={includeFontPadding}\n            />\n          </View>\n        )}\n        {Platform.OS === 'ios' && (\n          <View style={styles.platformContainer}>\n            <Text style={styles.platformContainerTitle}>iOS only properties</Text>\n            <CustomPicker\n              label=\"Text Decoration Style\"\n              data={textDecorationStyles}\n              currentIndex={textDecorationStyleIdx}\n              onSelected={setTextDecorationStyleIdx}\n            />\n            <CustomPicker\n              label=\"Writing Direction\"\n              data={writingDirections}\n              currentIndex={writingDirectionIdx}\n              onSelected={setWritingDirectionIdx}\n            />\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\nconst CustomSwitch = ({ label, handleValueChange, value }) => {\n  return (\n    <>\n      <Text style={styles.title}>{label}</Text>\n      <View style={{ alignItems: 'flex-start' }}>\n        <Switch\n          trackColor={{ false: '#767577', true: '#DAA520' }}\n          thumbColor={value ? '#DAA520' : '#f4f3f4'}\n          onValueChange={handleValueChange}\n          value={value}\n        />\n      </View>\n    </>\n  );\n};\n\nconst CustomSlider = ({\n  label,\n  handleValueChange,\n  step = 1,\n  minimumValue = 0,\n  maximumValue = 10,\n  value,\n}) => {\n  return (\n    <>\n      {label && <Text style={styles.title}>{`${label} (${value.toFixed(2)})`}</Text>}\n      <View style={styles.wrapperHorizontal}>\n        <Slider\n          thumbTintColor=\"#DAA520\"\n          minimumTrackTintColor=\"#DAA520\"\n          minimumValue={minimumValue}\n          maximumValue={maximumValue}\n          step={step}\n          onValueChange={handleValueChange}\n          value={value}\n        />\n      </View>\n    </>\n  );\n};\n\nconst CustomPicker = ({ label, data, currentIndex, onSelected }) => {\n  return (\n    <>\n      <Text style={styles.title}>{label}</Text>\n      <View style={styles.wrapperHorizontal}>\n        <FlatList\n          bounces\n          horizontal\n          data={data}\n          keyExtractor={(item, idx) => String(item)}\n          renderItem={({ item, index }) => {\n            const selected = index === currentIndex;\n            return (\n              <TouchableWithoutFeedback onPress={() => onSelected(index)}>\n                <View\n                  style={[\n                    styles.itemStyleHorizontal,\n                    selected && styles.itemSelectedStyleHorizontal,\n                  ]}>\n                  <Text\n                    style={{\n                      textAlign: 'center',\n                      color: selected ? 'black' : 'grey',\n                      fontWeight: selected ? 'bold' : 'normal',\n                    }}>\n                    {item + ''}\n                  </Text>\n                </View>\n              </TouchableWithoutFeedback>\n            );\n          }}\n        />\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: StatusBar.currentHeight,\n    backgroundColor: '#ecf0f1',\n    padding: 8,\n  },\n  paragraph: {\n    color: 'black',\n    textDecorationColor: 'yellow',\n    textShadowColor: 'red',\n    textShadowRadius: 1,\n    margin: 24,\n  },\n  wrapperHorizontal: {\n    height: 54,\n    justifyContent: 'center',\n    color: 'black',\n    marginBottom: 12,\n  },\n  itemStyleHorizontal: {\n    marginRight: 10,\n    height: 50,\n    padding: 8,\n    borderWidth: 1,\n    borderColor: 'grey',\n    borderRadius: 25,\n    textAlign: 'center',\n    justifyContent: 'center',\n  },\n  itemSelectedStyleHorizontal: {\n    borderWidth: 2,\n    borderColor: '#DAA520',\n  },\n  platformContainer: {\n    marginTop: 8,\n    borderTopWidth: 1,\n  },\n  platformContainerTitle: {\n    marginTop: 8,\n  },\n  title: {\n    fontWeight: 'bold',\n    marginVertical: 4,\n  },\n});\n\nexport default App;\n")),Object(r.b)("h1",{id:"reference"},"Reference"),Object(r.b)("h2",{id:"props"},"Props"),Object(r.b)("h3",{id:"color"},Object(r.b)("inlineCode",{parentName:"h3"},"color")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("a",{parentName:"td",href:"https://reactnative.dev/docs/0.64/colors"},"color"))))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"fontfamily"},Object(r.b)("inlineCode",{parentName:"h3"},"fontFamily")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"string")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"fontsize"},Object(r.b)("inlineCode",{parentName:"h3"},"fontSize")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"number")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"fontstyle"},Object(r.b)("inlineCode",{parentName:"h3"},"fontStyle")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"enum(",Object(r.b)("inlineCode",{parentName:"td"},"'normal'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'italic'"),")")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"fontweight"},Object(r.b)("inlineCode",{parentName:"h3"},"fontWeight")),Object(r.b)("p",null,"Specifies font weight. The values ",Object(r.b)("inlineCode",{parentName:"p"},"'normal'")," and ",Object(r.b)("inlineCode",{parentName:"p"},"'bold'")," are supported for most fonts. Not all fonts have a variant for each of the numeric values, in that case the closest one is chosen."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"enum(",Object(r.b)("inlineCode",{parentName:"td"},"'normal'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'bold'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'100'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'200'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'300'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'400'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'500'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'600'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'700'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'800'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'900'"),")"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"'normal'"))))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"includefontpadding-android"},Object(r.b)("inlineCode",{parentName:"h3"},"includeFontPadding")," ",Object(r.b)("strong",{parentName:"h3"},"(Android)")),Object(r.b)("p",null,"Set to ",Object(r.b)("inlineCode",{parentName:"p"},"false")," to remove extra font padding intended to make space for certain ascenders / descenders. With some fonts, this padding can make text look slightly misaligned when centered vertically. For best results also set ",Object(r.b)("inlineCode",{parentName:"p"},"textAlignVertical")," to ",Object(r.b)("inlineCode",{parentName:"p"},"center"),"."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"bool"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"true"))))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"fontvariant"},Object(r.b)("inlineCode",{parentName:"h3"},"fontVariant")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"array of enum(",Object(r.b)("inlineCode",{parentName:"td"},"'small-caps'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'oldstyle-nums'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'lining-nums'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'tabular-nums'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'proportional-nums'"),")"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"[]"))))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"letterspacing"},Object(r.b)("inlineCode",{parentName:"h3"},"letterSpacing")),Object(r.b)("p",null,"Increase or decrease the spacing between characters. By default there is no extra letter spacing."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"number")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"lineheight"},Object(r.b)("inlineCode",{parentName:"h3"},"lineHeight")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"number")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"textalign"},Object(r.b)("inlineCode",{parentName:"h3"},"textAlign")),Object(r.b)("p",null,"Specifies text alignment. On Android, the value 'justify' is only supported on Oreo (8.0) or above (API level >= 26). The value will fallback to ",Object(r.b)("inlineCode",{parentName:"p"},"left")," on lower Android versions."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"enum(",Object(r.b)("inlineCode",{parentName:"td"},"'auto'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'left'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'right'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'center'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'justify'"),")"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"'auto'"))))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"textalignvertical-android"},Object(r.b)("inlineCode",{parentName:"h3"},"textAlignVertical")," ",Object(r.b)("strong",{parentName:"h3"},"(Android)")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"enum(",Object(r.b)("inlineCode",{parentName:"td"},"'auto'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'top'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'bottom'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'center'"),")"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"'auto'"))))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"textdecorationcolor-ios"},Object(r.b)("inlineCode",{parentName:"h3"},"textDecorationColor")," ",Object(r.b)("strong",{parentName:"h3"},"(iOS)")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("a",{parentName:"td",href:"https://reactnative.dev/docs/0.64/colors"},"color"))))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"textdecorationline"},Object(r.b)("inlineCode",{parentName:"h3"},"textDecorationLine")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"enum(",Object(r.b)("inlineCode",{parentName:"td"},"'none'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'underline'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'line-through'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'underline line-through'"),")"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"'none'"))))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"textdecorationstyle-ios"},Object(r.b)("inlineCode",{parentName:"h3"},"textDecorationStyle")," ",Object(r.b)("strong",{parentName:"h3"},"(iOS)")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"enum(",Object(r.b)("inlineCode",{parentName:"td"},"'solid'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'double'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'dotted'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'dashed'"),")"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"'solid'"))))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"textshadowcolor"},Object(r.b)("inlineCode",{parentName:"h3"},"textShadowColor")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("a",{parentName:"td",href:"https://reactnative.dev/docs/0.64/colors"},"color"))))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"textshadowoffset"},Object(r.b)("inlineCode",{parentName:"h3"},"textShadowOffset")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"object: { width?: number, height?: number }")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"textshadowradius"},Object(r.b)("inlineCode",{parentName:"h3"},"textShadowRadius")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"number")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"texttransform"},Object(r.b)("inlineCode",{parentName:"h3"},"textTransform")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"enum(",Object(r.b)("inlineCode",{parentName:"td"},"'none'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'uppercase'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'lowercase'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'capitalize'"),")"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"'none'"))))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"writingdirection-ios"},Object(r.b)("inlineCode",{parentName:"h3"},"writingDirection")," ",Object(r.b)("strong",{parentName:"h3"},"(iOS)")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"enum(",Object(r.b)("inlineCode",{parentName:"td"},"'auto'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'ltr'"),", ",Object(r.b)("inlineCode",{parentName:"td"},"'rtl'"),")"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"'auto'"))))))}d.isMDXComponent=!0},pZUU:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/versions/latest/react-native/text-style-props",function(){return n("hA/Q")}])}},[["pZUU",1,0]]]);