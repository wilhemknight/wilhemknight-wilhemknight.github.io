_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[476],{kbuv:function(e,n,t){"use strict";t.r(n),t.d(n,"meta",(function(){return b})),t.d(n,"headings",(function(){return s})),t.d(n,"default",(function(){return f}));var i=t("HALo"),o=t("dhJC"),r=(t("q1tI"),t("7ljp")),a=t("3Ukx"),c=t("vFJ3"),p=t("HCau"),l=t("hykZ"),u=["components"],b={title:"BuildProperties",sourceCodeUrl:"https://github.com/expo/expo/tree/main/packages/expo-build-properties",packageName:"expo-build-properties"},s=[{depth:2,type:"text",title:"Installation"},{depth:2,type:"text",title:"Configuration in app.json / app.config.js"},{depth:3,type:"text",title:"Full configurable properties"},{depth:2,type:"text",title:"API"}],d={meta:b,headings:s};function f(e){var n=e.components,t=Object(o.a)(e,u);return Object(r.b)("wrapper",Object(i.a)({},d,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"expo-build-properties"))," is a ",Object(r.b)("a",{parentName:"p",href:"/guides/config-plugins/"},"config plugin")," for ",Object(r.b)("a",{parentName:"p",href:"/introduction/managed-vs-bare/"},"managed apps")," to override the default native build properties. During ",Object(r.b)("inlineCode",{parentName:"p"},"expo prebuild"),", the config plugin will populate build properties from given ",Object(r.b)("a",{parentName:"p",href:"/versions/unversioned/sdk/build-properties/#configuration-in-appjson--appconfigjs"},"config")," to ",Object(r.b)("inlineCode",{parentName:"p"},"android/gradle.properties")," and ",Object(r.b)("inlineCode",{parentName:"p"},"ios/Podfile.properties.json"),"."),Object(r.b)(l.a,{ios:!0,simulator:!0,android:!0,emulator:!0,mdxType:"PlatformsSection"}),Object(r.b)("h2",{id:"installation"},"Installation"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"Note:")," To use this config plugin, your apps must be a managed app and build by either ",Object(r.b)("a",{parentName:"p",href:"/../../../../../../build/introduction/"},"EAS Build")," or ",Object(r.b)("inlineCode",{parentName:"p"},"expo run:[android|ios]"),". This package has no effect on project's built with the classic ",Object(r.b)("inlineCode",{parentName:"p"},"expo build:android")," or ",Object(r.b)("inlineCode",{parentName:"p"},"expo build:ios")," commands, or when running in the Expo Go app.")),Object(r.b)(p.a,{hideBareInstructions:!0,mdxType:"APIInstallSection"}),Object(r.b)("h2",{id:"configuration-in-appjson--appconfigjs"},"Configuration in app.json / app.config.js"),Object(r.b)(c.b,{mdxType:"ConfigPluginExample"},Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'{\n  "expo": {\n    "plugins": [\n      [\n        "expo-build-properties",\n        {\n          "android": {\n            "compileSdkVersion": 31,\n            "targetSdkVersion": 31,\n            "buildToolsVersion": "31.0.0"\n          },\n          "ios": {\n            "deploymentTarget": "13.0"\n          }\n        }\n      ]\n    ]\n  }\n}\n'))),Object(r.b)("h3",{id:"full-configurable-properties"},"Full configurable properties"),Object(r.b)("p",null,"Learn more from ",Object(r.b)("a",{parentName:"p",href:"/versions/unversioned/sdk/build-properties/#pluginconfigtype"},Object(r.b)("inlineCode",{parentName:"a"},"PluginConfigType"))),Object(r.b)("h2",{id:"api"},"API"),Object(r.b)(a.a,{packageName:"expo-build-properties",apiName:"BuildProperties",mdxType:"APISection"}))}f.isMDXComponent=!0},v4UJ:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/versions/unversioned/sdk/build-properties",function(){return t("kbuv")}])},vFJ3:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"d",(function(){return l})),t.d(n,"b",(function(){return b})),t.d(n,"c",(function(){return d}));var i=t("q1tI"),o=t.n(i),r=t("3WCi"),a=t("8jhV"),c=t("AeFk"),p=function(e){var n=e.children;return Object(i.useEffect)((function(){if("string"===typeof n)throw new Error("Content inside 'ConfigClassic' needs to be surrounded by new lines to be parsed as markdown.\n\nMake sure there is a blank new line before and after this content: '".concat(n,"'"))}),[n]),Object(c.c)("details",null,Object(c.c)("summary",null,Object(c.c)(a.a,null,"Are you using the classic build system?")," (",Object(c.c)(r.b,null,"expo build:[android|ios]"),")"),n)},l=function(e){var n=e.children;return Object(i.useEffect)((function(){if("string"===typeof n)throw new Error("Content inside 'ConfigReactNative' needs to be surrounded by new lines to be parsed as markdown.\n\nMake sure there is a blank new line before and after this content: '".concat(n,"'"))}),[n]),Object(c.c)("details",null,Object(c.c)("summary",null,Object(c.c)(a.a,null,"Are you using this library in a bare React Native app?")),n)},u=t("6LaW"),b=function(e){var n=e.children;return Object(i.useEffect)((function(){if("string"===typeof n)throw new Error("Content inside 'ConfigPluginExample' needs to be surrounded by new lines to be parsed as markdown.\n\nMake sure there is a blank new line before and after this content: '".concat(n,"'"))}),[n]),Object(c.c)(o.a.Fragment,null,Object(c.c)(u.b,null,"Example app.json with config plugin"),n)},s={android:"Android",ios:"iOS",web:"Web"},d=function(e){var n=e.children,t=e.properties;return Object(c.c)(o.a.Fragment,null,Object(c.c)(u.b,null,"Configurable properties"),!!n&&Object(c.c)(a.b,null,n),Object(c.c)("table",null,Object(c.c)("thead",null,Object(c.c)("tr",null,Object(c.c)("th",null,"Name"),Object(c.c)("th",null,"Default"),Object(c.c)("th",null,"Description"))),Object(c.c)("tbody",null,t.map((function(e){return Object(c.c)("tr",{key:e.name},Object(c.c)("td",null,Object(c.c)(r.b,null,e.name)),Object(c.c)("td",null,e.default?Object(c.c)(r.b,null,e.default):"-"),Object(c.c)("td",null,!!e.platform&&Object(c.c)(a.a,null,s[e.platform]," only "),e.description))})))))}}},[["v4UJ",1,0,2,3,4,5,6,7,8,9,10,11,12,13,14]]]);