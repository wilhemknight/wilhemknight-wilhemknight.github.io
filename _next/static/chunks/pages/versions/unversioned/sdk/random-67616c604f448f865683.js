_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[527],{"2nns":function(e,n,t){"use strict";t.r(n),t.d(n,"meta",(function(){return m})),t.d(n,"headings",(function(){return s})),t.d(n,"default",(function(){return l}));var a=t("HALo"),o=t("dhJC"),r=(t("q1tI"),t("7ljp")),i=t("3Ukx"),p=t("HCau"),d=t("hykZ"),c=["components"],m={title:"Random",sourceCodeUrl:"https://github.com/expo/expo/tree/main/packages/expo-random",packageName:"expo-random"},s=[{depth:2,type:"text",title:"Installation"},{depth:2,type:"text",title:"API"}],b={meta:m,headings:s};function l(e){var n=e.components,t=Object(o.a)(e,c);return Object(r.b)("wrapper",Object(a.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"expo-random")," provides a native interface for creating strong random bytes. With ",Object(r.b)("inlineCode",{parentName:"p"},"Random")," you can create values equivalent to Node.js core ",Object(r.b)("inlineCode",{parentName:"p"},"crypto.randomBytes")," API. ",Object(r.b)("inlineCode",{parentName:"p"},"expo-random")," also works with ",Object(r.b)("inlineCode",{parentName:"p"},"expo-standard-web-crypto"),", which implements the W3C Crypto API for generating random bytes."),Object(r.b)(d.a,{android:!0,emulator:!0,ios:!0,simulator:!0,web:!0,mdxType:"PlatformsSection"}),Object(r.b)("h2",{id:"installation"},"Installation"),Object(r.b)(p.a,{mdxType:"APIInstallSection"}),Object(r.b)("h2",{id:"api"},"API"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},"import * as Random from 'expo-random';\n")),Object(r.b)(i.a,{packageName:"expo-random",apiName:"Random",mdxType:"APISection"}))}l.isMDXComponent=!0},JIHk:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/versions/unversioned/sdk/random",function(){return t("2nns")}])}},[["JIHk",1,0,2,3,4,5,6,7,8,9,10,11,12,13,14]]]);