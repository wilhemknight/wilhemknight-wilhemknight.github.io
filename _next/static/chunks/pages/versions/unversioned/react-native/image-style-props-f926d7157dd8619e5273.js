_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[415],{"0Qg5":function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/versions/unversioned/react-native/image-style-props",function(){return n("WSyJ")}])},"7ljp":function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return u}));var r=n("q1tI"),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),p=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"===typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,b=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,u=d["".concat(b,".").concat(m)]||d[m]||s[m]||i;return n?a.a.createElement(u,l(l({ref:t},c),{},{components:n})):a.a.createElement(u,l({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"===typeof e||r){var i=n.length,b=new Array(i);b[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"===typeof e?e:r,b[1]=l;for(var c=2;c<i;c++)b[c]=n[c];return a.a.createElement.apply(null,b)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},HALo:function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return r}))},Qetd:function(e,t,n){"use strict";var r=Object.assign.bind(Object);e.exports=r,e.exports.default=e.exports},WSyJ:function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return l})),n.d(t,"headings",(function(){return o})),n.d(t,"default",(function(){return p}));var r=n("HALo"),a=n("dhJC"),i=(n("q1tI"),n("7ljp")),b=["components"],l={id:"image-style-props",title:"Image Style Props"},o=[{depth:2,type:"text",title:"Examples"},{depth:3,type:"text",title:"Image Resize Mode"},{depth:3,type:"text",title:"Image Border"},{depth:3,type:"text",title:"Image Border Radius"},{depth:3,type:"text",title:"Image Tint"},{depth:1,type:"text",title:"Reference"},{depth:2,type:"text",title:"Props"},{depth:3,type:"inlineCode",title:"backfaceVisibility"},{depth:3,type:"inlineCode",title:"backgroundColor"},{depth:3,type:"inlineCode",title:"borderBottomLeftRadius"},{depth:3,type:"inlineCode",title:"borderBottomRightRadius"},{depth:3,type:"inlineCode",title:"borderColor"},{depth:3,type:"inlineCode",title:"borderRadius"},{depth:3,type:"inlineCode",title:"borderTopLeftRadius"},{depth:3,type:"inlineCode",title:"borderTopRightRadius"},{depth:3,type:"inlineCode",title:"borderWidth"},{depth:3,type:"inlineCode",title:"opacity"},{depth:3,type:"inlineCode",title:"overflow"},{depth:3,type:"inlineCode",title:"overlayColor   "},{depth:3,type:"inlineCode",title:"resizeMode"},{depth:3,type:"inlineCode",title:"tintColor"}],c={meta:l,headings:o};function p(e){var t=e.components,n=Object(a.a)(e,b);return Object(i.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"examples"},"Examples"),Object(i.b)("h3",{id:"image-resize-mode"},"Image Resize Mode"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import React from 'react';\nimport { View, Image, Text, StyleSheet } from 'react-native';\n\nconst DisplayAnImageWithStyle = () => {\n  return (\n    <View style={styles.container}>\n      <View>\n        <Image\n          style={{\n            resizeMode: 'cover',\n            height: 100,\n            width: 200,\n          }}\n          source={require('@expo/snack-static/react-native-logo.png')}\n        />\n        <Text>resizeMode : cover</Text>\n      </View>\n      <View>\n        <Image\n          style={{\n            resizeMode: 'contain',\n            height: 100,\n            width: 200,\n          }}\n          source={require('@expo/snack-static/react-native-logo.png')}\n        />\n        <Text>resizeMode : contain</Text>\n      </View>\n      <View>\n        <Image\n          style={{\n            resizeMode: 'stretch',\n            height: 100,\n            width: 200,\n          }}\n          source={require('@expo/snack-static/react-native-logo.png')}\n        />\n        <Text>resizeMode : stretch</Text>\n      </View>\n      <View>\n        <Image\n          style={{\n            resizeMode: 'repeat',\n            height: 100,\n            width: 200,\n          }}\n          source={require('@expo/snack-static/react-native-logo.png')}\n        />\n        <Text>resizeMode : repeat</Text>\n      </View>\n      <View>\n        <Image\n          style={{\n            resizeMode: 'center',\n            height: 100,\n            width: 200,\n          }}\n          source={require('@expo/snack-static/react-native-logo.png')}\n        />\n        <Text>resizeMode : center</Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'vertical',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    height: '100%',\n    textAlign: 'center',\n  },\n});\n\nexport default DisplayAnImageWithStyle;\n")),Object(i.b)("h3",{id:"image-border"},"Image Border"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import React from 'react';\nimport { View, Image, StyleSheet, Text } from 'react-native';\n\nconst DisplayAnImageWithStyle = () => {\n  return (\n    <View style={styles.container}>\n      <Image\n        style={{\n          borderColor: 'red',\n          borderWidth: 5,\n          height: 100,\n          width: 200,\n        }}\n        source={require('@expo/snack-static/react-native-logo.png')}\n      />\n      <Text>borderColor & borderWidth</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'vertical',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    textAlign: 'center',\n  },\n});\n\nexport default DisplayAnImageWithStyle;\n")),Object(i.b)("h3",{id:"image-border-radius"},"Image Border Radius"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import React from 'react';\nimport { View, Image, StyleSheet, Text } from 'react-native';\n\nconst DisplayAnImageWithStyle = () => {\n  return (\n    <View style={styles.container}>\n      <View>\n        <Image\n          style={{\n            borderTopRightRadius: 20,\n            height: 100,\n            width: 200,\n          }}\n          source={require('@expo/snack-static/react-native-logo.png')}\n        />\n        <Text>borderTopRightRadius</Text>\n      </View>\n      <View>\n        <Image\n          style={{\n            borderBottomRightRadius: 20,\n            height: 100,\n            width: 200,\n          }}\n          source={require('@expo/snack-static/react-native-logo.png')}\n        />\n        <Text>borderBottomRightRadius</Text>\n      </View>\n      <View>\n        <Image\n          style={{\n            borderBottomLeftRadius: 20,\n            height: 100,\n            width: 200,\n          }}\n          source={require('@expo/snack-static/react-native-logo.png')}\n        />\n        <Text>borderBottomLeftRadius</Text>\n      </View>\n      <View>\n        <Image\n          style={{\n            borderTopLeftRadius: 20,\n            height: 100,\n            width: 200,\n          }}\n          source={require('@expo/snack-static/react-native-logo.png')}\n        />\n        <Text>borderTopLeftRadius</Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'vertical',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    height: '100%',\n    textAlign: 'center',\n  },\n});\n\nexport default DisplayAnImageWithStyle;\n")),Object(i.b)("h3",{id:"image-tint"},"Image Tint"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import React from 'react';\nimport { View, Image, StyleSheet, Text } from 'react-native';\n\nconst DisplayAnImageWithStyle = () => {\n  return (\n    <View style={styles.container}>\n      <Image\n        style={{\n          tintColor: '#000000',\n          resizeMode: 'contain',\n          height: 100,\n          width: 200,\n        }}\n        source={require('@expo/snack-static/react-native-logo.png')}\n      />\n      <Text>tintColor</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'vertical',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    textAlign: 'center',\n  },\n});\n\nexport default DisplayAnImageWithStyle;\n")),Object(i.b)("h1",{id:"reference"},"Reference"),Object(i.b)("h2",{id:"props"},"Props"),Object(i.b)("h3",{id:"backfacevisibility"},Object(i.b)("inlineCode",{parentName:"h3"},"backfaceVisibility")),Object(i.b)("p",null,"The property defines whether or not the back face of a rotated image should be visible."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Type"),Object(i.b)("th",{parentName:"tr",align:null},"Default"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"enum(",Object(i.b)("inlineCode",{parentName:"td"},"'visible'"),", ",Object(i.b)("inlineCode",{parentName:"td"},"'hidden'"),")"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"'visible'"))))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"backgroundcolor"},Object(i.b)("inlineCode",{parentName:"h3"},"backgroundColor")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Type"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{parentName:"td",href:"https://reactnative.dev/docs/0.64/colors"},"color"))))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"borderbottomleftradius"},Object(i.b)("inlineCode",{parentName:"h3"},"borderBottomLeftRadius")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Type"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"number")))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"borderbottomrightradius"},Object(i.b)("inlineCode",{parentName:"h3"},"borderBottomRightRadius")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Type"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"number")))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"bordercolor"},Object(i.b)("inlineCode",{parentName:"h3"},"borderColor")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Type"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{parentName:"td",href:"https://reactnative.dev/docs/0.64/colors"},"color"))))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"borderradius"},Object(i.b)("inlineCode",{parentName:"h3"},"borderRadius")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Type"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"number")))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"bordertopleftradius"},Object(i.b)("inlineCode",{parentName:"h3"},"borderTopLeftRadius")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Type"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"number")))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"bordertoprightradius"},Object(i.b)("inlineCode",{parentName:"h3"},"borderTopRightRadius")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Type"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"number")))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"borderwidth"},Object(i.b)("inlineCode",{parentName:"h3"},"borderWidth")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Type"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"number")))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"opacity"},Object(i.b)("inlineCode",{parentName:"h3"},"opacity")),Object(i.b)("p",null,"Set an opacity value for the image. The number should be in the range from ",Object(i.b)("inlineCode",{parentName:"p"},"0.0")," to ",Object(i.b)("inlineCode",{parentName:"p"},"1.0"),"."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Type"),Object(i.b)("th",{parentName:"tr",align:null},"Default"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"number"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"1.0"))))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"overflow"},Object(i.b)("inlineCode",{parentName:"h3"},"overflow")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Type"),Object(i.b)("th",{parentName:"tr",align:null},"Default"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"enum(",Object(i.b)("inlineCode",{parentName:"td"},"'visible'"),", ",Object(i.b)("inlineCode",{parentName:"td"},"'hidden'"),")"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"'visible'"))))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"overlaycolor-android"},Object(i.b)("inlineCode",{parentName:"h3"},"overlayColor")," ",Object(i.b)("strong",{parentName:"h3"},"(Android)")),Object(i.b)("p",null,"When the image has rounded corners, specifying an overlayColor will cause the remaining space in the corners to be filled with a solid color. This is useful in cases which are not supported by the Android implementation of rounded corners:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Certain resize modes, such as ",Object(i.b)("inlineCode",{parentName:"li"},"'contain'")),Object(i.b)("li",{parentName:"ul"},"Animated GIFs")),Object(i.b)("p",null,"A typical way to use this prop is with images displayed on a solid background and setting the ",Object(i.b)("inlineCode",{parentName:"p"},"overlayColor")," to the same color as the background."),Object(i.b)("p",null,"For details of how this works under the hood, see ",Object(i.b)("a",{parentName:"p",href:"https://frescolib.org/docs/rounded-corners-and-circles.html"},"Fresco documentation"),"."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Type"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"string")))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"resizemode"},Object(i.b)("inlineCode",{parentName:"h3"},"resizeMode")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Type"),Object(i.b)("th",{parentName:"tr",align:null},"Default"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"enum(",Object(i.b)("inlineCode",{parentName:"td"},"'cover'"),", ",Object(i.b)("inlineCode",{parentName:"td"},"'contain'"),", ",Object(i.b)("inlineCode",{parentName:"td"},"'stretch'"),", ",Object(i.b)("inlineCode",{parentName:"td"},"'repeat'"),", ",Object(i.b)("inlineCode",{parentName:"td"},"'center'"),")"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"'cover'"))))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"tintcolor"},Object(i.b)("inlineCode",{parentName:"h3"},"tintColor")),Object(i.b)("p",null,"Changes the color of all the non-transparent pixels to the tintColor."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Type"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{parentName:"td",href:"https://reactnative.dev/docs/0.64/colors"},"color"))))))}p.isMDXComponent=!0},dhJC:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}n.d(t,"a",(function(){return r}))}},[["0Qg5",1,0]]]);