_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[427],{"7ljp":function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return s}));var a=n("q1tI"),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"===typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,b=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(n),O=a,s=d["".concat(b,".").concat(O)]||d[O]||m[O]||l;return n?r.a.createElement(s,i(i({ref:t},c),{},{components:n})):r.a.createElement(s,i({ref:t},c))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"===typeof e||a){var l=n.length,b=new Array(l);b[0]=O;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"===typeof e?e:a,b[1]=i;for(var c=2;c<l;c++)b[c]=n[c];return r.a.createElement.apply(null,b)}return r.a.createElement.apply(null,n)}O.displayName="MDXCreateElement"},"9F4/":function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return i})),n.d(t,"headings",(function(){return o})),n.d(t,"default",(function(){return p}));var a=n("HALo"),r=n("dhJC"),l=(n("q1tI"),n("7ljp")),b=["components"],i={id:"platform",title:"Platform"},o=[{depth:2,type:"text",title:"Example"},{depth:1,type:"text",title:"Reference"},{depth:2,type:"text",title:"Properties"},{depth:3,type:"inlineCode",title:"constants"},{depth:3,type:"inlineCode",title:"isPad   "},{depth:3,type:"inlineCode",title:"isTV"},{depth:3,type:"inlineCode",title:"isTesting"},{depth:3,type:"inlineCode",title:"OS"},{depth:3,type:"inlineCode",title:"Version"},{depth:2,type:"text",title:"Methods"},{depth:3,type:"inlineCode",title:"select()"},{depth:4,type:"text",title:"Parameters:"}],c={meta:i,headings:o};function p(e){var t=e.components,n=Object(r.a)(e,b);return Object(l.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"example"},"Example"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"import React from 'react';\nimport { Platform, StyleSheet, Text, ScrollView } from 'react-native';\n\nconst App = () => {\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <Text>OS</Text>\n      <Text style={styles.value}>{Platform.OS}</Text>\n      <Text>OS Version</Text>\n      <Text style={styles.value}>{Platform.Version}</Text>\n      <Text>isTV</Text>\n      <Text style={styles.value}>{Platform.isTV.toString()}</Text>\n      {Platform.OS === 'ios' && (\n        <>\n          <Text>isPad</Text>\n          <Text style={styles.value}>{Platform.isPad.toString()}</Text>\n        </>\n      )}\n      <Text>Constants</Text>\n      <Text style={styles.value}>{JSON.stringify(Platform.constants, null, 2)}</Text>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  value: {\n    fontWeight: '600',\n    padding: 4,\n    marginBottom: 8,\n  },\n});\n\nexport default App;\n")),Object(l.b)("hr",null),Object(l.b)("h1",{id:"reference"},"Reference"),Object(l.b)("h2",{id:"properties"},"Properties"),Object(l.b)("h3",{id:"constants"},Object(l.b)("inlineCode",{parentName:"h3"},"constants")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"Platform.constants;\n")),Object(l.b)("p",null,"Returns an object which contains all available common and specific constants related to the platform."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Properties:")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},Object(l.b)("div",{className:"widerColumn"},"Name")),Object(l.b)("th",{parentName:"tr",align:null},"Type"),Object(l.b)("th",{parentName:"tr",align:null},"Optional"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"isTesting"),Object(l.b)("td",{parentName:"tr",align:null},"boolean"),Object(l.b)("td",{parentName:"tr",align:null},"No"),Object(l.b)("td",{parentName:"tr",align:null})),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"reactNativeVersion"),Object(l.b)("td",{parentName:"tr",align:null},"object"),Object(l.b)("td",{parentName:"tr",align:null},"No"),Object(l.b)("td",{parentName:"tr",align:null},"Information about React Native version. Keys are ",Object(l.b)("inlineCode",{parentName:"td"},"major"),", ",Object(l.b)("inlineCode",{parentName:"td"},"minor"),", ",Object(l.b)("inlineCode",{parentName:"td"},"patch")," with optional ",Object(l.b)("inlineCode",{parentName:"td"},"prerelease")," and values are ",Object(l.b)("inlineCode",{parentName:"td"},"number"),"s.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Version ",Object(l.b)("strong",{parentName:"td"},"(Android)")),Object(l.b)("td",{parentName:"tr",align:null},"number"),Object(l.b)("td",{parentName:"tr",align:null},"No"),Object(l.b)("td",{parentName:"tr",align:null},"OS version constant specific to Android.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Release ",Object(l.b)("strong",{parentName:"td"},"(Android)")),Object(l.b)("td",{parentName:"tr",align:null},"string"),Object(l.b)("td",{parentName:"tr",align:null},"No"),Object(l.b)("td",{parentName:"tr",align:null})),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Serial ",Object(l.b)("strong",{parentName:"td"},"(Android)")),Object(l.b)("td",{parentName:"tr",align:null},"string"),Object(l.b)("td",{parentName:"tr",align:null},"No"),Object(l.b)("td",{parentName:"tr",align:null},"Hardware serial number of an Android device.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Fingerprint ",Object(l.b)("strong",{parentName:"td"},"(Android)")),Object(l.b)("td",{parentName:"tr",align:null},"string"),Object(l.b)("td",{parentName:"tr",align:null},"No"),Object(l.b)("td",{parentName:"tr",align:null},"A string that uniquely identifies the build.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Model ",Object(l.b)("strong",{parentName:"td"},"(Android)")),Object(l.b)("td",{parentName:"tr",align:null},"string"),Object(l.b)("td",{parentName:"tr",align:null},"No"),Object(l.b)("td",{parentName:"tr",align:null},"The end-user-visible name for the Android device.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Brand ",Object(l.b)("strong",{parentName:"td"},"(Android)")),Object(l.b)("td",{parentName:"tr",align:null},"string"),Object(l.b)("td",{parentName:"tr",align:null},"No"),Object(l.b)("td",{parentName:"tr",align:null},"The consumer-visible brand with which the product/hardware will be associated.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"Manufacturer ",Object(l.b)("strong",{parentName:"td"},"(Android)")),Object(l.b)("td",{parentName:"tr",align:null},"string"),Object(l.b)("td",{parentName:"tr",align:null},"No"),Object(l.b)("td",{parentName:"tr",align:null},"The manufacturer of the Android device.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"ServerHost ",Object(l.b)("strong",{parentName:"td"},"(Android)")),Object(l.b)("td",{parentName:"tr",align:null},"string"),Object(l.b)("td",{parentName:"tr",align:null},"Yes"),Object(l.b)("td",{parentName:"tr",align:null})),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"uiMode ",Object(l.b)("strong",{parentName:"td"},"(Android)")),Object(l.b)("td",{parentName:"tr",align:null},"string"),Object(l.b)("td",{parentName:"tr",align:null},"No"),Object(l.b)("td",{parentName:"tr",align:null},"Possible values are: ",Object(l.b)("inlineCode",{parentName:"td"},"'car'"),", ",Object(l.b)("inlineCode",{parentName:"td"},"'desk'"),", ",Object(l.b)("inlineCode",{parentName:"td"},"'normal'"),",",Object(l.b)("inlineCode",{parentName:"td"},"'tv'"),", ",Object(l.b)("inlineCode",{parentName:"td"},"'watch'")," and ",Object(l.b)("inlineCode",{parentName:"td"},"'unknown'"),". Read more about ",Object(l.b)("a",{parentName:"td",href:"https://developer.android.com/reference/android/app/UiModeManager.html"},"Android ModeType"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"forceTouchAvailable ",Object(l.b)("strong",{parentName:"td"},"(iOS)")),Object(l.b)("td",{parentName:"tr",align:null},"boolean"),Object(l.b)("td",{parentName:"tr",align:null},"No"),Object(l.b)("td",{parentName:"tr",align:null},"Indicate the availability of 3D Touch on a device.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"interfaceIdiom ",Object(l.b)("strong",{parentName:"td"},"(iOS)")),Object(l.b)("td",{parentName:"tr",align:null},"string"),Object(l.b)("td",{parentName:"tr",align:null},"No"),Object(l.b)("td",{parentName:"tr",align:null},"The interface type for the device. Read more about ",Object(l.b)("a",{parentName:"td",href:"https://developer.apple.com/documentation/uikit/uiuserinterfaceidiom"},"UIUserInterfaceIdiom"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"osVersion ",Object(l.b)("strong",{parentName:"td"},"(iOS)")),Object(l.b)("td",{parentName:"tr",align:null},"string"),Object(l.b)("td",{parentName:"tr",align:null},"No"),Object(l.b)("td",{parentName:"tr",align:null},"OS version constant specific to iOS.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"systemName ",Object(l.b)("strong",{parentName:"td"},"(iOS)")),Object(l.b)("td",{parentName:"tr",align:null},"string"),Object(l.b)("td",{parentName:"tr",align:null},"No"),Object(l.b)("td",{parentName:"tr",align:null},"OS name constant specific to iOS.")))),Object(l.b)("hr",null),Object(l.b)("h3",{id:"ispad-ios"},Object(l.b)("inlineCode",{parentName:"h3"},"isPad")," ",Object(l.b)("strong",{parentName:"h3"},"(iOS)")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"Platform.isPad;\n")),Object(l.b)("p",null,"Returns a boolean which defines if device is an iPad."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Type"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"boolean")))),Object(l.b)("hr",null),Object(l.b)("h3",{id:"istv"},Object(l.b)("inlineCode",{parentName:"h3"},"isTV")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"Platform.isTV;\n")),Object(l.b)("p",null,"Returns a boolean which defines if device is a TV."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Type"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"boolean")))),Object(l.b)("hr",null),Object(l.b)("h3",{id:"istesting"},Object(l.b)("inlineCode",{parentName:"h3"},"isTesting")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"Platform.isTesting;\n")),Object(l.b)("p",null,"Returns a boolean which defines if application is running in Developer Mode with testing flag set."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Type"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"boolean")))),Object(l.b)("hr",null),Object(l.b)("h3",{id:"os"},Object(l.b)("inlineCode",{parentName:"h3"},"OS")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"static Platform.OS\n")),Object(l.b)("p",null,"Returns string value representing the current OS."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Type"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"enum(",Object(l.b)("inlineCode",{parentName:"td"},"'android'"),", ",Object(l.b)("inlineCode",{parentName:"td"},"'ios'"),")")))),Object(l.b)("hr",null),Object(l.b)("h3",{id:"version"},Object(l.b)("inlineCode",{parentName:"h3"},"Version")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"Platform.Version;\n")),Object(l.b)("p",null,"Returns the version of the OS."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Type"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"number ",Object(l.b)("strong",{parentName:"td"},"(Android)"),Object(l.b)("hr",null),"string ",Object(l.b)("strong",{parentName:"td"},"(iOS)"))))),Object(l.b)("h2",{id:"methods"},"Methods"),Object(l.b)("h3",{id:"select"},Object(l.b)("inlineCode",{parentName:"h3"},"select()")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"static select(config: object): any\n")),Object(l.b)("p",null,"Returns the most fitting value for the platform you are currently running on."),Object(l.b)("h4",{id:"parameters"},"Parameters:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Name"),Object(l.b)("th",{parentName:"tr",align:null},"Type"),Object(l.b)("th",{parentName:"tr",align:null},"Required"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"config"),Object(l.b)("td",{parentName:"tr",align:null},"object"),Object(l.b)("td",{parentName:"tr",align:null},"Yes"),Object(l.b)("td",{parentName:"tr",align:null},"See config description below.")))),Object(l.b)("p",null,"Select method returns the most fitting value for the platform you are currently running on. That is, if you're running on a phone, ",Object(l.b)("inlineCode",{parentName:"p"},"android")," and ",Object(l.b)("inlineCode",{parentName:"p"},"ios")," keys will take preference. If those are not specified, ",Object(l.b)("inlineCode",{parentName:"p"},"native")," key will be used and then the ",Object(l.b)("inlineCode",{parentName:"p"},"default")," key."),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"config")," parameter is an object with the following keys:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"android")," (any)"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"ios")," (any)"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"native")," (any)"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"default")," (any)")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Example usage:")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"import { Platform, StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    ...Platform.select({\n      android: {\n        backgroundColor: 'green',\n      },\n      ios: {\n        backgroundColor: 'red',\n      },\n      default: {\n        // other platforms, web for example\n        backgroundColor: 'blue',\n      },\n    }),\n  },\n});\n")),Object(l.b)("p",null,"This will result in a container having ",Object(l.b)("inlineCode",{parentName:"p"},"flex: 1")," on all platforms, a green background color on Android, a red background color on iOS, and a blue background color on other platforms."),Object(l.b)("p",null,"Since the value of the corresponding platform key can be of type ",Object(l.b)("inlineCode",{parentName:"p"},"any"),", ",Object(l.b)("a",{parentName:"p",href:"/versions/unversioned/react-native/platform/#select"},Object(l.b)("inlineCode",{parentName:"a"},"select"))," method can also be used to return platform-specific components, like below:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"const Component = Platform.select({\n  ios: () => require('ComponentIOS'),\n  android: () => require('ComponentAndroid'),\n})();\n\n<Component />;\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"const Component = Platform.select({\n  native: () => require('ComponentForNative'),\n  default: () => require('ComponentForWeb'),\n})();\n\n<Component />;\n")))}p.isMDXComponent=!0},HALo:function(e,t,n){"use strict";function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return a}))},Qetd:function(e,t,n){"use strict";var a=Object.assign.bind(Object);e.exports=a,e.exports.default=e.exports},dhJC:function(e,t,n){"use strict";function a(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}n.d(t,"a",(function(){return a}))},vJ3O:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/versions/unversioned/react-native/platform",function(){return n("9F4/")}])}},[["vJ3O",1,0]]]);