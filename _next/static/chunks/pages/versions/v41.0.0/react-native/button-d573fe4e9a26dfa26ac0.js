_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[731],{"7ljp":function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return O}));var a=n("q1tI"),r=n.n(a);function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){b(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},b=Object.keys(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"===typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},s=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,b=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),s=a,O=d["".concat(l,".").concat(s)]||d[s]||u[s]||b;return n?r.a.createElement(O,o(o({ref:t},c),{},{components:n})):r.a.createElement(O,o({ref:t},c))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"===typeof e||a){var b=n.length,l=new Array(b);l[0]=s;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"===typeof e?e:a,l[1]=o;for(var c=2;c<b;c++)l[c]=n[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},HALo:function(e,t,n){"use strict";function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return a}))},PTax:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/versions/v41.0.0/react-native/button",function(){return n("fapf")}])},Qetd:function(e,t,n){"use strict";var a=Object.assign.bind(Object);e.exports=a,e.exports.default=e.exports},dhJC:function(e,t,n){"use strict";function a(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},b=Object.keys(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}n.d(t,"a",(function(){return a}))},fapf:function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return o})),n.d(t,"headings",(function(){return i})),n.d(t,"default",(function(){return p}));var a=n("HALo"),r=n("dhJC"),b=(n("q1tI"),n("7ljp")),l=["components"],o={id:"button",title:"Button"},i=[{depth:2,type:"text",title:"Example"},{depth:1,type:"text",title:"Reference"},{depth:2,type:"text",title:"Props"},{depth:3,type:"strong",title:""},{depth:3,type:"strong",title:""},{depth:3,type:"inlineCode",title:"accessibilityLabel"},{depth:3,type:"inlineCode",title:"color"},{depth:3,type:"inlineCode",title:"disabled"},{depth:3,type:"inlineCode",title:"hasTVPreferredFocus   "},{depth:3,type:"inlineCode",title:"nextFocusDown      "},{depth:3,type:"inlineCode",title:"nextFocusForward      "},{depth:3,type:"inlineCode",title:"nextFocusLeft      "},{depth:3,type:"inlineCode",title:"nextFocusRight      "},{depth:3,type:"inlineCode",title:"nextFocusUp      "},{depth:3,type:"inlineCode",title:"testID"},{depth:3,type:"inlineCode",title:"touchSoundDisabled   "}],c={meta:o,headings:i};function p(e){var t=e.components,n=Object(r.a)(e,l);return Object(b.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,"A basic button component that should render nicely on any platform. Supports a minimal level of customization."),Object(b.b)("p",null,"If this button doesn't look right for your app, you can build your own button using ",Object(b.b)("a",{parentName:"p",href:"/versions/v41.0.0/react-native/touchableopacity/"},"TouchableOpacity")," or ",Object(b.b)("a",{parentName:"p",href:"/versions/v41.0.0/react-native/touchablewithoutfeedback/"},"TouchableWithoutFeedback"),". For inspiration, look at the ",Object(b.b)("a",{parentName:"p",href:"https://github.com/facebook/react-native/blob/master/Libraries/Components/Button.js"},"source code for this button component"),". Or, take a look at the ",Object(b.b)("a",{parentName:"p",href:"https://js.coach/?menu%5Bcollections%5D=React%20Native&page=1&query=button"},"wide variety of button components built by the community"),"."),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'<Button\n  onPress={onPressLearnMore}\n  title="Learn More"\n  color="#841584"\n  accessibilityLabel="Learn more about this purple button"\n/>\n')),Object(b.b)("h2",{id:"example"},"Example"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},"import React from 'react';\nimport { StyleSheet, Button, View, SafeAreaView, Text, Alert } from 'react-native';\n\nconst Separator = () => <View style={styles.separator} />;\n\nexport default function App() {\n  return (\n    <SafeAreaView style={styles.container}>\n      <View>\n        <Text style={styles.title}>\n          The title and onPress handler are required. It is recommended to set accessibilityLabel to\n          help make your app usable by everyone.\n        </Text>\n        <Button title=\"Press me\" onPress={() => Alert.alert('Simple Button pressed')} />\n      </View>\n      <Separator />\n      <View>\n        <Text style={styles.title}>\n          Adjust the color in a way that looks standard on each platform. On iOS, the color prop\n          controls the color of the text. On Android, the color adjusts the background color of the\n          button.\n        </Text>\n        <Button\n          title=\"Press me\"\n          color=\"#f194ff\"\n          onPress={() => Alert.alert('Button with adjusted color pressed')}\n        />\n      </View>\n      <Separator />\n      <View>\n        <Text style={styles.title}>All interaction for the component are disabled.</Text>\n        <Button title=\"Press me\" disabled onPress={() => Alert.alert('Cannot press this one')} />\n      </View>\n      <Separator />\n      <View>\n        <Text style={styles.title}>\n          This layout strategy lets the title define the width of the button.\n        </Text>\n        <View style={styles.fixToText}>\n          <Button title=\"Left button\" onPress={() => Alert.alert('Left button pressed')} />\n          <Button title=\"Right button\" onPress={() => Alert.alert('Right button pressed')} />\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    marginHorizontal: 16,\n  },\n  title: {\n    textAlign: 'center',\n    marginVertical: 8,\n  },\n  fixToText: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  separator: {\n    marginVertical: 8,\n    borderBottomColor: '#737373',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n  },\n});\n")),Object(b.b)("hr",null),Object(b.b)("h1",{id:"reference"},"Reference"),Object(b.b)("h2",{id:"props"},"Props"),Object(b.b)("h3",{id:"onpress"},Object(b.b)("strong",{parentName:"h3"},Object(b.b)("inlineCode",{parentName:"strong"},"onPress"))),Object(b.b)("p",null,"Handler to be called when the user taps the button. The first function argument is an event in form of ",Object(b.b)("a",{parentName:"p",href:"https://reactnative.dev/docs/pressevent"},"PressEvent"),"."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"function"),Object(b.b)("td",{parentName:"tr",align:null},"Yes")))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"title"},Object(b.b)("strong",{parentName:"h3"},Object(b.b)("inlineCode",{parentName:"strong"},"title"))),Object(b.b)("p",null,"Text to display inside the button. On Android the given title will be converted to the uppercased form."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"string"),Object(b.b)("td",{parentName:"tr",align:null},"Yes")))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"accessibilitylabel"},Object(b.b)("inlineCode",{parentName:"h3"},"accessibilityLabel")),Object(b.b)("p",null,"Text to display for blindness accessibility features."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"string"),Object(b.b)("td",{parentName:"tr",align:null},"No")))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"color"},Object(b.b)("inlineCode",{parentName:"h3"},"color")),Object(b.b)("p",null,"Color of the text (iOS), or background color of the button (Android)."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Required"),Object(b.b)("th",{parentName:"tr",align:null},"Default"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"https://reactnative.dev/docs/colors"},"color")),Object(b.b)("td",{parentName:"tr",align:null},"No"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"'#2196F3'")," ",Object(b.b)("strong",{parentName:"td"},"(Android)"),Object(b.b)("hr",null),Object(b.b)("inlineCode",{parentName:"td"},"'#007AFF'")," ",Object(b.b)("strong",{parentName:"td"},"(iOS)"))))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"disabled"},Object(b.b)("inlineCode",{parentName:"h3"},"disabled")),Object(b.b)("p",null,"If ",Object(b.b)("inlineCode",{parentName:"p"},"true"),", disable all interactions for this component."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Required"),Object(b.b)("th",{parentName:"tr",align:null},"Default"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"bool"),Object(b.b)("td",{parentName:"tr",align:null},"No"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"false"))))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"hastvpreferredfocus-tv"},Object(b.b)("inlineCode",{parentName:"h3"},"hasTVPreferredFocus")," ",Object(b.b)("strong",{parentName:"h3"},"(TV)")),Object(b.b)("p",null,"TV preferred focus."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Required"),Object(b.b)("th",{parentName:"tr",align:null},"Default"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"bool"),Object(b.b)("td",{parentName:"tr",align:null},"No"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"false"))))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"nextfocusdown-android-tv"},Object(b.b)("inlineCode",{parentName:"h3"},"nextFocusDown")," ",Object(b.b)("strong",{parentName:"h3"},"(Android)")," ",Object(b.b)("strong",{parentName:"h3"},"(TV)")),Object(b.b)("p",null,"Designates the next view to receive focus when the user navigates down. See the ",Object(b.b)("a",{parentName:"p",href:"https://developer.android.com/reference/android/view/View.html#attr_android:nextFocusDown"},"Android documentation"),"."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"No")))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"nextfocusforward-android-tv"},Object(b.b)("inlineCode",{parentName:"h3"},"nextFocusForward")," ",Object(b.b)("strong",{parentName:"h3"},"(Android)")," ",Object(b.b)("strong",{parentName:"h3"},"(TV)")),Object(b.b)("p",null,"Designates the next view to receive focus when the user navigates forward. See the ",Object(b.b)("a",{parentName:"p",href:"https://developer.android.com/reference/android/view/View.html#attr_android:nextFocusForward"},"Android documentation"),"."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"No")))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"nextfocusleft-android-tv"},Object(b.b)("inlineCode",{parentName:"h3"},"nextFocusLeft")," ",Object(b.b)("strong",{parentName:"h3"},"(Android)")," ",Object(b.b)("strong",{parentName:"h3"},"(TV)")),Object(b.b)("p",null,"Designates the next view to receive focus when the user navigates left. See the ",Object(b.b)("a",{parentName:"p",href:"https://developer.android.com/reference/android/view/View.html#attr_android:nextFocusLeft"},"Android documentation"),"."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"No")))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"nextfocusright-android-tv"},Object(b.b)("inlineCode",{parentName:"h3"},"nextFocusRight")," ",Object(b.b)("strong",{parentName:"h3"},"(Android)")," ",Object(b.b)("strong",{parentName:"h3"},"(TV)")),Object(b.b)("p",null,"Designates the next view to receive focus when the user navigates right. See the ",Object(b.b)("a",{parentName:"p",href:"https://developer.android.com/reference/android/view/View.html#attr_android:nextFocusRight"},"Android documentation"),"."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"No")))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"nextfocusup-android-tv"},Object(b.b)("inlineCode",{parentName:"h3"},"nextFocusUp")," ",Object(b.b)("strong",{parentName:"h3"},"(Android)")," ",Object(b.b)("strong",{parentName:"h3"},"(TV)")),Object(b.b)("p",null,"Designates the next view to receive focus when the user navigates up. See the ",Object(b.b)("a",{parentName:"p",href:"https://developer.android.com/reference/android/view/View.html#attr_android:nextFocusUp"},"Android documentation"),"."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"No")))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"testid"},Object(b.b)("inlineCode",{parentName:"h3"},"testID")),Object(b.b)("p",null,"Used to locate this view in end-to-end tests."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Required"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"string"),Object(b.b)("td",{parentName:"tr",align:null},"No")))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"touchsounddisabled-android"},Object(b.b)("inlineCode",{parentName:"h3"},"touchSoundDisabled")," ",Object(b.b)("strong",{parentName:"h3"},"(Android)")),Object(b.b)("p",null,"If ",Object(b.b)("inlineCode",{parentName:"p"},"true"),", doesn't play system sound on touch."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Required"),Object(b.b)("th",{parentName:"tr",align:null},"Default"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"boolean"),Object(b.b)("td",{parentName:"tr",align:null},"No"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"false"))))))}p.isMDXComponent=!0}},[["PTax",1,0]]]);