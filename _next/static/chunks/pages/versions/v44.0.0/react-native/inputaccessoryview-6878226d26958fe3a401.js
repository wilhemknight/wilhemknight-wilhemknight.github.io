_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[1220],{"7ljp":function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return m}));var r=n("q1tI"),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var b=a.a.createContext({}),s=function(e){var t=a.a.useContext(b),n=t;return e&&(n="function"===typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=s(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,b=p(e,["components","mdxType","originalType","parentName"]),l=s(n),d=r,m=l["".concat(c,".").concat(d)]||l[d]||u[d]||o;return n?a.a.createElement(m,i(i({ref:t},b),{},{components:n})):a.a.createElement(m,i({ref:t},b))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"===typeof e||r){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"===typeof e?e:r,c[1]=i;for(var b=2;b<o;b++)c[b]=n[b];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},HALo:function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return r}))},Qetd:function(e,t,n){"use strict";var r=Object.assign.bind(Object);e.exports=r,e.exports.default=e.exports},dhJC:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}n.d(t,"a",(function(){return r}))},nsLS:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/versions/v44.0.0/react-native/inputaccessoryview",function(){return n("ygBI")}])},ygBI:function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return i})),n.d(t,"headings",(function(){return p})),n.d(t,"default",(function(){return s}));var r=n("HALo"),a=n("dhJC"),o=(n("q1tI"),n("7ljp")),c=["components"],i={id:"inputaccessoryview",title:"InputAccessoryView"},p=[{depth:1,type:"text",title:"Reference"},{depth:2,type:"text",title:"Props"},{depth:3,type:"inlineCode",title:"backgroundColor"},{depth:3,type:"inlineCode",title:"nativeID"},{depth:3,type:"inlineCode",title:"style"},{depth:1,type:"text",title:"Known issues"}],b={meta:i,headings:p};function s(e){var t=e.components,n=Object(a.a)(e,c);return Object(o.b)("wrapper",Object(r.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"A component which enables customization of the keyboard input accessory view on iOS. The input accessory view is displayed above the keyboard whenever a ",Object(o.b)("inlineCode",{parentName:"p"},"TextInput")," has focus. This component can be used to create custom toolbars."),Object(o.b)("p",null,"To use this component wrap your custom toolbar with the InputAccessoryView component, and set a ",Object(o.b)("inlineCode",{parentName:"p"},"nativeID"),". Then, pass that ",Object(o.b)("inlineCode",{parentName:"p"},"nativeID")," as the ",Object(o.b)("inlineCode",{parentName:"p"},"inputAccessoryViewID")," of whatever ",Object(o.b)("inlineCode",{parentName:"p"},"TextInput")," you desire. A basic example:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import React, { useState } from 'react';\nimport { Button, InputAccessoryView, ScrollView, TextInput } from 'react-native';\n\nexport default App = () => {\n  const inputAccessoryViewID = 'uniqueID';\n  const initialText = '';\n  const [text, setText] = useState(initialText);\n\n  return (\n    <>\n      <ScrollView keyboardDismissMode=\"interactive\">\n        <TextInput\n          style={{\n            padding: 16,\n            marginTop: 50,\n          }}\n          inputAccessoryViewID={inputAccessoryViewID}\n          onChangeText={setText}\n          value={text}\n          placeholder={'Please type here\u2026'}\n        />\n      </ScrollView>\n      <InputAccessoryView nativeID={inputAccessoryViewID}>\n        <Button onPress={() => setText(initialText)} title=\"Clear text\" />\n      </InputAccessoryView>\n    </>\n  );\n};\n")),Object(o.b)("p",null,"This component can also be used to create sticky text inputs (text inputs which are anchored to the top of the keyboard). To do this, wrap a ",Object(o.b)("inlineCode",{parentName:"p"},"TextInput")," with the ",Object(o.b)("inlineCode",{parentName:"p"},"InputAccessoryView")," component, and don't set a ",Object(o.b)("inlineCode",{parentName:"p"},"nativeID"),". For an example, look at ",Object(o.b)("a",{parentName:"p",href:"https://github.com/facebook/react-native/blob/master/packages/rn-tester/js/examples/InputAccessoryView/InputAccessoryViewExample.js"},"InputAccessoryViewExample.js"),"."),Object(o.b)("hr",null),Object(o.b)("h1",{id:"reference"},"Reference"),Object(o.b)("h2",{id:"props"},"Props"),Object(o.b)("h3",{id:"backgroundcolor"},Object(o.b)("inlineCode",{parentName:"h3"},"backgroundColor")),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Type"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("a",{parentName:"td",href:"https://reactnative.dev/docs/0.64/colors"},"color"))))),Object(o.b)("hr",null),Object(o.b)("h3",{id:"nativeid"},Object(o.b)("inlineCode",{parentName:"h3"},"nativeID")),Object(o.b)("p",null,"An ID which is used to associate this ",Object(o.b)("inlineCode",{parentName:"p"},"InputAccessoryView")," to specified TextInput(s)."),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Type"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"string")))),Object(o.b)("hr",null),Object(o.b)("h3",{id:"style"},Object(o.b)("inlineCode",{parentName:"h3"},"style")),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Type"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("a",{parentName:"td",href:"/versions/v44.0.0/react-native/view-style-props/"},"View Style"))))),Object(o.b)("h1",{id:"known-issues"},"Known issues"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://github.com/facebook/react-native/issues/18997"},"react-native#18997"),": Doesn't support multiline ",Object(o.b)("inlineCode",{parentName:"li"},"TextInput")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://github.com/facebook/react-native/issues/20157"},"react-native#20157"),": Can't use with a bottom tab bar")))}s.isMDXComponent=!0}},[["nsLS",1,0]]]);