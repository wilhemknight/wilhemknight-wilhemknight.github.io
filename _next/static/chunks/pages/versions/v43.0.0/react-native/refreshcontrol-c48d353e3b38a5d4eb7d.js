_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[1075],{"3Yw6":function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return o})),n.d(t,"headings",(function(){return i})),n.d(t,"default",(function(){return p}));var r=n("HALo"),a=n("dhJC"),b=(n("q1tI"),n("7ljp")),l=["components"],o={id:"refreshcontrol",title:"RefreshControl"},i=[{depth:2,type:"text",title:"Example"},{depth:1,type:"text",title:"Reference"},{depth:2,type:"text",title:"Props"},{depth:3,type:"link",title:""},{depth:3,type:"inlineCode",title:"refreshing"},{depth:3,type:"inlineCode",title:"colors   "},{depth:3,type:"inlineCode",title:"enabled   "},{depth:3,type:"inlineCode",title:"onRefresh"},{depth:3,type:"inlineCode",title:"progressBackgroundColor   "},{depth:3,type:"inlineCode",title:"progressViewOffset   "},{depth:3,type:"inlineCode",title:"size   "},{depth:3,type:"inlineCode",title:"tintColor   "},{depth:3,type:"inlineCode",title:"title   "},{depth:3,type:"inlineCode",title:"titleColor   "},{depth:2,type:"text",title:"Type Definitions"},{depth:3,type:"text",title:"RefreshLayoutConsts.SIZE"}],c={meta:o,headings:i};function p(e){var t=e.components,n=Object(a.a)(e,l);return Object(b.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,"This component is used inside a ScrollView or ListView to add pull to refresh functionality. When the ScrollView is at ",Object(b.b)("inlineCode",{parentName:"p"},"scrollY: 0"),", swiping down triggers an ",Object(b.b)("inlineCode",{parentName:"p"},"onRefresh")," event."),Object(b.b)("h2",{id:"example"},"Example"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},"import React from 'react';\nimport { RefreshControl, SafeAreaView, ScrollView, StyleSheet, Text } from 'react-native';\n\nconst wait = timeout => {\n  return new Promise(resolve => setTimeout(resolve, timeout));\n};\n\nconst App = () => {\n  const [refreshing, setRefreshing] = React.useState(false);\n\n  const onRefresh = React.useCallback(() => {\n    setRefreshing(true);\n    wait(2000).then(() => setRefreshing(false));\n  }, []);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView\n        contentContainerStyle={styles.scrollView}\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}>\n        <Text>Pull down to see RefreshControl indicator</Text>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n    backgroundColor: 'pink',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default App;\n")),Object(b.b)("blockquote",null,Object(b.b)("p",{parentName:"blockquote"},"Note: ",Object(b.b)("inlineCode",{parentName:"p"},"refreshing")," is a controlled prop, this is why it needs to be set to ",Object(b.b)("inlineCode",{parentName:"p"},"true")," in the ",Object(b.b)("inlineCode",{parentName:"p"},"onRefresh")," function otherwise the refresh indicator will stop immediately.")),Object(b.b)("hr",null),Object(b.b)("h1",{id:"reference"},"Reference"),Object(b.b)("h2",{id:"props"},"Props"),Object(b.b)("h3",{id:"view-props"},Object(b.b)("a",{parentName:"h3",href:"/versions/v43.0.0/react-native/view/#props"},"View Props")),Object(b.b)("p",null,"Inherits ",Object(b.b)("a",{parentName:"p",href:"/versions/v43.0.0/react-native/view/#props"},"View Props"),"."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"refreshing"},Object(b.b)("inlineCode",{parentName:"h3"},"refreshing")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Required")," Whether the view should be indicating an active refresh."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"boolean")))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"colors-android"},Object(b.b)("inlineCode",{parentName:"h3"},"colors")," ",Object(b.b)("strong",{parentName:"h3"},"(Android)")),Object(b.b)("p",null,"The colors (at least one) that will be used to draw the refresh indicator."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"array of ",Object(b.b)("a",{parentName:"td",href:"https://reactnative.dev/docs/0.64/colors"},"colors"))))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"enabled-android"},Object(b.b)("inlineCode",{parentName:"h3"},"enabled")," ",Object(b.b)("strong",{parentName:"h3"},"(Android)")),Object(b.b)("p",null,"Whether the pull to refresh functionality is enabled."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Default"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"boolean"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"true"))))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"onrefresh"},Object(b.b)("inlineCode",{parentName:"h3"},"onRefresh")),Object(b.b)("p",null,"Called when the view starts refreshing."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"function")))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"progressbackgroundcolor-android"},Object(b.b)("inlineCode",{parentName:"h3"},"progressBackgroundColor")," ",Object(b.b)("strong",{parentName:"h3"},"(Android)")),Object(b.b)("p",null,"The background color of the refresh indicator."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"https://reactnative.dev/docs/0.64/colors"},"color"))))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"progressviewoffset-android"},Object(b.b)("inlineCode",{parentName:"h3"},"progressViewOffset")," ",Object(b.b)("strong",{parentName:"h3"},"(Android)")),Object(b.b)("p",null,"Progress view top offset."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Default"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"0"))))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"size-android"},Object(b.b)("inlineCode",{parentName:"h3"},"size")," ",Object(b.b)("strong",{parentName:"h3"},"(Android)")),Object(b.b)("p",null,"Size of the refresh indicator."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Default"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"/versions/v43.0.0/react-native/refreshcontrol/#refreshlayoutconstssize"},"RefreshControl.SIZE")),Object(b.b)("td",{parentName:"tr",align:null},"RefreshLayoutConsts.SIZE.DEFAULT")))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"tintcolor-ios"},Object(b.b)("inlineCode",{parentName:"h3"},"tintColor")," ",Object(b.b)("strong",{parentName:"h3"},"(iOS)")),Object(b.b)("p",null,"The color of the refresh indicator."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"https://reactnative.dev/docs/0.64/colors"},"color"))))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"title-ios"},Object(b.b)("inlineCode",{parentName:"h3"},"title")," ",Object(b.b)("strong",{parentName:"h3"},"(iOS)")),Object(b.b)("p",null,"The title displayed under the refresh indicator."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"string")))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"titlecolor-ios"},Object(b.b)("inlineCode",{parentName:"h3"},"titleColor")," ",Object(b.b)("strong",{parentName:"h3"},"(iOS)")),Object(b.b)("p",null,"The color of the refresh indicator title."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"https://reactnative.dev/docs/0.64/colors"},"color"))))),Object(b.b)("h2",{id:"type-definitions"},"Type Definitions"),Object(b.b)("h3",{id:"refreshlayoutconstssize"},"RefreshLayoutConsts.SIZE"),Object(b.b)("p",null,"The SwipeRefreshLayout Android component constants. The actual component size may vary between devices. You can read more about the native component in the ",Object(b.b)("a",{parentName:"p",href:"https://developer.android.com/reference/androidx/swiperefreshlayout/widget/SwipeRefreshLayout"},"Android documentation"),"."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"enum")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Constants:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Name"),Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Value"),Object(b.b)("th",{parentName:"tr",align:null},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"DEFAULT"),Object(b.b)("td",{parentName:"tr",align:null},"int"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"1")),Object(b.b)("td",{parentName:"tr",align:null},"Default RefreshControl size")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"LARGE"),Object(b.b)("td",{parentName:"tr",align:null},"int"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"0")),Object(b.b)("td",{parentName:"tr",align:null},"Large RefreshControl size")))))}p.isMDXComponent=!0},"7ljp":function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return h}));var r=n("q1tI"),a=n.n(r);function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){b(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},b=Object.keys(e);for(r=0;r<b.length;r++)n=b[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(r=0;r<b.length;r++)n=b[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),p=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"===typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},O=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,b=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),O=r,h=d["".concat(l,".").concat(O)]||d[O]||s[O]||b;return n?a.a.createElement(h,o(o({ref:t},c),{},{components:n})):a.a.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"===typeof e||r){var b=n.length,l=new Array(b);l[0]=O;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"===typeof e?e:r,l[1]=o;for(var c=2;c<b;c++)l[c]=n[c];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}O.displayName="MDXCreateElement"},HALo:function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return r}))},Qetd:function(e,t,n){"use strict";var r=Object.assign.bind(Object);e.exports=r,e.exports.default=e.exports},YHym:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/versions/v43.0.0/react-native/refreshcontrol",function(){return n("3Yw6")}])},dhJC:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},b=Object.keys(e);for(r=0;r<b.length;r++)n=b[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(r=0;r<b.length;r++)n=b[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}n.d(t,"a",(function(){return r}))}},[["YHym",1,0]]]);