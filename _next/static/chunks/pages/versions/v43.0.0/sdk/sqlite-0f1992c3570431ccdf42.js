_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[1186],{LTok:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/versions/v43.0.0/sdk/sqlite",function(){return a("sWF8")}])},sWF8:function(e,t,a){"use strict";a.r(t),a.d(t,"meta",(function(){return b})),a.d(t,"headings",(function(){return p})),a.d(t,"default",(function(){return d}));var n=a("HALo"),o=a("dhJC"),i=(a("q1tI"),a("7ljp")),s=a("3Ukx"),r=a("HCau"),l=a("hykZ"),c=["components"],b={title:"SQLite",sourceCodeUrl:"https://github.com/expo/expo/tree/sdk-43/packages/expo-sqlite"},p=[{depth:2,type:"text",title:"Guides"},{depth:3,type:"text",title:"Importing an existing database"},{depth:3,type:"text",title:"Executing statements outside of a transaction"},{depth:2,type:"text",title:"Installation"},{depth:2,type:"text",title:"API"}],u={meta:b,headings:p};function d(e){var t=e.components,a=Object(o.a)(e,c);return Object(i.b)("wrapper",Object(n.a)({},u,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"expo-sqlite"))," gives your app access to a database that can be queried through a ",Object(i.b)("a",{parentName:"p",href:"https://www.w3.org/TR/webdatabase/"},"WebSQL"),"-like API. The database is persisted across restarts of your app."),Object(i.b)("p",null,"An ",Object(i.b)("a",{parentName:"p",href:"https://github.com/expo/examples/tree/master/with-sqlite"},"example to do list app")," is available that uses this module for storage."),Object(i.b)(l.a,{android:!0,emulator:!0,ios:!0,simulator:!0,mdxType:"PlatformsSection"}),Object(i.b)("h2",{id:"guides"},"Guides"),Object(i.b)("h3",{id:"importing-an-existing-database"},"Importing an existing database"),Object(i.b)("p",null,"In order to open a new SQLite database using an existing ",Object(i.b)("inlineCode",{parentName:"p"},".db")," file you already have, you need to do three things:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"expo install expo-file-system expo-asset")),Object(i.b)("li",{parentName:"ul"},"create a ",Object(i.b)("strong",{parentName:"li"},"metro.config.js")," file in the root of your project with the following contents (",Object(i.b)("a",{parentName:"li",href:"/guides/customizing-metro/#adding-more-file-extensions-to--assetexts"},"curious why? read here"),"):")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts"},"const { getDefaultConfig } = require('expo/metro-config');\n\nconst defaultConfig = getDefaultConfig(__dirname);\n\nmodule.exports = {\n  resolver: {\n    assetExts: [...defaultConfig.resolver.assetExts, 'db'],\n  },\n};\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Use the following function (or similar) to open your database:")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts"},"async function openDatabase(pathToDatabaseFile: string): Promise<SQLite.WebSQLDatabase> {\n  if (!(await FileSystem.getInfoAsync(FileSystem.documentDirectory + 'SQLite')).exists) {\n    await FileSystem.makeDirectoryAsync(FileSystem.documentDirectory + 'SQLite');\n  }\n  await FileSystem.downloadAsync(\n    Asset.fromModule(require(pathToDatabaseFile)).uri,\n    FileSystem.documentDirectory + 'SQLite/myDatabaseName.db'\n  );\n  return SQLite.openDatabase('myDatabaseName.db');\n}\n")),Object(i.b)("h3",{id:"executing-statements-outside-of-a-transaction"},"Executing statements outside of a transaction"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"Please note that you should use this kind of execution only when it is necessary. For instance, when code is a no-op within transactions (like eg. ",Object(i.b)("inlineCode",{parentName:"p"},"PRAGMA foreign_keys = ON;"),").")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"const db = SQLite.openDatabase('dbName', version);\n\ndb.exec([{ sql: 'PRAGMA foreign_keys = ON;', args: [] }], false, () =>\n  console.log('Foreign keys turned on')\n);\n")),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)(r.b,{packageName:"expo-sqlite",mdxType:"InstallSection"}),Object(i.b)("h2",{id:"api"},"API"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import * as SQLite from 'expo-sqlite';\n")),Object(i.b)(s.a,{packageName:"expo-sqlite",apiName:"SQLite",mdxType:"APISection"}))}d.isMDXComponent=!0}},[["LTok",1,0,2,3,4,5,6,7,8,9,10,11,12,13,14]]]);