_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[1112],{I0q5:function(e,t,n){"use strict";n.d(t,"a",(function(){return k}));var a=n("z7pX"),o=n("H+61"),c=n("UlJF"),r=n("+Css"),s=n("7LId"),i=n("VIvw"),p=n("iHvq"),u=n("cpVT"),l=n("q1tI"),d=n("ufKf"),b=n("3zh3"),h=n("AeFk"),g=function(e){var t=e.size,n=void 0===t?24:t,a=e.stroke,o=void 0===a?b.palette.dark.white:a;return Object(h.c)("svg",{"aria-label":"check",width:n,height:n,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"},Object(h.c)("path",{d:"M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2h6m4-3h6v6m-11 5L21 3",stroke:o,strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"}))},m=n("5BX9");function f(e){var t=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=Object(p.a)(e);if(t){var o=Object(p.a)(this).constructor;n=Reflect.construct(a,arguments,o)}else n=a.apply(this,arguments);return Object(i.a)(this,n)}}var O="v".concat(n("kiQV").version),k=function(e){Object(s.a)(n,e);var t=f(n);function n(){var e;Object(o.a)(this,n);for(var c=arguments.length,s=new Array(c),i=0;i<c;i++)s[i]=arguments[i];return e=t.call.apply(t,[this].concat(s)),Object(u.a)(Object(r.a)(e),"contentRef",l.createRef()),Object(u.a)(Object(r.a)(e),"state",{ready:!1}),Object(u.a)(Object(r.a)(e),"getSelectedDocsVersion",(function(){var t=e.context.version;return"latest"===t?O:t})),Object(u.a)(Object(r.a)(e),"getSnackSdkVersion",(function(){var t=e.getSelectedDocsVersion();return"unversioned"===t&&(t=O),t.replace("v","")})),Object(u.a)(Object(r.a)(e),"getExamplesPath",(function(){return"".concat(document.location.origin,"/static/examples/").concat(e.getSelectedDocsVersion())})),Object(u.a)(Object(r.a)(e),"getDependencies",(function(){return Object(a.a)(e.props.dependencies).join(",")})),Object(u.a)(Object(r.a)(e),"getCode",(function(){return(e.contentRef.current&&e.contentRef.current.textContent||"").replace(/%%placeholder-start%%.*%%placeholder-end%%/g,"")})),e}return Object(c.a)(n,[{key:"componentDidMount",value:function(){this.setState({ready:!0})}},{key:"render",value:function(){return Object(h.c)("div",null,Object(h.c)("div",{ref:this.contentRef,style:this.props.contentHidden?{display:"none"}:void 0},this.props.children),Object(h.c)("form",{action:d.a,method:"POST",target:"_blank"},Object(h.c)("input",{type:"hidden",name:"platform",value:this.props.defaultPlatform||"android"}),Object(h.c)("input",{type:"hidden",name:"name",value:this.props.label||"Example"}),Object(h.c)("input",{type:"hidden",name:"dependencies",value:this.getDependencies()}),Object(h.c)("input",{type:"hidden",name:"sdkVersion",value:this.getSnackSdkVersion()}),this.props.platforms&&Object(h.c)("input",{type:"hidden",name:"supportedPlatforms",value:this.props.platforms.join(",")}),this.state.ready&&Object(h.c)("input",{type:"hidden",name:"files",value:JSON.stringify(Object(d.b)({templateId:this.props.templateId,code:this.getCode(),files:this.props.files,baseURL:this.getExamplesPath()}))}),Object(h.c)("button",{className:"snack-inline-example-button",disabled:!this.state.ready},Object(h.c)(g,{size:16})," ",this.props.buttonTitle||"Try this example on Snack")))}}]),n}(l.Component);Object(u.a)(k,"contextType",m.a),Object(u.a)(k,"defaultProps",{dependencies:[]})},KANx:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/versions/v43.0.0/sdk/background-fetch",function(){return n("Xgg0")}])},KiYJ:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var a=n("cpVT"),o=n("3zh3"),c=(n("q1tI"),n("AeFk"));function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){Object(a.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e){var t=e.alt,n=e.src,a=e.style,r=e.containerStyle;return Object(c.c)("div",{style:s({textAlign:"center",backgroundColor:o.theme.background.secondary,paddingTop:10,paddingBottom:10,marginTop:20,marginBottom:20},r)},Object(c.c)("img",{src:n,alt:t,style:a}))}},Xgg0:function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return l})),n.d(t,"headings",(function(){return d})),n.d(t,"default",(function(){return h}));var a=n("HALo"),o=n("dhJC"),c=(n("q1tI"),n("7ljp")),r=n("3Ukx"),s=n("hykZ"),i=n("I0q5"),p=n("KiYJ"),u=["components"],l={title:"BackgroundFetch",sourceCodeUrl:"https://github.com/expo/expo/tree/sdk-43/packages/expo-background-fetch"},d=[{depth:2,type:"text",title:"Known issues"},{depth:2,type:"text",title:"Installation"},{depth:2,type:"text",title:"Usage"},{depth:2,type:"text",title:"Triggering background fetches"},{depth:2,type:"text",title:"Configuration"},{depth:2,type:"text",title:"API"}],b={meta:l,headings:d};function h(e){var t=e.components,n=Object(o.a)(e,u);return Object(c.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"expo-background-fetch"))," provides an API to perform ",Object(c.b)("a",{parentName:"p",href:"https://developer.apple.com/documentation/uikit/core_app/managing_your_app_s_life_cycle/preparing_your_app_to_run_in_the_background/updating_your_app_with_background_app_refresh"},"background fetch")," tasks, allowing you to run specific code periodically in the background to update your app. This module uses ",Object(c.b)("a",{parentName:"p",href:"/versions/v43.0.0/sdk/task-manager/"},"TaskManager")," Native API under the hood."),Object(c.b)(s.a,{android:!0,emulator:!0,ios:!0,simulator:!0,mdxType:"PlatformsSection"}),Object(c.b)("h2",{id:"known-issues"},"Known issues"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"iOS only"),": BackgroundFetch only works when the app is backgrounded, not if the app was terminated or upon device reboot. ",Object(c.b)("a",{parentName:"p",href:"https://github.com/expo/expo/issues/3582"},"Here is the relevant GitHub issue")),Object(c.b)("h2",{id:"installation"},"Installation"),Object(c.b)("p",null,"For ",Object(c.b)("a",{parentName:"p",href:"/introduction/managed-vs-bare/#managed-workflow"},"managed")," apps, you'll need to run ",Object(c.b)("inlineCode",{parentName:"p"},"expo install expo-background-fetch"),". To use it in ",Object(c.b)("a",{parentName:"p",href:"/introduction/managed-vs-bare/#bare-workflow"},"bare")," React Native app, follow its ",Object(c.b)("a",{parentName:"p",href:"https://github.com/expo/expo/tree/main/packages/expo-background-fetch"},"installation instructions"),";"),Object(c.b)("h2",{id:"usage"},"Usage"),Object(c.b)("p",null,"Below is an example that demonstrates how to use ",Object(c.b)("inlineCode",{parentName:"p"},"expo-background-fetch"),"."),Object(c.b)(i.a,{label:"Background Fetch Usage",dependencies:["expo-background-fetch","expo-task-manager"],mdxType:"SnackInline"},Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport * as BackgroundFetch from 'expo-background-fetch';\nimport * as TaskManager from 'expo-task-manager';\n\nconst BACKGROUND_FETCH_TASK = 'background-fetch';\n\n// 1. Define the task by providing a name and the function that should be executed\n// Note: This needs to be called in the global scope (e.g outside of your React components)\nTaskManager.defineTask(BACKGROUND_FETCH_TASK, async () => {\n  const now = Date.now();\n\n  console.log(`Got background fetch call at date: ${new Date(now).toISOString()}`);\n\n  // Be sure to return the successful result type!\n  return BackgroundFetch.BackgroundFetchResult.NewData;\n});\n\n// 2. Register the task at some point in your app by providing the same name, and some configuration options for how the background fetch should behave\n// Note: This does NOT need to be in the global scope and CAN be used in your React components!\nasync function registerBackgroundFetchAsync() {\n  return BackgroundFetch.registerTaskAsync(BACKGROUND_FETCH_TASK, {\n    minimumInterval: 60 * 15, // 15 minutes\n    stopOnTerminate: false, // android only,\n    startOnBoot: true, // android only\n  });\n}\n\n// 3. (Optional) Unregister tasks by specifying the task name\n// This will cancel any future background fetch calls that match the given name\n// Note: This does NOT need to be in the global scope and CAN be used in your React components!\nasync function unregisterBackgroundFetchAsync() {\n  return BackgroundFetch.unregisterTaskAsync(BACKGROUND_FETCH_TASK);\n}\n\nexport default function BackgroundFetchScreen() {\n  const [isRegistered, setIsRegistered] = React.useState(false);\n  const [status, setStatus] = React.useState(null);\n\n  React.useEffect(() => {\n    checkStatusAsync();\n  }, []);\n\n  const checkStatusAsync = async () => {\n    const status = await BackgroundFetch.getStatusAsync();\n    const isRegistered = await TaskManager.isTaskRegisteredAsync(BACKGROUND_FETCH_TASK);\n    setStatus(status);\n    setIsRegistered(isRegistered);\n  };\n\n  const toggleFetchTask = async () => {\n    if (isRegistered) {\n      await unregisterBackgroundFetchAsync();\n    } else {\n      await registerBackgroundFetchAsync();\n    }\n\n    checkStatusAsync();\n  };\n\n  return (\n    <View style={styles.screen}>\n      <View style={styles.textContainer}>\n        <Text>\n          Background fetch status:{' '}\n          <Text style={styles.boldText}>\n            {status && BackgroundFetch.BackgroundFetchStatus[status]}\n          </Text>\n        </Text>\n        <Text>\n          Background fetch task name:{' '}\n          <Text style={styles.boldText}>\n            {isRegistered ? BACKGROUND_FETCH_TASK : 'Not registered yet!'}\n          </Text>\n        </Text>\n      </View>\n      <View style={styles.textContainer}></View>\n      <Button\n        title={isRegistered ? 'Unregister BackgroundFetch task' : 'Register BackgroundFetch task'}\n        onPress={toggleFetchTask}\n      />\n    </View>\n  );\n}\n\n/* @hide */\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  textContainer: {\n    margin: 10,\n  },\n  boldText: {\n    fontWeight: 'bold',\n  },\n});\n\n/* @end */\n"))),Object(c.b)("h2",{id:"triggering-background-fetches"},"Triggering background fetches"),Object(c.b)("p",null,"Background fetches can be difficult to test because they can happen inconsistently. Fortunately, you can trigger background fetches manually when developing your apps."),Object(c.b)("p",null,"For iOS, you can use the ",Object(c.b)("inlineCode",{parentName:"p"},"Instruments")," app on macOS to manually trigger background fetches:"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"Open the Instruments app. The Instruments app can be searched through Spotlight (\u2318 + Space) or opened from ",Object(c.b)("inlineCode",{parentName:"li"},"/Applications/Xcode.app/Contents/Applications/Instruments.app")),Object(c.b)("li",{parentName:"ol"},"Select ",Object(c.b)("inlineCode",{parentName:"li"},"Time Profiler")),Object(c.b)("li",{parentName:"ol"},"Select your device / simulator and pick the ",Object(c.b)("inlineCode",{parentName:"li"},"Expo Go")," app"),Object(c.b)("li",{parentName:"ol"},"Press the ",Object(c.b)("inlineCode",{parentName:"li"},"Record")," button in the top left corner"),Object(c.b)("li",{parentName:"ol"},"Navigate to the ",Object(c.b)("inlineCode",{parentName:"li"},"Document")," Menu and select ",Object(c.b)("inlineCode",{parentName:"li"},"Simulate Background Fetch - Expo Go"),":")),Object(c.b)(p.a,{alt:"Xcode Menu with Simulate Background Fetch option",src:"/static/images/simulate-background-fetch-instruments.png",mdxType:"ImageSpotlight"}),Object(c.b)("p",null,"For Android, you can set the ",Object(c.b)("inlineCode",{parentName:"p"},"minimumInterval")," option of your task to a small number and background your application like so:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-tsx"},"async function registerBackgroundFetchAsync() {\n  return BackgroundFetch.registerTaskAsync(BACKGROUND_FETCH_TASK, {\n    minimumInterval: 1, // task will fire 1 minute after app is backgrounded\n  });\n}\n")),Object(c.b)("h2",{id:"configuration"},"Configuration"),Object(c.b)("p",null,"In order to use ",Object(c.b)("inlineCode",{parentName:"p"},"BackgroundFetch")," API in standalone, detached and bare apps on iOS, your app has to include background mode in the ",Object(c.b)("strong",{parentName:"p"},"Info.plist")," file. See ",Object(c.b)("a",{parentName:"p",href:"/versions/v43.0.0/sdk/task-manager/#configuration-for-standalone-apps"},"background tasks configuration guide")," for more details."),Object(c.b)("p",null,"On Android, this module might listen when the device is starting up. It's necessary to continue working on tasks started with ",Object(c.b)("inlineCode",{parentName:"p"},"startOnBoot"),'. It also keeps devices "awake" that are going idle and asleep fast, to improve reliability of the tasks. Because of this both the ',Object(c.b)("inlineCode",{parentName:"p"},"RECEIVE_BOOT_COMPLETED")," and ",Object(c.b)("inlineCode",{parentName:"p"},"WAKE_LOCK")," permissions are added automatically."),Object(c.b)("h2",{id:"api"},"API"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},"import * as BackgroundFetch from 'expo-background-fetch';\n")),Object(c.b)(r.a,{packageName:"expo-background-fetch",apiName:"BackgroundFetch",mdxType:"APISection"}))}h.isMDXComponent=!0},ufKf:function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return o}));var a="https://snack.expo.dev";function o(e){var t=e.templateId,n=e.code,a=e.files,o=e.baseURL,c={};return a&&Object.keys(a).forEach((function(e){var t=a[e],n=/\.(jsx?|tsx?|json|md)$/i.test(e);c[e]=n?{type:"CODE",url:t.match(/^https?:\/\//)?t:"".concat(o,"/").concat(t)}:{type:"ASSET",contents:t}})),t?c["App.js"]={type:"CODE",url:"".concat(o,"/").concat(t,".js")}:n&&(c["App.js"]={type:"CODE",contents:n}),c}}},[["KANx",1,0,2,3,4,5,7,8,9,10,11,12,13,14]]]);