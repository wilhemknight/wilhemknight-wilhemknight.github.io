_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[227],{"+Css":function(e,t,n){"use strict";function r(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}n.d(t,"a",(function(){return r}))},"5BX9":function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return i}));var r=n("q1tI"),o=n("AeFk"),c=Object(r.createContext)({version:"latest",hasVersion:!1,setVersion:function(e){throw new Error("PageApiVersionContext not found")}});function a(e){var t=s(e.router.pathname),n=null!==t,a=Object(r.useCallback)((function(t){e.router.push(function(e,t){var n=s(e);return n?e.replace(n,t):e}(e.router.pathname,t))}),[]);return Object(o.c)(c.Provider,{value:{setVersion:a,hasVersion:n,version:t||"latest"}},e.children)}function i(){return Object(r.useContext)(c)}function s(e){return function(e){return e.startsWith("/versions/")}(e)?e.split("/",3).pop():null}},"6FTQ":function(e,t,n){"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}n.d(t,"a",(function(){return r}))},"7LId":function(e,t,n){"use strict";function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function o(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)}n.d(t,"a",(function(){return o}))},"7ljp":function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return h}));var r=n("q1tI"),o=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"===typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,a=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),b=r,h=u["".concat(a,".").concat(b)]||u[b]||d[b]||c;return n?o.a.createElement(h,i(i({ref:t},l),{},{components:n})):o.a.createElement(h,i({ref:t},l))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"===typeof e||r){var c=n.length,a=new Array(c);a[0]=b;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"===typeof e?e:r,a[1]=i;for(var l=2;l<c;l++)a[l]=n[l];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},"8rE2":function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n("6FTQ");function o(e,t){if(e){if("string"===typeof e)return Object(r.a)(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Object(r.a)(e,t):void 0}}},"C+bE":function(e,t){function n(t){return"function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?(e.exports=n=function(e){return typeof e},e.exports.default=e.exports,e.exports.__esModule=!0):(e.exports=n=function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.default=e.exports,e.exports.__esModule=!0),n(t)}e.exports=n,e.exports.default=e.exports,e.exports.__esModule=!0},"H+61":function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}n.d(t,"a",(function(){return r}))},I0q5:function(e,t,n){"use strict";n.d(t,"a",(function(){return k}));var r=n("z7pX"),o=n("H+61"),c=n("UlJF"),a=n("+Css"),i=n("7LId"),s=n("VIvw"),l=n("iHvq"),p=n("cpVT"),u=n("q1tI"),d=n("ufKf"),b=n("3zh3"),h=n("AeFk"),f=function(e){var t=e.size,n=void 0===t?24:t,r=e.stroke,o=void 0===r?b.palette.dark.white:r;return Object(h.c)("svg",{"aria-label":"check",width:n,height:n,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"},Object(h.c)("path",{d:"M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2h6m4-3h6v6m-11 5L21 3",stroke:o,strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"}))},m=n("5BX9");function y(e){var t=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=Object(l.a)(e);if(t){var o=Object(l.a)(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return Object(s.a)(this,n)}}var g="v".concat(n("kiQV").version),k=function(e){Object(i.a)(n,e);var t=y(n);function n(){var e;Object(o.a)(this,n);for(var c=arguments.length,i=new Array(c),s=0;s<c;s++)i[s]=arguments[s];return e=t.call.apply(t,[this].concat(i)),Object(p.a)(Object(a.a)(e),"contentRef",u.createRef()),Object(p.a)(Object(a.a)(e),"state",{ready:!1}),Object(p.a)(Object(a.a)(e),"getSelectedDocsVersion",(function(){var t=e.context.version;return"latest"===t?g:t})),Object(p.a)(Object(a.a)(e),"getSnackSdkVersion",(function(){var t=e.getSelectedDocsVersion();return"unversioned"===t&&(t=g),t.replace("v","")})),Object(p.a)(Object(a.a)(e),"getExamplesPath",(function(){return"".concat(document.location.origin,"/static/examples/").concat(e.getSelectedDocsVersion())})),Object(p.a)(Object(a.a)(e),"getDependencies",(function(){return Object(r.a)(e.props.dependencies).join(",")})),Object(p.a)(Object(a.a)(e),"getCode",(function(){return(e.contentRef.current&&e.contentRef.current.textContent||"").replace(/%%placeholder-start%%.*%%placeholder-end%%/g,"")})),e}return Object(c.a)(n,[{key:"componentDidMount",value:function(){this.setState({ready:!0})}},{key:"render",value:function(){return Object(h.c)("div",null,Object(h.c)("div",{ref:this.contentRef,style:this.props.contentHidden?{display:"none"}:void 0},this.props.children),Object(h.c)("form",{action:d.a,method:"POST",target:"_blank"},Object(h.c)("input",{type:"hidden",name:"platform",value:this.props.defaultPlatform||"android"}),Object(h.c)("input",{type:"hidden",name:"name",value:this.props.label||"Example"}),Object(h.c)("input",{type:"hidden",name:"dependencies",value:this.getDependencies()}),Object(h.c)("input",{type:"hidden",name:"sdkVersion",value:this.getSnackSdkVersion()}),this.props.platforms&&Object(h.c)("input",{type:"hidden",name:"supportedPlatforms",value:this.props.platforms.join(",")}),this.state.ready&&Object(h.c)("input",{type:"hidden",name:"files",value:JSON.stringify(Object(d.b)({templateId:this.props.templateId,code:this.getCode(),files:this.props.files,baseURL:this.getExamplesPath()}))}),Object(h.c)("button",{className:"snack-inline-example-button",disabled:!this.state.ready},Object(h.c)(f,{size:16})," ",this.props.buttonTitle||"Try this example on Snack")))}}]),n}(u.Component);Object(p.a)(k,"contextType",m.a),Object(p.a)(k,"defaultProps",{dependencies:[]})},KiYJ:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("cpVT"),o=n("3zh3"),c=(n("q1tI"),n("AeFk"));function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){Object(r.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e){var t=e.alt,n=e.src,r=e.style,a=e.containerStyle;return Object(c.c)("div",{style:i({textAlign:"center",backgroundColor:o.theme.background.secondary,paddingTop:10,paddingBottom:10,marginTop:20,marginBottom:20},a)},Object(c.c)("img",{src:n,alt:t,style:r}))}},UlJF:function(e,t,n){"use strict";function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function o(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}n.d(t,"a",(function(){return o}))},VIvw:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("C+bE"),o=n.n(r),c=n("+Css");function a(e,t){if(t&&("object"===o()(t)||"function"===typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Object(c.a)(e)}},cpVT:function(e,t,n){"use strict";function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,"a",(function(){return r}))},iHvq:function(e,t,n){"use strict";function r(e){return(r=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}n.d(t,"a",(function(){return r}))},kiQV:function(e){e.exports=JSON.parse('{"name":"expo-docs","version":"44.0.0","private":true,"scripts":{"dev":"rimraf .next/preval && next dev -p 3002","build":"cross-env NODE_OPTIONS=--max-old-space-size=8192 next build","export":"yarn run build && next export && yarn run export-issue-404","export-issue-404":"echo \\"\ud83d\udee0  Patching https://github.com/vercel/next.js/issues/16528\\"; cp out/404/index.html out/404.html","export-server":"http-server out -p 8000","import-react-native-docs":"node ./scripts/import-react-native-docs.js","test-links":"node --async-stack-traces --unhandled-rejections=strict ./scripts/test-links.js","prettier":"prettier --write \'**/*.{js,ts,tsx,md}\'","lint":"tsc --noEmit && eslint .","lint-links":"remark -u validate-links ./pages","watch":"tsc --noEmit -w","test":"jest","schema-sync":"node --async-stack-traces --unhandled-rejections=strict ./scripts/schema-sync.js","remove-version":"node --unhandled-rejections=strict ./scripts/remove-version.js"},"resolutions":{"webpack":"^5.28.0"},"dependencies":{"@emotion/react":"^11.4.0","@expo/spawn-async":"^1.5.0","@expo/styleguide":"^4.0.1","@mdx-js/loader":"^1.6.22","@mdx-js/mdx":"^1.6.22","@mdx-js/react":"^1.6.22","@mdx-js/runtime":"^1.6.22","@reach/tabs":"^0.15.0","@sentry/browser":"^5.6.1","date-fns":"^2.28.0","docsearch.js":"^2.5.2","emoji-regex":"^9.2.2","front-matter":"^2.3.0","fs-extra":"^6.0.1","github-slugger":"^1.3.0","hotshot":"^1.0.5","lodash":"^4.17.20","next":"^11.1.4","nprogress":"0.2.0","path-browserify":"^1.0.1","prism-react-renderer":"1.0.2","prop-types":"15.7.2","react":"^17.0.2","react-diff-view":"^2.4.7","react-dom":"^17.0.2","react-feather":"^2.0.9","react-markdown":"^6.0.3","react-player":"^1.11.1","react-visibility-sensor":"^5.1.1","remark-gfm":"^1.0.0","tippy.js":"^6.3.1"},"devDependencies":{"@apidevtools/json-schema-ref-parser":"^9.0.9","@babel/core":"^7.13.14","@emotion/babel-preset-css-prop":"^11.2.0","@emotion/jest":"^11.7.1","@testing-library/jest-dom":"5.11.0","@testing-library/react":"10.4.3","@testing-library/react-hooks":"^7.0.2","@types/cacache":"^15.0.1","@types/fs-extra":"^9.0.11","@types/github-slugger":"^1.3.0","@types/google.analytics":"^0.0.41","@types/gtag.js":"^0.0.6","@types/lodash":"^4.14.161","@types/long":"^4.0.1","@types/mdx-js__react":"^1.5.3","@types/node":"^14.11.2","@types/nprogress":"^0.2.0","@types/react":"^17.0.11","axios":"^0.21.2","babel-plugin-module-resolver":"3.1.1","babel-plugin-preval":"^3.0.1","cross-env":"^5.2.0","danger":"^9.2.10","esbuild-loader":"^2.13.1","eslint":"^8.6.0","eslint-config-next":"^10.2.3","eslint-config-universe":"^10.0.0","eslint-plugin-lodash":"^7.3.0","http-server":"^0.12.3","jest":"^27.4.7","js-yaml":"^4.1.0","prettier":"^2.3.1","puppeteer":"^10.2.0","react-test-renderer":"^17.0.2","rehype-slug":"^4.0.1","remark-cli":"^9.0.0","remark-frontmatter":"^2.0.0","remark-validate-links":"^10.0.4","rimraf":"^3.0.2","semver":"^7.3.5","sitemap":"^6.3.0","typescript":"^4.5.4","unist-builder":"^2.0.0","unist-util-visit":"^2.0.3"}}')},nJzb:function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return s})),n.d(t,"headings",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n("HALo"),o=n("dhJC"),c=(n("q1tI"),n("7ljp")),a=(n("KiYJ"),n("I0q5")),i=["components"],s={title:"Implementing a checkbox for Expo and React Native apps"},l=[{depth:2,type:"text",title:"Understanding the checkbox"},{depth:2,type:"text",title:"Controlling the checkbox"},{depth:2,type:"text",title:"Extending the interface"}],p={meta:s,headings:l};function u(e){var t=e.components,n=Object(o.a)(e,i);return Object(c.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"One fairly common component that is not offered out of the box by Expo is the mighty checkbox. There are several packages available on npm; however, it is simple enough to implement yourself, and by doing so you have full customization and control over the look and feel of your checkbox."),Object(c.b)("h2",{id:"understanding-the-checkbox"},"Understanding the checkbox"),Object(c.b)("p",null,"A checkbox is basically a button that exists in one of two states \u2014 it is checked or it isn't. This makes it a perfect candidate for the ",Object(c.b)("inlineCode",{parentName:"p"},"useState()")," hook. Our first iteration will render a button that toggles between checked and unchecked states. When the checkbox is checked, we'll render a checkmark icon in the center of the button."),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Note: You can find more information about using icons in your Expo project here: ",Object(c.b)("a",{parentName:"em",href:"https://docs.expo.dev/guides/icons/"},"https://docs.expo.dev/guides/icons/"))),Object(c.b)(a.a,{mdxType:"SnackInline"},Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState } from 'react';\nimport { Pressable, StyleSheet, Text, View } from 'react-native';\nimport Ionicons from '@expo/vector-icons';\n\nfunction MyCheckbox() {\n  const [checked, onChange] = useState(false);\n\n  function onCheckmarkPress() {\n    onChange(!checked);\n  }\n\n  return (\n    <Pressable\n      style={[styles.checkboxBase, checked && styles.checkboxChecked]}\n      onPress={onCheckmarkPress}>\n      {checked && <Ionicons name=\"checkmark\" size={24} color=\"white\" />}\n    </Pressable>\n  );\n}\n\nexport default function App() {\n  return (\n    <View style={styles.appContainer}>\n      <Text style={styles.appTitle}>Checkbox Example</Text>\n\n      <View style={styles.checkboxContainer}>\n        <MyCheckbox />\n        <Text style={styles.checkboxLabel}>{`\u2b05\ufe0f Click!`}</Text>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  checkboxBase: {\n    width: 24,\n    height: 24,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 4,\n    borderWidth: 2,\n    borderColor: 'coral',\n    backgroundColor: 'transparent',\n  },\n\n  checkboxChecked: {\n    backgroundColor: 'coral',\n  },\n\n  appContainer: {\n    flex: 1,\n    alignItems: 'center',\n  },\n\n  appTitle: {\n    marginVertical: 16,\n    fontWeight: 'bold',\n    fontSize: 24,\n  },\n\n  checkboxContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n\n  checkboxLabel: {\n    marginLeft: 8,\n    fontWeight: 500,\n    fontSize: 18,\n  },\n});\n"))),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Note: ",Object(c.b)("a",{parentName:"em",href:"https://icons.expo.fyi"},"https://icons.expo.fyi")," is a great resource for finding all of the icons available in the @expo/vector-icons package.")),Object(c.b)("h2",{id:"controlling-the-checkbox"},"Controlling the checkbox"),Object(c.b)("p",null,"This checkbox isn't useful in this state because the ",Object(c.b)("inlineCode",{parentName:"p"},"checked")," value is accessible only from within the component \u2014 more often than not you'll want to control the checkbox from outside. This is achievable by defining ",Object(c.b)("inlineCode",{parentName:"p"},"checked")," and ",Object(c.b)("inlineCode",{parentName:"p"},"onChange")," as props that are passed into the checkbox:"),Object(c.b)(a.a,{mdxType:"SnackInline"},Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState } from 'react';\nimport { Pressable, StyleSheet, Text, View } from 'react-native';\nimport Ionicons from '@expo/vector-icons/Ionicons';\n\nfunction MyCheckbox({\n  /* @info Define checked and onChange as props instead of state */ checked,\n  onChange /* @end */,\n}) {\n  function onCheckmarkPress() {\n    onChange(!checked);\n  }\n\n  return (\n    <Pressable\n      style={[styles.checkboxBase, checked && styles.checkboxChecked]}\n      onPress={onCheckmarkPress}>\n      {checked && <Ionicons name=\"checkmark\" size={24} color=\"white\" />}\n    </Pressable>\n  );\n}\n\nfunction App() {\n  /* @info Move the checked and onChange values outside of the checkbox component */\n  const [checked, onChange] = useState(false);\n  /* @end */\n\n  return (\n    <View style={styles.appContainer}>\n      <Text style={styles.appTitle}>Checkbox Example</Text>\n\n      <View style={styles.checkboxContainer}>\n        <MyCheckbox\n          /* @info Pass the checked and onChange props to the checkbox */ checked={checked}\n          onChange={onChange} /* @end */\n        />\n        <Text style={styles.checkboxLabel}>{`\u2b05\ufe0f Click!`}</Text>\n      </View>\n    </View>\n  );\n}\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  checkboxBase: {\n    width: 24,\n    height: 24,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 4,\n    borderWidth: 2,\n    borderColor: 'coral',\n    backgroundColor: 'transparent',\n  },\n\n  checkboxChecked: {\n    backgroundColor: 'coral',\n  },\n\n  appContainer: {\n    flex: 1,\n    alignItems: 'center',\n  },\n\n  appTitle: {\n    marginVertical: 16,\n    fontWeight: 'bold',\n    fontSize: 24,\n  },\n\n  checkboxContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n\n  checkboxLabel: {\n    marginLeft: 8,\n    fontWeight: 500,\n    fontSize: 18,\n  },\n});\n"))),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},'Note: This pattern is referred to as a "controlled component" \u2014 you can read more about them here: ',Object(c.b)("a",{parentName:"em",href:"https://reactjs.org/docs/forms.html#controlled-components"},"https://reactjs.org/docs/forms.html#controlled-components"))),Object(c.b)("h2",{id:"extending-the-interface"},"Extending the interface"),Object(c.b)("p",null,"It's common enough to need to render different styles when the checkmark is ",Object(c.b)("inlineCode",{parentName:"p"},"checked")," and when it is not. Let's add this to the checkbox's props and make it more reusable:"),Object(c.b)(a.a,{mdxType:"SnackInline"},Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState } from 'react';\nimport { Pressable, StyleSheet, Text, View } from 'react-native';\nimport Ionicons from '@expo/vector-icons/Ionicons';\n\nfunction MyCheckbox({\n  checked,\n  onChange,\n  /* @info Add style and icon props to make the checkbox reusable throughout your codebase */ buttonStyle = {},\n  activeButtonStyle = {},\n  inactiveButtonStyle = {},\n  activeIconProps = {},\n  inactiveIconProps = {},\n  /* @end */\n}) {\n  function onCheckmarkPress() {\n    onChange(!checked);\n  }\n\n  /* @info Set icon props based on the checked value */\n  const iconProps = checked ? activeIconProps : inactiveIconProps; /* @end */\n\n  return (\n    <Pressable\n      style={[\n        buttonStyle,\n        /* @info Pass the active / inactive style props to the button based on the current checked value */ checked\n          ? activeButtonStyle\n          : inactiveButtonStyle,\n        /* @end */\n      ]}\n      onPress={onCheckmarkPress}>\n      {checked && (\n        <Ionicons\n          name=\"checkmark\"\n          size={24}\n          color=\"white\"\n          /* @info Pass along any custom icon properties to the Icon component */\n          {...iconProps}\n          /* @end */\n        />\n      )}\n    </Pressable>\n  );\n}\n\nfunction App() {\n  const [checked, onChange] = useState(false);\n\n  return (\n    <View style={styles.appContainer}>\n      <Text style={styles.appTitle}>Checkbox Example</Text>\n\n      <View style={styles.checkboxContainer}>\n        <MyCheckbox\n          checked={checked}\n          onChange={onChange}\n          /* @info Pass in base and active styles for the checkbox */\n          buttonStyle={styles.checkboxBase}\n          activeButtonStyle={styles.checkboxChecked}\n          /* @end */\n        />\n        <Text style={styles.checkboxLabel}>{`\u2b05\ufe0f Click!`}</Text>\n      </View>\n    </View>\n  );\n}\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  checkboxBase: {\n    width: 24,\n    height: 24,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 4,\n    borderWidth: 2,\n    borderColor: 'coral',\n    backgroundColor: 'transparent',\n  },\n\n  checkboxChecked: {\n    backgroundColor: 'coral',\n  },\n\n  appContainer: {\n    flex: 1,\n    alignItems: 'center',\n  },\n\n  appTitle: {\n    marginVertical: 16,\n    fontWeight: 'bold',\n    fontSize: 24,\n  },\n\n  checkboxContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n\n  checkboxLabel: {\n    marginLeft: 8,\n    fontWeight: 500,\n    fontSize: 18,\n  },\n});\n"))),Object(c.b)("p",null,"Now this checkbox ticks all of the boxes of what it should be. It toggles between ",Object(c.b)("inlineCode",{parentName:"p"},"checked")," states, can be controlled, and its styles are fully customizable."))}u.isMDXComponent=!0},qftg:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/ui-programming/implementing-a-checkbox",function(){return n("nJzb")}])},ufKf:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return o}));var r="https://snack.expo.dev";function o(e){var t=e.templateId,n=e.code,r=e.files,o=e.baseURL,c={};return r&&Object.keys(r).forEach((function(e){var t=r[e],n=/\.(jsx?|tsx?|json|md)$/i.test(e);c[e]=n?{type:"CODE",url:t.match(/^https?:\/\//)?t:"".concat(o,"/").concat(t)}:{type:"ASSET",contents:t}})),t?c["App.js"]={type:"CODE",url:"".concat(o,"/").concat(t,".js")}:n&&(c["App.js"]={type:"CODE",contents:n}),c}},z7pX:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("6FTQ");var o=n("8rE2");function c(e){return function(e){if(Array.isArray(e))return Object(r.a)(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||Object(o.a)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}}},[["qftg",1,0,2,3]]]);