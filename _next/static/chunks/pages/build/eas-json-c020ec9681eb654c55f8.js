_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[77],{"7ljp":function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var i=n("q1tI"),o=n.n(i);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),c=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"===typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,a=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=c(n),b=i,m=u["".concat(a,".").concat(b)]||u[b]||d[b]||r;return n?o.a.createElement(m,l(l({ref:t},s),{},{components:n})):o.a.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"===typeof e||i){var r=n.length,a=new Array(r);a[0]=b;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"===typeof e?e:i,a[1]=l;for(var s=2;s<r;s++)a[s]=n[s];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},HALo:function(e,t,n){"use strict";function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return i}))},PtYl:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/build/eas-json",function(){return n("Zrdt")}])},Qetd:function(e,t,n){"use strict";var i=Object.assign.bind(Object);e.exports=i,e.exports.default=e.exports},Zrdt:function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return l})),n.d(t,"headings",(function(){return p})),n.d(t,"default",(function(){return c}));var i=n("HALo"),o=n("dhJC"),r=(n("q1tI"),n("7ljp")),a=["components"],l={title:"Configuring EAS Build with eas.json",sidebar_title:"Configuration with eas.json"},p=[{depth:2,type:"text",title:"Build profiles"},{depth:3,type:"text",title:"Platform-specific and common options"},{depth:3,type:"text",title:"Sharing configuration between profiles"},{depth:2,type:"text",title:"Common use cases"},{depth:3,type:"text",title:"Development builds"},{depth:3,type:"text",title:"Preview builds"},{depth:3,type:"text",title:"Production builds"},{depth:3,type:"text",title:"Installing multiple builds of the same app on a single device"},{depth:2,type:"text",title:"Configuring your build tools"},{depth:3,type:"text",title:"Selecting build tool versions"},{depth:3,type:"text",title:"Selecting a base image"},{depth:2,type:"text",title:"Environment variables"}],s={meta:l,headings:p};function c(e){var t=e.components,n=Object(o.a)(e,a);return Object(r.b)("wrapper",Object(i.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"eas.json")," is the configuration file for EAS CLI and services. It is located at the root of your project next to your ",Object(r.b)("strong",{parentName:"p"},"package.json"),". Configuration for EAS Build all belongs under the ",Object(r.b)("inlineCode",{parentName:"p"},'"build"')," key. A minimal ",Object(r.b)("strong",{parentName:"p"},"eas.json")," may look something like this:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'{\n  "build": {\n    "development": {\n      "developmentClient": true,\n      "distribution": "internal"\n    },\n    "preview": {\n      "distribution": "internal"\n    },\n    "production": {}\n  }\n}\n')),Object(r.b)("h2",{id:"build-profiles"},"Build profiles"),Object(r.b)("p",null,"A build profile is a named grouping of configuration that describes the necessary parameters to perform a certain type of build."),Object(r.b)("p",null,"The JSON object under the ",Object(r.b)("inlineCode",{parentName:"p"},"build")," key can contain multiple build profiles, and you can name these build profiles whatever you like; in the above example, there are three build profiles: ",Object(r.b)("inlineCode",{parentName:"p"},"development"),", ",Object(r.b)("inlineCode",{parentName:"p"},"preview"),", and ",Object(r.b)("inlineCode",{parentName:"p"},"production"),", but these could have been named ",Object(r.b)("inlineCode",{parentName:"p"},"foo"),", ",Object(r.b)("inlineCode",{parentName:"p"},"bar"),", and ",Object(r.b)("inlineCode",{parentName:"p"},"baz")," if that was your preference."),Object(r.b)("p",null,"To run a build with a specific profile, execute ",Object(r.b)("inlineCode",{parentName:"p"},"eas build --profile <profile-name>"),". If you omit the ",Object(r.b)("inlineCode",{parentName:"p"},"--profile")," flag, EAS CLI will default to using the profile with the name ",Object(r.b)("strong",{parentName:"p"},"production"),", if it exists."),Object(r.b)("h3",{id:"platform-specific-and-common-options"},"Platform-specific and common options"),Object(r.b)("p",null,"Inside each build profile you can specify ",Object(r.b)("inlineCode",{parentName:"p"},"android")," and ",Object(r.b)("inlineCode",{parentName:"p"},"ios")," fields that contain platform-specific configuration for the build. Fields that are available to both platforms can be provided on the platform-specific configuration object or on the root of the profile."),Object(r.b)("h3",{id:"sharing-configuration-between-profiles"},"Sharing configuration between profiles"),Object(r.b)("p",null,"Build profiles can extend another build profile using the ",Object(r.b)("inlineCode",{parentName:"p"},'"extends"')," key. For example, in the ",Object(r.b)("inlineCode",{parentName:"p"},"preview")," profile you may have ",Object(r.b)("inlineCode",{parentName:"p"},'"extends": "production"'),"; this would make the ",Object(r.b)("inlineCode",{parentName:"p"},"preview")," profile inherit configuration of the ",Object(r.b)("inlineCode",{parentName:"p"},"production")," profile."),Object(r.b)("h2",{id:"common-use-cases"},"Common use cases"),Object(r.b)("p",null,"Developers using Expo tools usually end up having three different types of builds: ",Object(r.b)("strong",{parentName:"p"},"development"),", ",Object(r.b)("strong",{parentName:"p"},"preview"),", and ",Object(r.b)("strong",{parentName:"p"},"production"),"."),Object(r.b)("h3",{id:"development-builds"},"Development builds"),Object(r.b)("p",null,"These builds include developer tools, and they are never submitted to an app store."),Object(r.b)("p",null,"By default, ",Object(r.b)("inlineCode",{parentName:"p"},"eas build:configure")," will create a ",Object(r.b)("inlineCode",{parentName:"p"},"development")," profile with ",Object(r.b)("inlineCode",{parentName:"p"},'"developmentClient": true'),". This indicates that this build depends on ",Object(r.b)("a",{parentName:"p",href:"/../../../../../../clients/introduction/"},"expo-dev-client"),"."),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"development")," profile also defaults to ",Object(r.b)("inlineCode",{parentName:"p"},'"distribution": "internal"'),". This will make it easy to distribute your app directly to physical iOS and Android devices ","\u2014"," ",Object(r.b)("a",{parentName:"p",href:"/../../../../../../build/internal-distribution/"},"learn more"),"."),Object(r.b)("p",null,"You may alternatively prefer for your development build to ",Object(r.b)("a",{parentName:"p",href:"/../../../../../../build-reference/simulators/"},"run in an iOS simulator"),". To do this, use the following configuration for ",Object(r.b)("inlineCode",{parentName:"p"},"development")," profile:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'{\n  "build": {\n    "development": {\n      "developmentClient": true,\n      "distribution": "internal",\n      "ios": {\n        "simulator": true\n      }\n    }\n    // ...\n  }\n  // ...\n}\n')),Object(r.b)("p",null,"If you'd like to create a build for internal distribution and another for the iOS simulator then you can create another development profile for that build. You might call the profile something like ",Object(r.b)("inlineCode",{parentName:"p"},"development-simulator")," and use the above configuration on that profile instead of on ",Object(r.b)("inlineCode",{parentName:"p"},"development"),". ",Object(r.b)("a",{parentName:"p",href:"/../../../../../../build-reference/apk/"},"No such configuration is required to run an Android APK on your device and in an emulator"),"; the same APK will work in both circumstances."),Object(r.b)("h3",{id:"preview-builds"},"Preview builds"),Object(r.b)("p",null,"These builds don't include developer tools, they are intended to be installed by your team and other stakeholders, to test out the app in production-like circumstances. In this way, they are similar to ",Object(r.b)("a",{parentName:"p",href:"/build/eas-json/#production-builds"},"production builds"),"; the difference arises in that they are either not signed for distribution on stores (ad hoc or enterprise provisioning on iOS), or are packaged in a way that is not optimal for store deployment (Android APK is best for preview, AAB is best for stores)."),Object(r.b)("p",null,"A minimal ",Object(r.b)("inlineCode",{parentName:"p"},"preview")," profile looks like this:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'{\n  "build": {\n    "preview": {\n      "distribution": "internal"\n    }\n    // ...\n  }\n  // ...\n}\n')),Object(r.b)("p",null,"Similar to ",Object(r.b)("a",{parentName:"p",href:"/build/eas-json/#development-builds"},"development builds"),", you can configure your preview build to run in the ",Object(r.b)("a",{parentName:"p",href:"/../../../../../../build-reference/simulators/"},"iOS simulator")," or create a variant of your preview profile for that purpose. ",Object(r.b)("a",{parentName:"p",href:"/../../../../../../build-reference/apk/"},"No such configuration is required to run an Android APK on your device and in an emulator"),"; the same APK will work in both circumstances."),Object(r.b)("h3",{id:"production-builds"},"Production builds"),Object(r.b)("p",null,"These builds are submitted to an app store, for release to the general public or as part of a store-facilitated testing process such as TestFlight."),Object(r.b)("p",null,"Production builds must be installed through their respective app stores; they cannot be installed directly to your iOS device/simulator or Android device/emulator. The only exception to this if you explicitly set ",Object(r.b)("inlineCode",{parentName:"p"},'"buildType": "apk"')," for Android on your build profile; however, it is recommended to use AAB when submitting to stores, and this is the default configuration."),Object(r.b)("p",null,"A minimal ",Object(r.b)("inlineCode",{parentName:"p"},"production")," profile looks like this:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'{\n  "build": {\n    "production": {}\n    // ...\n  }\n  // ...\n}\n')),Object(r.b)("h3",{id:"installing-multiple-builds-of-the-same-app-on-a-single-device"},"Installing multiple builds of the same app on a single device"),Object(r.b)("p",null,"It's common to have development and production builds installed simultaneously on the same device. ",Object(r.b)("a",{parentName:"p",href:"/build-reference/variants/"},'Learn about "installing app variants on the same device"'),"."),Object(r.b)("h2",{id:"configuring-your-build-tools"},"Configuring your build tools"),Object(r.b)("p",null,"Every build depends either implicitly or explicitly on a specific set of versions of related tools that are needed to carry out the build process. These include, but are not limited to: Node.js, npm, yarn, Ruby, Bundler, Cocoapods, Fastlane, Xcode, and Android NDK."),Object(r.b)("h3",{id:"selecting-build-tool-versions"},"Selecting build tool versions"),Object(r.b)("p",null,"Versions for the most common build tools can be set on build profiles with fields corresponding to names of the tools, for example ",Object(r.b)("inlineCode",{parentName:"p"},'"node"'),":"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'{\n  "build": {\n    "production": {\n      "node": "16.13.0"\n    }\n    // ...\n  }\n  // ...\n}\n')),Object(r.b)("p",null,"It's common to want to share build tool configuration between profiles, and we can use ",Object(r.b)("inlineCode",{parentName:"p"},"extends")," for that:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'{\n  "build": {\n    "production": {\n      "node": "16.13.0"\n    },\n    "preview": {\n      "extends": "production",\n      "distribution": "internal"\n    },\n    "development": {\n      "extends": "production",\n      "developmentClient": "true",\n      "distribution": "internal"\n    }\n    // ...\n  }\n  // ...\n}\n')),Object(r.b)("h3",{id:"selecting-a-base-image"},"Selecting a base image"),Object(r.b)("p",null,"The base image for the build job controls the default versions for a variety of dependencies, such as Node.js, Yarn, and Cocoapods. You can override them using the specific named fields as described above. However, the image includes specific versions of tools that can't be explicitly set any other way, such as the operating system version and Xcode version."),Object(r.b)("p",null,"If you are using the Expo managed workflow, EAS Build will pick the appropriate image to use with a reasonable set of dependencies for the SDK version that you are building for. Otherwise, it is recommended to read about the available images on ",Object(r.b)("a",{parentName:"p",href:"/../../../../../../build-reference/infrastructure/"},'"Build server infrastructure"'),"."),Object(r.b)("h2",{id:"environment-variables"},"Environment variables"),Object(r.b)("p",null,"You can configure environment variables on your build profiles using the ",Object(r.b)("inlineCode",{parentName:"p"},'"env"')," field. These environment variable those will be used to evaluate ",Object(r.b)("strong",{parentName:"p"},"app.config.js")," locally when you run ",Object(r.b)("inlineCode",{parentName:"p"},"eas build"),", and they will also be set on the EAS Build worker."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'{\n  "build": {\n    "production": {\n      "node": "16.13.0",\n      "env": {\n        "API_URL": "https://company.com/api"\n      }\n    },\n    "preview": {\n      "extends": "production",\n      "distribution": "internal",\n      "env": {\n        "API_URL": "https://staging.company.com/api"\n      }\n    }\n    // ...\n  }\n  // ...\n}\n')),Object(r.b)("p",null,"The ",Object(r.b)("a",{parentName:"p",href:"/../../../../../../build-reference/variables/"},'"Environment variables and secrets" reference')," explains this topic in greater detail, and the ",Object(r.b)("a",{parentName:"p",href:"/../../../../../../build/updates/"},"updates guide")," provides guidance on considerations when using this feature alongside ",Object(r.b)("strong",{parentName:"p"},"expo-updates"),"."))}c.isMDXComponent=!0},dhJC:function(e,t,n){"use strict";function i(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}n.d(t,"a",(function(){return i}))}},[["PtYl",1,0]]]);