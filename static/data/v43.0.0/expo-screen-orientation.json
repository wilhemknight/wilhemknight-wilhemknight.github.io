{"name":"expo-screen-orientation","kind":1,"kindString":"Project","originalName":"","children":[{"name":"Orientation","kind":8,"kindString":"Enumeration","children":[{"name":"LANDSCAPE_LEFT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Left landscape interface orientation."},"defaultValue":"3"},{"name":"LANDSCAPE_RIGHT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Right landscape interface orientation."},"defaultValue":"4"},{"name":"PORTRAIT_DOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Upside down portrait interface orientation."},"defaultValue":"2"},{"name":"PORTRAIT_UP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Right-side up portrait interface orientation."},"defaultValue":"1"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An unknown screen orientation. For example, the device is flat, perhaps on a table."},"defaultValue":"0"}]},{"name":"OrientationLock","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum whose values can be passed to the [`lockAsync`](#screenorientationlockasyncorientationlock)\nmethod.\n> __Note:__ `OrientationLock.ALL` and `OrientationLock.PORTRAIT` are invalid on devices which\ndon't support `OrientationLock.PORTRAIT_DOWN`."},"children":[{"name":"ALL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"All four possible orientations"},"defaultValue":"1"},{"name":"DEFAULT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The default orientation. On iOS, this will allow all orientations except `Orientation.PORTRAIT_DOWN`.\nOn Android, this lets the system decide the best orientation."},"defaultValue":"0"},{"name":"LANDSCAPE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Any landscape orientation."},"defaultValue":"5"},{"name":"LANDSCAPE_LEFT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Left landscape only."},"defaultValue":"6"},{"name":"LANDSCAPE_RIGHT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Right landscape only."},"defaultValue":"7"},{"name":"OTHER","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A platform specific orientation. This is not a valid policy that can be applied in [`lockAsync`](#screenorientationlockasyncorientationlock)."},"defaultValue":"8"},{"name":"PORTRAIT","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Any portrait orientation."},"defaultValue":"2"},{"name":"PORTRAIT_DOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Upside down portrait only."},"defaultValue":"4"},{"name":"PORTRAIT_UP","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Right-side up portrait only."},"defaultValue":"3"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An unknown screen orientation lock. This is not a valid policy that can be applied in [`lockAsync`](#screenorientationlockasyncorientationlock)."},"defaultValue":"9"}]},{"name":"SizeClassIOS","kind":8,"kindString":"Enumeration","comment":{"shortText":"Each iOS device has a default set of [size classes](https://developer.apple.com/library/archive/featuredarticles/ViewControllerPGforiPhoneOS/TheAdaptiveModel.html)\nthat you can use as a guide when designing your interface."},"children":[{"name":"COMPACT","kind":16,"kindString":"Enumeration member","defaultValue":"1"},{"name":"REGULAR","kind":16,"kindString":"Enumeration member","defaultValue":"0"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","defaultValue":"2"}]},{"name":"WebOrientation","kind":8,"kindString":"Enumeration","children":[{"name":"LANDSCAPE_PRIMARY","kind":16,"kindString":"Enumeration member","defaultValue":"\"landscape-primary\""},{"name":"LANDSCAPE_SECONDARY","kind":16,"kindString":"Enumeration member","defaultValue":"\"landscape-secondary\""},{"name":"PORTRAIT_PRIMARY","kind":16,"kindString":"Enumeration member","defaultValue":"\"portrait-primary\""},{"name":"PORTRAIT_SECONDARY","kind":16,"kindString":"Enumeration member","defaultValue":"\"portrait-secondary\""}]},{"name":"WebOrientationLock","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum representing the lock policies that can be applied on the web platform, modelled after\nthe [W3C specification](https://w3c.github.io/screen-orientation/#dom-orientationlocktype).\nThese values can be applied through the [`lockPlatformAsync`](#screenorientationlockplatformasyncplatforminfo)\nmethod."},"children":[{"name":"ANY","kind":16,"kindString":"Enumeration member","defaultValue":"\"any\""},{"name":"LANDSCAPE","kind":16,"kindString":"Enumeration member","defaultValue":"\"landscape\""},{"name":"LANDSCAPE_PRIMARY","kind":16,"kindString":"Enumeration member","defaultValue":"\"landscape-primary\""},{"name":"LANDSCAPE_SECONDARY","kind":16,"kindString":"Enumeration member","defaultValue":"\"landscape-secondary\""},{"name":"NATURAL","kind":16,"kindString":"Enumeration member","defaultValue":"\"natural\""},{"name":"PORTRAIT","kind":16,"kindString":"Enumeration member","defaultValue":"\"portrait\""},{"name":"PORTRAIT_PRIMARY","kind":16,"kindString":"Enumeration member","defaultValue":"\"portrait-primary\""},{"name":"PORTRAIT_SECONDARY","kind":16,"kindString":"Enumeration member","defaultValue":"\"portrait-secondary\""},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","defaultValue":"\"unknown\""}]},{"name":"OrientationChangeEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"orientationInfo","kind":1024,"kindString":"Property","comment":{"shortText":"The current `ScreenOrientationInfo` of the device."},"type":{"type":"reference","name":"ScreenOrientationInfo"}},{"name":"orientationLock","kind":1024,"kindString":"Property","comment":{"shortText":"The current `OrientationLock` of the device."},"type":{"type":"reference","name":"OrientationLock"}}]}}},{"name":"OrientationChangeListener","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"OrientationChangeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"PlatformOrientationInfo","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"screenOrientationArrayIOS","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__iOS Only.__ An array of orientations to allow on the iOS platform."},"type":{"type":"array","elementType":{"type":"reference","name":"Orientation"}}},{"name":"screenOrientationConstantAndroid","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__Android Only.__ A constant to set using the Android native [API](https://developer.android.com/reference/android/R.attr.html#screenOrientation).\nFor example, in order to set the lock policy to [unspecified](https://developer.android.com/reference/android/content/pm/ActivityInfo.html#SCREEN_ORIENTATION_UNSPECIFIED),\n`-1` should be passed in."},"type":{"type":"intrinsic","name":"number"}},{"name":"screenOrientationLockWeb","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__Web Only.__ A web orientation lock to apply in the browser."},"type":{"type":"reference","name":"WebOrientationLock"}}]}}},{"name":"ScreenOrientationInfo","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"horizontalSizeClass","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":" __iOS Only.__ The [horizontal size class](https://developer.apple.com/library/archive/featuredarticles/ViewControllerPGforiPhoneOS/TheAdaptiveModel.html)\nof the device."},"type":{"type":"reference","name":"SizeClassIOS"}},{"name":"orientation","kind":1024,"kindString":"Property","comment":{"shortText":"The current orientation of the device."},"type":{"type":"reference","name":"Orientation"}},{"name":"verticalSizeClass","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":" __iOS Only.__ The [vertical size class](https://developer.apple.com/library/archive/featuredarticles/ViewControllerPGforiPhoneOS/TheAdaptiveModel.html)\nof the device."},"type":{"type":"reference","name":"SizeClassIOS"}}]}}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"addOrientationChangeListener","kind":64,"kindString":"Function","signatures":[{"name":"addOrientationChangeListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Invokes the `listener` function when the screen orientation changes from `portrait` to `landscape`\nor from `landscape` to `portrait`. For example, it won't be invoked when screen orientation\nchange from `portrait up` to `portrait down`, but it will be called when there was a change from\n`portrait up` to `landscape left`."},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"text":"Each orientation update will pass an object with the new [`OrientationChangeEvent`](#screenorientationorientationchangeevent)\nto the listener.\n"},"type":{"type":"reference","name":"OrientationChangeListener"}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getOrientationAsync","kind":64,"kindString":"Function","signatures":[{"name":"getOrientationAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current screen orientation.","returns":"Returns a promise that fulfils with an [`Orientation`](#screenorientationorientation)\nvalue that reflects the current screen orientation.\n\n# Error codes\n- `ERR_SCREEN_ORIENTATION_GET_ORIENTATION_LOCK` - __Android Only.__ An unknown error occurred\n  when trying to get the system lock.\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Orientation"}],"name":"Promise"}}]},{"name":"getOrientationLockAsync","kind":64,"kindString":"Function","signatures":[{"name":"getOrientationLockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current screen orientation lock type.","returns":"Returns a promise which fulfils with an [`OrientationLock`](#screenorientationorientationlock)\nvalue.\n\n# Error codes\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"OrientationLock"}],"name":"Promise"}}]},{"name":"getPlatformOrientationLockAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPlatformOrientationLockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the platform specific screen orientation lock type.","returns":"Returns a promise which fulfils with a [`PlatformOrientationInfo`](#screenorientationplatformorientationinfo)\nvalue.\n\n# Error codes\n- `ERR_SCREEN_ORIENTATION_GET_PLATFORM_ORIENTATION_LOCK`\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PlatformOrientationInfo"}],"name":"Promise"}}]},{"name":"lockAsync","kind":64,"kindString":"Function","signatures":[{"name":"lockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Lock the screen orientation to a particular `OrientationLock`.","returns":"Returns a promise with `void` value, which fulfils when the orientation is set.\n\n# Error codes\n- `ERR_SCREEN_ORIENTATION_INVALID_ORIENTATION_LOCK` - An invalid [`OrientationLock`](#screenorientationorientationlock)\n  was passed in.\n- `ERR_SCREEN_ORIENTATION_UNSUPPORTED_ORIENTATION_LOCK` - The platform does not support the\n  orientation lock policy.\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\n","tags":[{"tag":"example","text":"\n```ts\nasync function changeScreenOrientation() {\n  await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE_LEFT);\n}\n```\n"}]},"parameters":[{"name":"orientationLock","kind":32768,"kindString":"Parameter","comment":{"text":"The orientation lock to apply. See the [`OrientationLock`](#screenorientationorientationlock)\nenum for possible values."},"type":{"type":"reference","name":"OrientationLock"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"lockPlatformAsync","kind":64,"kindString":"Function","signatures":[{"name":"lockPlatformAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"Returns a promise with `void` value, resolving when the orientation is set and rejecting\nif an invalid option or value is passed.\n\n# Error codes\n- `ERR_SCREEN_ORIENTATION_INVALID_ORIENTATION_LOCK` - __iOS Only.__ An invalid [`OrientationLock`](#screenorientationorientationlock)\n  was passed in.\n- `ERR_SCREEN_ORIENTATION_UNSUPPORTED_ORIENTATION_LOCK` - The platform does not support the\n  orientation lock policy.\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\n\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"The platform specific lock to apply. See the [`PlatformOrientationInfo`](#screenorientationplatformorientationinfo)\nobject type for the different platform formats."},"type":{"type":"reference","name":"PlatformOrientationInfo"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"removeOrientationChangeListener","kind":64,"kindString":"Function","signatures":[{"name":"removeOrientationChangeListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unsubscribes the listener associated with the `Subscription` object from all orientation change\nupdates."},"parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","comment":{"text":"A subscription object that manages the updates passed to a listener function\non an orientation change.\n"},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeOrientationChangeListeners","kind":64,"kindString":"Function","signatures":[{"name":"removeOrientationChangeListeners","kind":4096,"kindString":"Call signature","comment":{"shortText":"Removes all listeners subscribed to orientation change updates."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"supportsOrientationLockAsync","kind":64,"kindString":"Function","signatures":[{"name":"supportsOrientationLockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the [`OrientationLock`](#screenorientationorientationlock) policy is supported on\nthe device.","returns":"Returns a promise that resolves to a `boolean` value that reflects whether or not the\norientationLock is supported.\n"},"parameters":[{"name":"orientationLock","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"OrientationLock"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"unlockAsync","kind":64,"kindString":"Function","signatures":[{"name":"unlockAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the screen orientation back to the `OrientationLock.DEFAULT` policy.","returns":"Returns a promise with `void` value, which fulfils when the orientation is set.\n\n# Error codes\n- `ERR_SCREEN_ORIENTATION_MISSING_ACTIVITY` - __Android Only.__ Could not get the current activity.\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}