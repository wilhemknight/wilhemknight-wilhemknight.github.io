{"name":"expo-localization","kind":1,"kindString":"Project","originalName":"","children":[{"name":"Localization","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"currency","kind":1024,"kindString":"Property","comment":{"shortText":"Three-character ISO 4217 currency code. Returns `null` on web.","tags":[{"tag":"example","text":"`USD`, `EUR`, `CNY`, null\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"decimalSeparator","kind":1024,"kindString":"Property","comment":{"shortText":"Decimal separator used for formatting numbers.","tags":[{"tag":"example","text":"`,`, '.'\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"digitGroupingSeparator","kind":1024,"kindString":"Property","comment":{"shortText":"Digit grouping separator used when formatting numbers larger than 1000.","tags":[{"tag":"example","text":"`.`, '', ','\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"isMetric","kind":1024,"kindString":"Property","comment":{"shortText":"Boolean value that indicates whether the system uses the metric system.\nOn Android and web, this is inferred from the current region."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isRTL","kind":1024,"kindString":"Property","comment":{"shortText":"Returns if the system's language is written from Right-to-Left.\nThis can be used to build features like [bidirectional icons](https://material.io/design/usability/bidirectionality.html).","text":"Returns `false` in SSR environments.\n"},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isoCurrencyCodes","kind":1024,"kindString":"Property","comment":{"shortText":"List of all the supported language ISO codes."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"locale","kind":1024,"kindString":"Property","comment":{"shortText":"An [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag),\nconsisting of a two-character language code and optional script, region and variant codes.","tags":[{"tag":"example","text":"`en`, `en-US`, `zh-Hans`, `zh-Hans-CN`, `en-emodeng`\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"locales","kind":1024,"kindString":"Property","comment":{"shortText":"List of all the languages provided by the user settings.\nThese are returned in the order the user defines in their device settings.","tags":[{"tag":"example","text":"[`en`, `en-US`, `zh-Hans`, `zh-Hans-CN`, `en-emodeng`]\n"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"region","kind":1024,"kindString":"Property","comment":{"shortText":"The region code for your device that comes from the Region setting under Language & Region on iOS.\nThis value is always available on iOS, but might return `null` on Android or web.","tags":[{"tag":"example","text":"`US`, `NZ`, null\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"timezone","kind":1024,"kindString":"Property","comment":{"shortText":"The current timezone in display format.\nOn Web timezone is calculated with Intl.DateTimeFormat().resolvedOptions().timeZone. For a better estimation you could use the moment-timezone package but it will add significant bloat to your website's bundle size.","tags":[{"tag":"example","text":"`America/Los_Angeles`\n"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"currency","kind":32,"kindString":"Variable","comment":{"shortText":"Three-character ISO 4217 currency code. Returns `null` on web.","tags":[{"tag":"example","text":"`'USD'`, `'EUR'`, `'CNY'`, `null`\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"decimalSeparator","kind":32,"kindString":"Variable","comment":{"shortText":"Decimal separator used for formatting numbers.","tags":[{"tag":"example","text":"`','`, `'.'`\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"digitGroupingSeparator","kind":32,"kindString":"Variable","comment":{"shortText":"Digit grouping separator used when formatting numbers larger than 1000.","tags":[{"tag":"example","text":"`'.'`, `''`, `','`\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"isMetric","kind":32,"kindString":"Variable","comment":{"shortText":"Boolean value that indicates whether the system uses the metric system.\nOn Android and web, this is inferred from the current region."},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"..."},{"name":"isRTL","kind":32,"kindString":"Variable","comment":{"shortText":"Returns if the system's language is written from Right-to-Left.\nThis can be used to build features like [bidirectional icons](https://material.io/design/usability/bidirectionality.html).","text":"Returns `false` in Server Side Rendering (SSR) environments.\n"},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"..."},{"name":"isoCurrencyCodes","kind":32,"kindString":"Variable","comment":{"shortText":"A list of all the supported language ISO codes."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."},{"name":"locale","kind":32,"kindString":"Variable","comment":{"shortText":"An [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag),\nconsisting of a two-character language code and optional script, region and variant codes.","tags":[{"tag":"example","text":"`'en'`, `'en-US'`, `'zh-Hans'`, `'zh-Hans-CN'`, `'en-emodeng'`\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"locales","kind":32,"kindString":"Variable","comment":{"shortText":"List of all the native languages provided by the user settings.\nThese are returned in the order the user defines in their device settings."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."},{"name":"region","kind":32,"kindString":"Variable","comment":{"shortText":"The region code for your device that comes from the Region setting under Language & Region on iOS.\nThis value is always available on iOS, but might return `null` on Android or web.","tags":[{"tag":"example","text":"`'US'`, `'NZ'`, `null`\n"}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"timezone","kind":32,"kindString":"Variable","comment":{"shortText":"The current time zone in display format.\nOn Web time zone is calculated with Intl.DateTimeFormat().resolvedOptions().timeZone. For a\nbetter estimation you could use the moment-timezone package but it will add significant bloat to\nyour website's bundle size.","tags":[{"tag":"example","text":"`'America/Los_Angeles'`\n"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"getLocalizationAsync","kind":64,"kindString":"Function","signatures":[{"name":"getLocalizationAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the latest native values from the device. Locale can be changed on some Android devices\nwithout resetting the app.\n> On iOS, changing the locale will cause the device to reset meaning the constants will always be\ncorrect.","tags":[{"tag":"example","text":"\n```ts\n// When the app returns from the background on Android...\n\nconst { locale } = await Localization.getLocalizationAsync();\n```\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Localization"}],"name":"Promise"}}]}]}