{"name":"expo-network","kind":1,"kindString":"Project","originalName":"","children":[{"name":"NetworkStateType","kind":8,"kindString":"Enumeration","comment":{"shortText":"An enum of the different types of devices supported by Expo."},"children":[{"name":"BLUETOOTH","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over Bluetooth."},"defaultValue":"\"BLUETOOTH\""},{"name":"CELLULAR","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over mobile data or [`DUN-specific`](https://developer.android.com/reference/android/net/ConnectivityManager#TYPE_MOBILE_DUN)\nmobile connection when setting an upstream connection for tethering."},"defaultValue":"\"CELLULAR\""},{"name":"ETHERNET","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over Ethernet."},"defaultValue":"\"ETHERNET\""},{"name":"NONE","kind":16,"kindString":"Enumeration member","comment":{"shortText":"No active network connection detected."},"defaultValue":"\"NONE\""},{"name":"OTHER","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over other network connection types."},"defaultValue":"\"OTHER\""},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The connection type could not be determined."},"defaultValue":"\"UNKNOWN\""},{"name":"VPN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over VPN."},"defaultValue":"\"VPN\""},{"name":"WIFI","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over WiFi."},"defaultValue":"\"WIFI\""},{"name":"WIMAX","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Active network connection over Wimax."},"defaultValue":"\"WIMAX\""}]},{"name":"NetworkState","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isConnected","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If there is an active network connection. Note that this does not mean that internet is reachable.\nThis field is `false` if the type is either `Network.NetworkStateType.NONE` or `Network.NetworkStateType.UNKNOWN`,\n`true` otherwise."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isInternetReachable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If the internet is reachable with the currently active network connection. On Android, this\ndepends on `NetInfo.isConnected()` (API level < 29) or `ConnectivityManager.getActiveNetwork()`\n(API level >= 29). On iOS, this value will always be the same as `isConnected`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A [`NetworkStateType`](#networkstatetype) enum value that represents the current network\nconnection type."},"type":{"type":"reference","name":"NetworkStateType"}}]}}},{"name":"getIpAddressAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIpAddressAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the device's current IPv4 address. Returns `0.0.0.0`` if the IP address could not be retrieved.","text":"On web, this method uses the third-party [`ipify service`](https://www.ipify.org/) to get the\npublic IP address of the current device.","returns":"A `Promise` that fulfils with a `string` of the current IP address of the device's main\nnetwork interface. Can only be IPv4 address.\n","tags":[{"tag":"example","text":"\n```ts\nawait Network.getIpAddressAsync();\n// \"92.168.32.44\"\n```\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getMacAddressAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMacAddressAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the specified network interface's MAC address.","text":"> Beginning with iOS 7 and Android 11, non-system applications can no longer access the device's\nMAC address. In SDK 41 and above, this method will always resolve to a predefined value that\nisn't useful.\n\nIf you need to identify the device, use the `getIosIdForVendorAsync()` method / `androidId`\nproperty of the `expo-application` unimodule instead.\n","returns":"A `Promise` that fulfils with the value `'02:00:00:00:00:00'`.\n","tags":[{"tag":"deprecated","text":"This method is deprecated and will be removed in a future SDK version.\n"}]},"parameters":[{"name":"interfaceName","kind":32768,"kindString":"Parameter","comment":{"text":"A string representing interface name (`eth0`, `wlan0`) or `null` (default),\nmeaning the method should fetch the MAC address of the first available interface.\n"},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"null"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getNetworkStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getNetworkStateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the device's current network connection state.","text":"On web, `navigator.connection.type` is not available on browsers. So if there is an active\nnetwork connection, the field `type` returns `NetworkStateType.UNKNOWN`. Otherwise, it returns\n`NetworkStateType.NONE`.","returns":"A `Promise` that fulfils with a `NetworkState` object.\n","tags":[{"tag":"example","text":"\n```ts\nawait Network.getNetworkStateAsync();\n// {\n//   type: NetworkStateType.CELLULAR,\n//   isConnected: true,\n//   isInternetReachable: true,\n// }\n```\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"NetworkState"}],"name":"Promise"}}]},{"name":"isAirplaneModeEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAirplaneModeEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"__Android only.__ Tells if the device is in airplane mode.","returns":"Returns a `Promise` that fulfils with a `boolean` value for whether the device is in\nairplane mode or not.\n","tags":[{"tag":"example","text":"\n```ts\nawait Network.isAirplaneModeEnabledAsync();\n// false\n```\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}