{"name":"expo-application","kind":0,"kindString":"Project","flags":{},"originalName":"","children":[{"name":"ApplicationReleaseType","kind":4,"kindString":"Enumeration","flags":{},"children":[{"name":"AD_HOC","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"4"},{"name":"APP_STORE","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"5"},{"name":"DEVELOPMENT","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"3"},{"name":"ENTERPRISE","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"2"},{"name":"SIMULATOR","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"1"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","flags":{},"defaultValue":"0"}]},{"name":"androidId","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"**Android only.** The value of [`Settings.Secure.ANDROID_ID`](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID).\nThis is a hexadecimal `string` unique to each combination of app-signing key, user, and device.\nThe value may change if a factory reset is performed on the device or if an APK signing key changes.\nFor more information about how the platform handles `ANDROID_ID` in Android 8.0 (API level 26)\nand higher, see [Android 8.0 Behavior Changes](https://developer.android.com/about/versions/oreo/android-8.0-changes.html#privacy-all).\nOn iOS and web, this value is `null`.\n> In versions of the platform lower than Android 8.0 (API level 26), this value remains constant\n> for the lifetime of the user's device. See the [ANDROID_ID](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID)\n> official docs for more information.\n- E.g., `\"dd96dec43fb81c97\"`"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"applicationId","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The ID of the application. On Android, this is the application ID. On iOS, this is the bundle ID.\nOn web, this is `null`.\n- E.g., `\"com.cocoacasts.scribbles\"`, `\"com.apple.Pages\"`"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"applicationName","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The human-readable name of the application that is displayed with the app's icon on the device's\nhome screen or desktop. On Android and iOS, this value is a `string` unless the name could not be\nretrieved, in which case this value will be `null`. On web this value is `null`.\n- E.g., `\"Expo\"`, `\"Yelp\"`, `\"Instagram\"`"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"nativeApplicationVersion","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The human-readable version of the native application that may be displayed in the app store.\nThis is the `Info.plist` value for `CFBundleShortVersionString` on iOS and the version name set\nby `version` in `app.json` on Android at the time the native app was built.\nOn web, this value is `null`.\n- E.g., `\"2.11.0\"`"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"nativeBuildVersion","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"shortText":"The internal build version of the native application that the app store may use to distinguish\nbetween different binaries. This is the `Info.plist` value for `CFBundleVersion` on iOS (set with\n`ios.buildNumber` value in `app.json` in a standalone app) and the version code set by\n`android.versionCode` in `app.json` on Android at the time the native app was built. On web, this\nvalue is `null`. The return type on Android and iOS is `string`.\n- E.g., iOS: `\"2.11.0\"`, Android: `\"114\"`"},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]},"defaultValue":"..."},{"name":"getInstallReferrerAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getInstallReferrerAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"**Android only.** Gets the referrer URL of the installed app with the [`Install Referrer API`](https://developer.android.com/google/play/installreferrer)\nfrom the Google Play Store. In practice, the referrer URL may not be a complete, absolute URL.","returns":"A `Promise` that fulfills with a `string` of the referrer URL of the installed app.\n\n# Example\n```ts\nawait Application.getInstallReferrerAsync();\n// \"utm_source=google-play&utm_medium=organic\"\n```\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getInstallationTimeAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getInstallationTimeAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the time the app was installed onto the device, not counting subsequent updates. If the app\nis uninstalled and reinstalled, this method returns the time the app was reinstalled.\n- On iOS, this method uses the [`NSFileCreationDate`](https://developer.apple.com/documentation/foundation/nsfilecreationdate?language=objc)\nof the app's document root directory.\n- On Android, this method uses [`PackageInfo.firstInstallTime`](https://developer.android.com/reference/android/content/pm/PackageInfo.html#firstInstallTime).\n- On web, this method returns `null`.","returns":"Returns a `Promise` that fulfills with a `Date` object that specifies the time the app\nwas installed on the device.\n\n# Example\n```ts\nawait Application.getInstallationTimeAsync();\n// 2019-07-18T18:08:26.121Z\n```\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Date"}],"name":"Promise"}}]},{"name":"getIosApplicationReleaseTypeAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getIosApplicationReleaseTypeAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"**iOS only.** Gets the iOS application release type.","returns":"Returns a promise which fulfills with an [`ApplicationReleaseType`](#applicationreleasetype).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ApplicationReleaseType"}],"name":"Promise"}}]},{"name":"getIosIdForVendorAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getIosIdForVendorAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"**iOS only.** Gets the iOS \"identifier for vendor\" ([IDFV](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor))\nvalue, a string ID that uniquely identifies a device to the appâ€™s vendor. This method may\nsometimes return `nil`, in which case wait and call the method again later. This might happen\nwhen the device has been restarted before the user has unlocked the device.","text":"The OS will change the vendor identifier if all apps from the current app's vendor have been\nuninstalled.\n","returns":"A `Promise` that fulfills with a `string` specifying the app's vendor ID. Apps from the\nsame vendor will return the same ID. See Apple's documentation for more information about the\nvendor ID's semantics.\n\n# Example\n```ts\nawait Application.getIosIdForVendorAsync();\n// \"68753A44-4D6F-1226-9C60-0050E4C00067\"\n```\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getIosPushNotificationServiceEnvironmentAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getIosPushNotificationServiceEnvironmentAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"**iOS only.** Gets the current [Apple Push Notification (APN)](https://developer.apple.com/documentation/bundleresources/entitlements/aps-environment?language=objc)\nservice environment.","returns":"Returns a promise fulfilled with the string, either `'development'` or `'production'`,\nbased on the current APN environment.\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise"}}]},{"name":"getLastUpdateTimeAsync","kind":64,"kindString":"Function","flags":{},"signatures":[{"name":"getLastUpdateTimeAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"**Android only.** Gets the last time the app was updated from the Google Play Store.","returns":"Returns a `Promise` that fulfills with a `Date` object that specifies the last time\nthe app was updated via the Google Play Store).\n\n# Example\n```ts\nawait Application.getLastUpdateTimeAsync();\n// 2019-07-18T21:20:16.887Z\n```\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Date"}],"name":"Promise"}}]}]}