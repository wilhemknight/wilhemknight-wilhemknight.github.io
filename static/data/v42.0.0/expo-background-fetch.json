{"name":"expo-background-fetch","kind":0,"kindString":"Project","originalName":"","children":[{"name":"BackgroundFetchResult","kind":4,"kindString":"Enumeration","comment":{"shortText":"This return value is to let iOS know what the result of your background fetch was, so the\nplatform can better schedule future background fetches. Also, your app has up to 30 seconds\nto perform the task, otherwise your app will be terminated and future background fetches\nmay be delayed."},"children":[{"name":"Failed","kind":16,"kindString":"Enumeration member","comment":{"shortText":"An attempt to download data was made but that attempt failed."},"defaultValue":"3"},{"name":"NewData","kind":16,"kindString":"Enumeration member","comment":{"shortText":"New data was successfully downloaded."},"defaultValue":"2"},{"name":"NoData","kind":16,"kindString":"Enumeration member","comment":{"shortText":"There was no new data to download."},"defaultValue":"1"}]},{"name":"BackgroundFetchStatus","kind":4,"kindString":"Enumeration","children":[{"name":"Available","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Background updates are available for the app."},"defaultValue":"3"},{"name":"Denied","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The user explicitly disabled background behavior for this app or for the whole system."},"defaultValue":"1"},{"name":"Restricted","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Background updates are unavailable and the user cannot enable them again. This status can occur\nwhen, for example, parental controls are in effect for the current user."},"defaultValue":"2"}]},{"name":"BackgroundFetchOptions","kind":256,"kindString":"Interface","children":[{"name":"minimumInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Inexact interval in seconds between subsequent repeats of the background fetch alarm. The final\ninterval may differ from the specified one to minimize wakeups and battery usage.\n- On Android it defaults to __10 minutes__,\n- On iOS it calls [`BackgroundFetch.setMinimumIntervalAsync`](#backgroundfetchsetminimumintervalasyncminimuminterval)\nbehind the scenes and the default value is the smallest fetch interval supported by the system __(10-15 minutes)__.\nBackground fetch task receives no data, but your task should return a value that best describes\nthe results of your background fetch work.","tags":[{"tag":"returns","text":"Returns a promise that fulfils once the task is registered and rejects in case of any errors.\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"startOnBoot","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(Android only).__ Whether to restart background fetch events when the device has finished\nbooting. Defaults to `false`."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"stopOnTerminate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"__(Android only).__ Whether to stop receiving background fetch events after user terminates the\napp. Defaults to `true`."},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"getStatusAsync","kind":64,"kindString":"Function","signatures":[{"name":"getStatusAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets a status of background fetch.","returns":"Returns a promise which fulfils with one of `BackgroundFetchStatus` enum values.\n"},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"BackgroundFetchStatus"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"registerTaskAsync","kind":64,"kindString":"Function","signatures":[{"name":"registerTaskAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Registers background fetch task with given name. Registered tasks are saved in persistent storage and restored once the app is initialized."},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"text":"Name of the task to register. The task needs to be defined first - see [`TaskManager.defineTask`](taskmanager#defineTask)\nfor more details."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"text":"An object containing the background fetch options.\n\n# Example\n```ts\nimport * as BackgroundFetch from 'expo-background-fetch';\nimport * as TaskManager from 'expo-task-manager';\n\nTaskManager.defineTask(YOUR_TASK_NAME, () => {\n  try {\n    const receivedNewData = // do your background fetch here\n    return receivedNewData ? BackgroundFetch.Result.NewData : BackgroundFetch.Result.NoData;\n  } catch (error) {\n    return BackgroundFetch.Result.Failed;\n  }\n});\n```\n"},"type":{"type":"reference","name":"BackgroundFetchOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"setMinimumIntervalAsync","kind":64,"kindString":"Function","signatures":[{"name":"setMinimumIntervalAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets the minimum number of seconds that must elapse before another background fetch can be\ninitiated. This value is advisory only and does not indicate the exact amount of time expected\nbetween fetch operations.","text":"> This method doesn't take any effect on Android. It is a global value which means that it can\noverwrite settings from another application opened through Expo Go.\n","returns":"A promise which fulfils once the minimum interval is set.\n"},"parameters":[{"name":"minimumInterval","kind":32768,"kindString":"Parameter","comment":{"text":"Number of seconds that must elapse before another background fetch can be called."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"unregisterTaskAsync","kind":64,"kindString":"Function","signatures":[{"name":"unregisterTaskAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Unregisters background fetch task, so the application will no longer be executing this task.","returns":"A promise which fulfils when the task is fully unregistered.\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"text":"Name of the task to unregister."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}