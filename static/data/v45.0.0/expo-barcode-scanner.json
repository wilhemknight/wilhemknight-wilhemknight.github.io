{"name":"expo-barcode-scanner","kind":1,"kindString":"Project","originalName":"","children":[{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\"denied\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\"granted\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\"undetermined\""}]},{"name":"BarCodeScanner","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new BarCodeScanner","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"reference","name":"BarCodeScannerProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}]}}],"type":{"type":"reference","name":"BarCodeScanner"},"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}},{"name":"new BarCodeScanner","kind":16384,"kindString":"Constructor signature","comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\n"}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BarCodeScannerProps"}},{"name":"context","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"BarCodeScanner"},"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\n`React.ContextType` of your `static contextType`.\nShould be used with type annotation or static contextType.","text":"```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"lastEvents","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"defaultValue":"{}"},{"name":"lastEventsTimes","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"defaultValue":"{}"},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"ReactNode"}}]}}],"name":"Readonly"}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}}],"name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"Constants","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"BarCodeType","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}},{"name":"Type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}}]}},"defaultValue":"..."},{"name":"ConversionTables","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"},"defaultValue":"Type"}]}},"defaultValue":"..."},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\n\n```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"defaultProps","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"barCodeTypes","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}},"defaultValue":"..."},{"name":"type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"},"defaultValue":"Type.back"}]}},"defaultValue":"..."},{"name":"usePermissions","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a new permission hook with the permission methods built-in.\nThis can be used to quickly create specific permission hooks in every module.","tags":[{"tag":"example","text":"\n```ts\nconst [status, requestPermission] = BarCodeScanner.usePermissions();\n```\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}},"defaultValue":"..."},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"render","kind":2048,"kindString":"Method","signatures":[{"name":"render","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}},{"name":"getPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user's permissions for accessing the camera.","returns":"Return a promise that fulfills to an object of type [`PermissionResponse`](#permissionresponse).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing the camera.","text":"On iOS this will require apps to specify the `NSCameraUsageDescription` entry in the `Info.plist`.","returns":"Return a promise that fulfills to an object of type [`PermissionResponse`](#permissionresponse).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"scanFromURLAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"scanFromURLAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Scan bar codes from the image given by the URL.","returns":"A possibly empty array of objects of the `BarCodeScannerResult` shape, where the type\nrefers to the bar code type that was scanned and the data is the information encoded in the bar\ncode.\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"URL to get the image from."},"type":{"type":"intrinsic","name":"string"}},{"name":"barCodeTypes","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of bar code types. Defaults to all supported bar code types on\nthe platform.\n> __Note:__ Only QR codes are supported on iOS."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"BarCodeScannerResult"}}],"name":"Promise"}}]}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Component"}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"BarCodeBounds","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"origin","kind":1024,"kindString":"Property","comment":{"shortText":"The origin point of the bounding box."},"type":{"type":"reference","name":"BarCodePoint"}},{"name":"size","kind":1024,"kindString":"Property","comment":{"shortText":"The size of the bounding box."},"type":{"type":"reference","name":"BarCodeSize"}}]}}},{"name":"BarCodeEvent","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"BarCodeScannerResult"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"target","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}]}}]}},{"name":"BarCodeEventCallbackArguments","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"BarCodeEvent"}}]}}},{"name":"BarCodePoint","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Those coordinates are represented in the coordinate space of the barcode source (e.g. when you\nare using the barcode scanner view, these values are adjusted to the dimensions of the view)."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"x","kind":1024,"kindString":"Property","comment":{"shortText":"The `x` coordinate value."},"type":{"type":"intrinsic","name":"number"}},{"name":"y","kind":1024,"kindString":"Property","comment":{"shortText":"The `y` coordinate value."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"BarCodeScannedCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"params","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BarCodeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"BarCodeScannerProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"barCodeTypes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An array of bar code types. Usage: `BarCodeScanner.Constants.BarCodeType.<codeType>` where\n`codeType` is one of these [listed above](#supported-formats). Defaults to all supported bar\ncode types. It is recommended to provide only the bar code formats you expect to scan to\nminimize battery usage.","text":"For example: `barCodeTypes={[BarCodeScanner.Constants.BarCodeType.qr]}`.\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"onBarCodeScanned","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A callback that is invoked when a bar code has been successfully scanned. The callback is\nprovided with an [BarCodeScannerResult](#barcodescannerresult).\n> __Note:__ Passing `undefined` to the `onBarCodeScanned` prop will result in no scanning. This\n> can be used to effectively \"pause\" the scanner so that it doesn't continually scan even after\n> data has been retrieved."},"type":{"type":"reference","name":"BarCodeScannedCallback"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Camera facing. Use one of `BarCodeScanner.Constants.Type`. Use either `Type.front` or `Type.back`.\nSame as `Camera.Constants.Type`.","tags":[{"tag":"default","text":"Type.back\n"}]},"type":{"type":"union","types":[{"type":"literal","value":"front"},{"type":"literal","value":"back"},{"type":"intrinsic","name":"number"}]}}]}}]}},{"name":"BarCodeScannerResult","kind":4194304,"kindString":"Type alias","comment":{"shortText":"> __Note:__ `bounds` and `cornerPoints` are not always available. On iOS, for `code39` and `pdf417`\n> you don't get those values. Moreover, on iOS, those values don't have to bounds the whole barcode.\n> For some types, they will represent the area used by the scanner."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"bounds","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The [BarCodeBounds](#barcodebounds) object."},"type":{"type":"reference","name":"BarCodeBounds"}},{"name":"cornerPoints","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Corner points of the bounding box."},"type":{"type":"array","elementType":{"type":"reference","name":"BarCodePoint"}}},{"name":"data","kind":1024,"kindString":"Property","comment":{"shortText":"The information encoded in the bar code."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"The barcode type."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"BarCodeSize","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","comment":{"shortText":"The height value."},"type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"kindString":"Property","comment":{"shortText":"The width value."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"Constants","kind":32,"kindString":"Variable","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"BarCodeType","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}},{"name":"Type","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}}]}}},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user's permissions for accessing the camera.","returns":"Return a promise that fulfills to an object of type [`PermissionResponse`](#permissionresponse).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing the camera.","text":"On iOS this will require apps to specify the `NSCameraUsageDescription` entry in the `Info.plist`.","returns":"Return a promise that fulfills to an object of type [`PermissionResponse`](#permissionresponse).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"scanFromURLAsync","kind":64,"kindString":"Function","signatures":[{"name":"scanFromURLAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Scan bar codes from the image given by the URL.","returns":"A possibly empty array of objects of the `BarCodeScannerResult` shape, where the type\nrefers to the bar code type that was scanned and the data is the information encoded in the bar\ncode.\n"},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"shortText":"URL to get the image from."},"type":{"type":"intrinsic","name":"string"}},{"name":"barCodeTypes","kind":32768,"kindString":"Parameter","comment":{"shortText":"An array of bar code types. Defaults to all supported bar code types on\nthe platform.\n> __Note:__ Only QR codes are supported on iOS."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"BarCodeScannerResult"}}],"name":"Promise"}}]},{"name":"usePermissions","kind":64,"kindString":"Function","signatures":[{"name":"usePermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a new permission hook with the permission methods built-in.\nThis can be used to quickly create specific permission hooks in every module."},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}]}