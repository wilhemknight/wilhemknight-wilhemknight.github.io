{"name":"expo-camera","kind":1,"kindString":"Project","originalName":"","children":[{"name":"AutoFocus","kind":8,"kindString":"Enumeration","children":[{"name":"auto","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"web\n"}]},"defaultValue":"\"auto\""},{"name":"off","kind":16,"kindString":"Enumeration member","defaultValue":"\"off\""},{"name":"on","kind":16,"kindString":"Enumeration member","defaultValue":"\"on\""},{"name":"singleShot","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"web\n"}]},"defaultValue":"\"singleShot\""}]},{"name":"CameraType","kind":8,"kindString":"Enumeration","children":[{"name":"back","kind":16,"kindString":"Enumeration member","defaultValue":"\"back\""},{"name":"front","kind":16,"kindString":"Enumeration member","defaultValue":"\"front\""}]},{"name":"FlashMode","kind":8,"kindString":"Enumeration","children":[{"name":"auto","kind":16,"kindString":"Enumeration member","defaultValue":"\"auto\""},{"name":"off","kind":16,"kindString":"Enumeration member","defaultValue":"\"off\""},{"name":"on","kind":16,"kindString":"Enumeration member","defaultValue":"\"on\""},{"name":"torch","kind":16,"kindString":"Enumeration member","defaultValue":"\"torch\""}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\"denied\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\"granted\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\"undetermined\""}]},{"name":"VideoCodec","kind":8,"kindString":"Enumeration","comment":{"shortText":"This option specifies what codec to use when recording a video.","tags":[{"tag":"platform","text":"ios\n"}]},"children":[{"name":"AppleProRes422","kind":16,"kindString":"Enumeration member","defaultValue":"\"apcn\""},{"name":"AppleProRes4444","kind":16,"kindString":"Enumeration member","defaultValue":"\"ap4h\""},{"name":"H264","kind":16,"kindString":"Enumeration member","defaultValue":"\"avc1\""},{"name":"HEVC","kind":16,"kindString":"Enumeration member","defaultValue":"\"hvc1\""},{"name":"JPEG","kind":16,"kindString":"Enumeration member","defaultValue":"\"jpeg\""}]},{"name":"VideoQuality","kind":8,"kindString":"Enumeration","children":[{"name":"1080p","kind":16,"kindString":"Enumeration member","defaultValue":"\"1080p\""},{"name":"2160p","kind":16,"kindString":"Enumeration member","defaultValue":"\"2160p\""},{"name":"480p","kind":16,"kindString":"Enumeration member","defaultValue":"\"480p\""},{"name":"4:3","kind":16,"kindString":"Enumeration member","defaultValue":"\"4:3\""},{"name":"720p","kind":16,"kindString":"Enumeration member","defaultValue":"\"720p\""}]},{"name":"VideoStabilization","kind":8,"kindString":"Enumeration","children":[{"name":"auto","kind":16,"kindString":"Enumeration member","defaultValue":"\"auto\""},{"name":"cinematic","kind":16,"kindString":"Enumeration member","defaultValue":"\"cinematic\""},{"name":"off","kind":16,"kindString":"Enumeration member","defaultValue":"\"off\""},{"name":"standard","kind":16,"kindString":"Enumeration member","defaultValue":"\"standard\""}]},{"name":"WhiteBalance","kind":8,"kindString":"Enumeration","children":[{"name":"auto","kind":16,"kindString":"Enumeration member","defaultValue":"\"auto\""},{"name":"cloudy","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"cloudy\""},{"name":"continuous","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"web\n"}]},"defaultValue":"\"continuous\""},{"name":"fluorescent","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"fluorescent\""},{"name":"incandescent","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"incandescent\""},{"name":"manual","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"web\n"}]},"defaultValue":"\"manual\""},{"name":"shadow","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"shadow\""},{"name":"sunny","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"sunny\""}]},{"name":"Camera","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new Camera","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"union","types":[{"type":"reference","name":"CameraProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Readonly"}]}}],"type":{"type":"reference","name":"default"},"inheritedFrom":{"type":"reference","name":"React.Component<CameraProps>.constructor"}},{"name":"new Camera","kind":16384,"kindString":"Constructor signature","comment":{"tags":[{"tag":"deprecated","text":""},{"tag":"see","text":"https://reactjs.org/docs/legacy-context.html\n"}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"CameraProps"}},{"name":"context","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"default"},"inheritedFrom":{"type":"reference","name":"React.Component<CameraProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<CameraProps>.constructor"}},{"name":"_cameraHandle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"number"}]}},{"name":"_cameraRef","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}},{"type":"intrinsic","name":"any"}],"name":"Component"}]}},{"name":"_lastEvents","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"eventName","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}},"defaultValue":"{}"},{"name":"_lastEventsTimes","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"eventName","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Date"}}}},"defaultValue":"{}"},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"shortText":"If using the new style context, re-declare this in your class to be the\n`React.ContextType` of your `static contextType`.\nShould be used with type annotation or static contextType.","text":"```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html\n"}]},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Readonly"},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"children","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"ReactNode"}}]}}],"name":"Readonly"}]},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"tags":[{"tag":"deprecated","text":"\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}}],"name":"Readonly"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"Constants","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reference","name":"ConstantsType"},"defaultValue":"..."},{"name":"ConversionTables","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoFocus","kind":1024,"kindString":"Property","type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":"on"},{"type":"literal","value":"off"},{"type":"literal","value":"auto"},{"type":"literal","value":"singleShot"}]},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"}]}],"name":"Record"}},{"name":"flashMode","kind":1024,"kindString":"Property","type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":"on"},{"type":"literal","value":"off"},{"type":"literal","value":"auto"},{"type":"literal","value":"torch"}]},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"name":"Record"}},{"name":"type","kind":1024,"kindString":"Property","type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":"front"},{"type":"literal","value":"back"}]},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"name":"Record"}},{"name":"whiteBalance","kind":1024,"kindString":"Property","type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":"auto"},{"type":"literal","value":"sunny"},{"type":"literal","value":"cloudy"},{"type":"literal","value":"shadow"},{"type":"literal","value":"incandescent"},{"type":"literal","value":"fluorescent"},{"type":"literal","value":"continuous"},{"type":"literal","value":"manual"}]},{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"name":"Record"}}]}},"defaultValue":"ConversionTables"},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"shortText":"If set, `this.context` will be set at runtime to the current value of the given Context.","text":"Usage:\n\n```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```\n","tags":[{"tag":"see","text":"https://reactjs.org/docs/context.html#classcontexttype\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"defaultProps","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reference","name":"CameraProps"},"defaultValue":"..."},{"name":"useCameraPermissions","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a new permission hook with the permission methods built-in.\nThis can be used to quickly create specific permission hooks in every module.","tags":[{"tag":"example","text":"\n```ts\nconst [status, requestPermission] = Camera.useCameraPermissions();\n```\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}},"defaultValue":"..."},{"name":"useMicrophonePermissions","kind":1024,"kindString":"Property","flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a new permission hook with the permission methods built-in.\nThis can be used to quickly create specific permission hooks in every module.","tags":[{"tag":"example","text":"\n```ts\nconst [status, requestPermission] = Camera.useMicrophonePermissions();\n```\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}},"defaultValue":"..."},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.","text":"This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"_onCameraReady","kind":2048,"kindString":"Method","signatures":[{"name":"_onCameraReady","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]},{"name":"_onMountError","kind":2048,"kindString":"Method","signatures":[{"name":"_onMountError","kind":4096,"kindString":"Call signature","parameters":[{"name":"__namedParameters","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"message","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"_onObjectDetected","kind":2048,"kindString":"Method","signatures":[{"name":"_onObjectDetected","kind":4096,"kindString":"Call signature","parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Function"}}],"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"__namedParameters","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}]},{"name":"_setReference","kind":2048,"kindString":"Method","signatures":[{"name":"_setReference","kind":4096,"kindString":"Call signature","parameters":[{"name":"ref","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal"}},{"type":"intrinsic","name":"any"}],"name":"Component"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after a component is mounted. Setting state here will trigger re-rendering."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately after updating occurs. Not called for the initial render.","text":"The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.","text":"Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n","tags":[{"tag":"deprecated","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.","text":"Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n","tags":[{"tag":"deprecated","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called immediately before rendering when new props or state is received. Not called for the initial render.","text":"Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n","tags":[{"tag":"deprecated","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"tag":"see","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getAvailablePictureSizesAsync","kind":2048,"kindString":"Method","signatures":[{"name":"getAvailablePictureSizesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get picture sizes that are supported by the device for given `ratio`.","returns":"Returns a Promise that resolves to an array of strings representing picture sizes that can be passed to `pictureSize` prop.\nThe list varies across Android devices but is the same for every iOS.\n"},"parameters":[{"name":"ratio","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"A string representing aspect ratio of sizes to be returned."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"Promise"}}]},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.","text":"Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Readonly"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"getSupportedRatiosAsync","kind":2048,"kindString":"Method","signatures":[{"name":"getSupportedRatiosAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get aspect ratios that are supported by the device and can be passed via `ratio` prop.","returns":"Returns a Promise that resolves to an array of strings representing ratios, eg. `['4:3', '1:1']`.","tags":[{"tag":"platform","text":"android\n"}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"Promise"}}]},{"name":"pausePreview","kind":2048,"kindString":"Method","signatures":[{"name":"pausePreview","kind":4096,"kindString":"Call signature","comment":{"shortText":"Pauses the camera preview. It is not recommended to use `takePictureAsync` when preview is paused."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"recordAsync","kind":2048,"kindString":"Method","signatures":[{"name":"recordAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Starts recording a video that will be saved to cache directory. Videos are rotated to match device's orientation.\nFlipping camera during a recording results in stopping it.","returns":"Returns a Promise that resolves to an object containing video file `uri` property and a `codec` property on iOS.\nThe Promise is returned if `stopRecording` was invoked, one of `maxDuration` and `maxFileSize` is reached or camera preview is stopped.","tags":[{"tag":"platform","text":"android"},{"tag":"platform","text":"ios\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"A map of `CameraRecordingOptions` type."},"type":{"type":"reference","name":"CameraRecordingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"uri","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}],"name":"Promise"}}]},{"name":"render","kind":2048,"kindString":"Method","signatures":[{"name":"render","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"resumePreview","kind":2048,"kindString":"Method","signatures":[{"name":"resumePreview","kind":4096,"kindString":"Call signature","comment":{"shortText":"Resumes the camera preview."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Readonly"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K"}],"name":"Pick"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"shortText":"Called to determine whether the change in props and state should trigger a re-render.","text":"`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Readonly"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}},{"name":"stopRecording","kind":2048,"kindString":"Method","signatures":[{"name":"stopRecording","kind":4096,"kindString":"Call signature","comment":{"shortText":"Stops recording if any is in progress."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"takePictureAsync","kind":2048,"kindString":"Method","signatures":[{"name":"takePictureAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Takes a picture and saves it to app's cache directory. Photos are rotated to match device's orientation\n(if `options.skipProcessing` flag is not enabled) and scaled to match the preview. Anyway on Android it is essential\nto set ratio prop to get a picture with correct dimensions.\n> **Note**: Make sure to wait for the [`onCameraReady`](#oncameraready) callback before calling this method.","returns":"Returns a Promise that resolves to `CameraCapturedPicture` object, where `uri` is a URI to the local image file on iOS,\nAndroid, and a base64 string on web (usable as the source for an `Image` element). The `width` and `height` properties specify\nthe dimensions of the image. `base64` is included if the `base64` option was truthy, and is a string containing the JPEG data\nof the image in Base64--prepend that with `'data:image/jpg;base64,'` to get a data URI, which you can use as the source\nfor an `Image` element for example. `exif` is included if the `exif` option was truthy, and is an object containing EXIF\ndata for the image--the names of its properties are EXIF tags and their values are the values for those tags.\n\n> On native platforms, the local image URI is temporary. Use [`FileSystem.copyAsync`](filesystem.md#filesystemcopyasyncoptions)\n> to make a permanent copy of the image.\n\n> On web, the `uri` is a base64 representation of the image because file system URLs are not supported in the browser.\n> The `exif` data returned on web is a partial representation of the [`MediaTrackSettings`](https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings),\n> if available.\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"An object in form of `CameraPictureOptions` type."},"type":{"type":"reference","name":"CameraPictureOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CameraCapturedPicture"}],"name":"Promise"}}]},{"name":"getAvailableCameraTypesAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"getAvailableCameraTypesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns a list of camera types `['front', 'back']`. This is useful for desktop browsers which only have front-facing cameras.","tags":[{"tag":"platform","text":"web\n"}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"CameraType"}}],"name":"Promise"}}]},{"name":"getAvailableVideoCodecsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"getAvailableVideoCodecsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Queries the device for the available video codecs that can be used in video recording.","returns":"A promise that resolves to a list of strings that represents available codecs.","tags":[{"tag":"platform","text":"ios\n"}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"VideoCodec"}}],"name":"Promise"}}]},{"name":"getCameraPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"getCameraPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user's permissions for accessing camera.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getMicrophonePermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"getMicrophonePermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user's permissions for accessing microphone.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"Deprecated. Use `getCameraPermissionsAsync` or `getMicrophonePermissionsAsync` instead.\nChecks user's permissions for accessing camera.\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check whether the current device has a camera. This is useful for web and simulators cases.\nThis isn't influenced by the Permissions API (all platforms), or HTTP usage (in the browser).\nYou will still need to check if the native permission has been accepted.","tags":[{"tag":"platform","text":"web\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"requestCameraPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"requestCameraPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing camera.\nOn iOS this will require apps to specify an `NSCameraUsageDescription` entry in the **Info.plist**.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestMicrophonePermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"requestMicrophonePermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing the microphone.\nOn iOS this will require apps to specify an `NSMicrophoneUsageDescription` entry in the **Info.plist**.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing camera.\nOn iOS this will require apps to specify both `NSCameraUsageDescription` and `NSMicrophoneUsageDescription` entries in the **Info.plist**.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).","tags":[{"tag":"deprecated","text":"Use `requestCameraPermissionsAsync` or `requestMicrophonePermissionsAsync` instead.\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"CameraProps"}],"name":"Component"}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"BarCodePoint","kind":4194304,"kindString":"Type alias","type":{"type":"reference","name":"Point"}},{"name":"BarCodeScanningResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"cornerPoints","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Corner points of the bounding box."},"type":{"type":"array","elementType":{"type":"reference","name":"BarCodePoint"}}},{"name":"data","kind":1024,"kindString":"Property","comment":{"shortText":"The information encoded in the bar code."},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"shortText":"The barcode type."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"CameraCapturedPicture","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"exif","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"MediaTrackSettings"}],"name":"Partial"},{"type":"intrinsic","name":"any"}]}},{"name":"height","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}},{"name":"CameraMountError","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"message","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"CameraNativeProps","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoFocus","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"number"}]}},{"name":"barCodeScannerEnabled","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"barCodeScannerSettings","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"BarCodeSettings"}},{"name":"faceDetectorEnabled","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"faceDetectorSettings","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"object"}},{"name":"flashMode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]}},{"name":"focusDepth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"onCameraReady","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"CameraReadyListener"}},{"name":"onMountError","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"MountErrorListener"}},{"name":"onPictureSaved","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"PictureSavedListener"}},{"name":"pictureSize","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"pointerEvents","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}},{"name":"poster","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"ratio","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"ref","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"Function"}},{"name":"style","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]}},{"name":"useCamera2Api","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"whiteBalance","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]}},{"name":"zoom","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"onBarCodeScanned","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onBarCodeScanned","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"BarCodeScanningResult"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onFaceDetectionError","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onFaceDetectionError","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"Error"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onFacesDetected","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onFacesDetected","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nativeEvent","kind":1024,"kindString":"Property","type":{"type":"reference","name":"FaceDetectionResult"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"CameraPictureOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to also include the image data in Base64 format."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"exif","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to also include the EXIF data for the image."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"imageType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"platform","text":"web\n"}]},"type":{"type":"reference","name":"ImageType"}},{"name":"isImageMirror","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"platform","text":"web\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"quality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specify the quality of compression, from 0 to 1. 0 means compress for small size, 1 means compress for maximum quality."},"type":{"type":"intrinsic","name":"number"}},{"name":"scale","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"tags":[{"tag":"platform","text":"web\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"skipProcessing","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If set to `true`, camera skips orientation adjustment and returns an image straight from the device's camera.\nIf enabled, `quality` option is discarded (processing pipeline is skipped as a whole).\nAlthough enabling this option reduces image delivery time significantly, it may cause the image to appear in a wrong orientation\nin the `Image` component (at the time of writing, it does not respect EXIF orientation of the images).\n> **Note**: Enabling `skipProcessing` would cause orientation uncertainty. `Image` component does not respect EXIF\n> stored orientation information, that means obtained image would be displayed wrongly (rotated by 90°, 180° or 270°).\n> Different devices provide different orientations. For example some Sony Xperia or Samsung devices don't provide\n> correctly oriented images by default. To always obtain correctly oriented image disable `skipProcessing` option."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"onPictureSaved","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onPictureSaved","kind":4096,"kindString":"Call signature","comment":{"shortText":"A callback invoked when picture is saved. If set, the promise of this method will resolve immediately with no data after picture is captured.\nThe data that it should contain will be passed to this callback. If displaying or processing a captured photo right after taking it\nis not your case, this callback lets you skip waiting for it to be saved."},"parameters":[{"name":"picture","kind":32768,"kindString":"Parameter","comment":{"shortText":"\n"},"type":{"type":"reference","name":"CameraCapturedPicture"}}],"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"CameraProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoFocus","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"State of camera auto focus. Use one of [`Camera.Constants.AutoFocus`](#autofocus). When `on`,\nauto focus will be enabled, when `off`, it won't and focus will lock as it was in the moment of change,\nbut it can be adjusted on some devices via `focusDepth` prop."},"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"number"},{"type":"reference","name":"AutoFocus"}]}},{"name":"barCodeScannerSettings","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Settings exposed by [`BarCodeScanner`](bar-code-scanner) module. Supported settings: **barCodeTypes**.","tags":[{"tag":"example","text":"\n```tsx\n<Camera\n  barCodeScannerSettings={{\n    barCodeTypes: [BarCodeScanner.Constants.BarCodeType.qr],\n  }}\n/>\n```\n"}]},"type":{"type":"intrinsic","name":"object"}},{"name":"faceDetectorSettings","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A settings object passed directly to an underlying module providing face detection features.\nSee [`DetectionOptions`](facedetector/#detectionoptions) in FaceDetector documentation for details."},"type":{"type":"intrinsic","name":"object"}},{"name":"flashMode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Camera flash mode. Use one of `Camera.Constants.FlashMode`. When `on`, the flash on your device will\nturn on when taking a picture, when `off`, it won't. Setting to `auto` will fire flash if required,\n`torch` turns on flash during the preview.","tags":[{"tag":"default","text":"FlashMode.off\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","name":"FlashMode"}]}},{"name":"focusDepth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Distance to plane of the sharpest focus. A value between `0` and `1` where: `0` - infinity focus, `1` - focus as close as possible.\nFor Android this is available only for some devices and when `useCamera2Api` is set to `true`.","tags":[{"tag":"default","text":"0\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"pictureSize","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A string representing the size of pictures [`takePictureAsync`](#takepictureasync) will take.\nAvailable sizes can be fetched with [`getAvailablePictureSizesAsync`](#getavailablepicturesizesasync)."},"type":{"type":"intrinsic","name":"string"}},{"name":"poster","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A URL for an image to be shown while the camera is loading.","tags":[{"tag":"platform","text":"web\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"ratio","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A string representing aspect ratio of the preview, eg. `4:3`, `16:9`, `1:1`. To check if a ratio is supported\nby the device use [`getSupportedRatiosAsync`](#getsupportedratiosasync).","tags":[{"tag":"default","text":"4:3."},{"tag":"platform","text":"android\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Camera facing. Use one of `Camera.Constants.Type`. When `Type.front`, use the front-facing camera.\nWhen `Type.back`, use the back-facing camera.","tags":[{"tag":"default","text":"Type.back\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","name":"CameraType"}]}},{"name":"useCamera2Api","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to use Android's Camera2 API. See `Note` at the top of this page.","tags":[{"tag":"platform","text":"android\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"videoStabilizationMode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The video stabilization mode used for a video recording. Use one of [`Camera.Constants.VideoStabilization`](#videostabilization).\nYou can read more about each stabilization type in [Apple Documentation](https://developer.apple.com/documentation/avfoundation/avcapturevideostabilizationmode).","tags":[{"tag":"platform","text":"ios\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"whiteBalance","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Camera white balance. Use one of [`Camera.Constants.WhiteBalance`](#whitebalance). If a device does not support any of these values previous one is used."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","name":"WhiteBalance"}]}},{"name":"zoom","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A value between `0` and `1` being a percentage of device's max zoom. `0` - not zoomed, `1` - maximum zoom.","tags":[{"tag":"default","text":"0\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"onBarCodeScanned","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onBarCodeScanned","kind":4096,"kindString":"Call signature","comment":{"shortText":"Callback that is invoked when a bar code has been successfully scanned. The callback is provided with\nan object of the [`BarCodeScanningResult`](#barcodescanningresult) shape, where the `type`\nrefers to the bar code type that was scanned and the `data` is the information encoded in the bar code\n(in this case of QR codes, this is often a URL). See [`BarCodeScanner.Constants.BarCodeType`](bar-code-scanner#supported-formats)\nfor supported values."},"parameters":[{"name":"scanningResult","kind":32768,"kindString":"Parameter","comment":{"shortText":"\n"},"type":{"type":"reference","name":"BarCodeScanningResult"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onCameraReady","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onCameraReady","kind":4096,"kindString":"Call signature","comment":{"shortText":"Callback invoked when camera preview has been set."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"onFacesDetected","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onFacesDetected","kind":4096,"kindString":"Call signature","comment":{"shortText":"Callback invoked with results of face detection on the preview. See [FaceDetector documentation](facedetector/#detectionresult) for details."},"parameters":[{"name":"faces","kind":32768,"kindString":"Parameter","comment":{"shortText":"\n"},"type":{"type":"reference","name":"FaceDetectionResult"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"onMountError","kind":2048,"kindString":"Method","flags":{"isOptional":true},"signatures":[{"name":"onMountError","kind":4096,"kindString":"Call signature","comment":{"shortText":"Callback invoked when camera preview could not been started."},"parameters":[{"name":"event","kind":32768,"kindString":"Parameter","comment":{"shortText":"Error object that contains a `message`.\n"},"type":{"type":"reference","name":"CameraMountError"}}],"type":{"type":"intrinsic","name":"void"}}]}]}}]}},{"name":"CameraRecordingOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"codec","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"This option specifies what codec to use when recording the video. See [`Camera.Constants.VideoCodec`](#video-codec) for the possible values.","tags":[{"tag":"platform","text":"ios\n"}]},"type":{"type":"reference","name":"VideoCodec"}},{"name":"maxDuration","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum video duration in seconds."},"type":{"type":"intrinsic","name":"number"}},{"name":"maxFileSize","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maximum video file size in bytes."},"type":{"type":"intrinsic","name":"number"}},{"name":"mirror","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If `true`, the recorded video will be flipped along the vertical axis. iOS flips videos recorded with the front camera by default,\nbut you can reverse that back by setting this to `true`. On Android, this is handled in the user's device settings.","tags":[{"tag":"platform","text":"ios\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"mute","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If present, video will be recorded with no sound."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"quality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specify the quality of recorded video. Usage: `Camera.Constants.VideoQuality.<value>`,\npossible values: for 16:9 resolution `2160p`, `1080p`, `720p`, `480p` : `Android only` and for 4:3 `4:3` (the size is 640x480).\nIf the chosen quality is not available for a device, the highest available is chosen."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]}},{"name":"videoBitrate","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Only works if `useCamera2Api` is set to `true`. This option specifies a desired video bitrate. For example, `5*1000*1000` would be 5Mbps.","tags":[{"tag":"platform","text":"android\n"}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"ConstantsType","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"AutoFocus","kind":1024,"kindString":"Property","type":{"type":"reference","name":"AutoFocus"}},{"name":"FlashMode","kind":1024,"kindString":"Property","type":{"type":"reference","name":"FlashMode"}},{"name":"Type","kind":1024,"kindString":"Property","type":{"type":"reference","name":"CameraType"}},{"name":"VideoCodec","kind":1024,"kindString":"Property","type":{"type":"reference","name":"VideoCodec"}},{"name":"VideoQuality","kind":1024,"kindString":"Property","type":{"type":"reference","name":"VideoQuality"}},{"name":"VideoStabilization","kind":1024,"kindString":"Property","type":{"type":"reference","name":"VideoStabilization"}},{"name":"WhiteBalance","kind":1024,"kindString":"Property","type":{"type":"reference","name":"WhiteBalance"}}]}}},{"name":"FaceDetectionResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"faces","kind":1024,"kindString":"Property","type":{"type":"array","elementType":{"type":"reference","name":"Face"}}}]}}},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"Point","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"x","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"y","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}},{"name":"Constants","kind":32,"kindString":"Variable","type":{"type":"reference","name":"ConstantsType"}},{"name":"getCameraPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCameraPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user's permissions for accessing camera.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getMicrophonePermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMicrophonePermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user's permissions for accessing microphone.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"tags":[{"tag":"deprecated","text":"Deprecated. Use `getCameraPermissionsAsync` or `getMicrophonePermissionsAsync` instead.\nChecks user's permissions for accessing camera.\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestCameraPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestCameraPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing camera.\nOn iOS this will require apps to specify an `NSCameraUsageDescription` entry in the **Info.plist**.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestMicrophonePermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestMicrophonePermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing the microphone.\nOn iOS this will require apps to specify an `NSMicrophoneUsageDescription` entry in the **Info.plist**.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing camera.\nOn iOS this will require apps to specify both `NSCameraUsageDescription` and `NSMicrophoneUsageDescription` entries in the **Info.plist**.","returns":"A promise that resolves to an object of type [PermissionResponse](#permissionresponse).","tags":[{"tag":"deprecated","text":"Use `requestCameraPermissionsAsync` or `requestMicrophonePermissionsAsync` instead.\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]}]}