{"name":"expo-secure-store","kind":1,"kindString":"Project","originalName":"","children":[{"name":"KeychainAccessibilityConstant","kind":4194304,"kindString":"Type alias","type":{"type":"intrinsic","name":"number"}},{"name":"SecureStoreOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"authenticationPrompt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Custom message displayed to the user while `requireAuthentication` option is turned on."},"type":{"type":"intrinsic","name":"string"}},{"name":"keychainAccessible","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Specifies when the stored entry is accessible, using iOS's `kSecAttrAccessible` property.","tags":[{"tag":"see","text":"Apple's documentation on [keychain item accessibility](https://developer.apple.com/library/content/documentation/Security/Conceptual/keychainServConcepts/02concepts/concepts.html#//apple_ref/doc/uid/TP30000897-CH204-SW18)."},{"tag":"default","text":"SecureStore.WHEN_UNLOCKED"},{"tag":"platform","text":"ios\n"}]},"type":{"type":"reference","name":"KeychainAccessibilityConstant"}},{"name":"keychainService","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"- iOS: The item's service, equivalent to `kSecAttrService`\n- Android: Equivalent of the public/private key pair `Alias`\n> If the item is set with the `keychainService` option, it will be required to later fetch the value."},"type":{"type":"intrinsic","name":"string"}},{"name":"requireAuthentication","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Option responsible for enabling the usage of the user authentication methods available on the device while\naccessing data stored in SecureStore.\n- iOS: Equivalent to `kSecAccessControlUserPresence`\n- Android: Equivalent to `setUserAuthenticationRequired(true)` (requires API 23).\nComplete functionality is unlocked only with a freshly generated key - this would not work in tandem with the `keychainService`\nvalue used for the others non-authenticated operations."},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"AFTER_FIRST_UNLOCK","kind":32,"kindString":"Variable","comment":{"shortText":"The data in the keychain item cannot be accessed after a restart until the device has been\nunlocked once by the user. This may be useful if you need to access the item when the phone\nis locked."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.AFTER_FIRST_UNLOCK"},{"name":"AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","comment":{"shortText":"Similar to `AFTER_FIRST_UNLOCK`, except the entry is not migrated to a new device when restoring\nfrom a backup."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY"},{"name":"ALWAYS","kind":32,"kindString":"Variable","comment":{"shortText":"The data in the keychain item can always be accessed regardless of whether the device is locked.\nThis is the least secure option."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.ALWAYS"},{"name":"ALWAYS_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","comment":{"shortText":"Similar to `ALWAYS`, except the entry is not migrated to a new device when restoring from a backup."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.ALWAYS_THIS_DEVICE_ONLY"},{"name":"WHEN_PASSCODE_SET_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","comment":{"shortText":"Similar to `WHEN_UNLOCKED_THIS_DEVICE_ONLY`, except the user must have set a passcode in order to\nstore an entry. If the user removes their passcode, the entry will be deleted."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.WHEN_PASSCODE_SET_THIS_DEVICE_ONLY"},{"name":"WHEN_UNLOCKED","kind":32,"kindString":"Variable","comment":{"shortText":"The data in the keychain item can be accessed only while the device is unlocked by the user."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.WHEN_UNLOCKED"},{"name":"WHEN_UNLOCKED_THIS_DEVICE_ONLY","kind":32,"kindString":"Variable","comment":{"shortText":"Similar to `WHEN_UNLOCKED`, except the entry is not migrated to a new device when restoring from\na backup."},"type":{"type":"reference","name":"KeychainAccessibilityConstant"},"defaultValue":"ExpoSecureStore.WHEN_UNLOCKED_THIS_DEVICE_ONLY"},{"name":"deleteItemAsync","kind":64,"kindString":"Function","signatures":[{"name":"deleteItemAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Delete the value associated with the provided key.","returns":"A promise that will reject if the value couldn't be deleted.\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"shortText":"The key that was used to store the associated value."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`SecureStoreOptions`](#securestoreoptions) object.\n"},"type":{"type":"reference","name":"SecureStoreOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"getItemAsync","kind":64,"kindString":"Function","signatures":[{"name":"getItemAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Fetch the stored value associated with the provided key.","returns":"A promise that resolves to the previously stored value, or `null` if there is no entry\nfor the given key. The promise will reject if an error occurred while retrieving the value.\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"shortText":"The key that was used to store the associated value."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`SecureStoreOptions`](#securestoreoptions) object.\n"},"type":{"type":"reference","name":"SecureStoreOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the SecureStore API is enabled on the current device. This does not check the app\npermissions.","returns":"Promise which fulfils witch `boolean`, indicating whether the SecureStore API is available\non the current device. Currently this resolves `true` on iOS and Android only.\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"setItemAsync","kind":64,"kindString":"Function","signatures":[{"name":"setItemAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Store a keyâ€“value pair.","returns":"A promise that will reject if value cannot be stored on the device.\n"},"parameters":[{"name":"key","kind":32768,"kindString":"Parameter","comment":{"shortText":"The key to associate with the stored value. Keys may contain alphanumeric characters\n`.`, `-`, and `_`."},"type":{"type":"intrinsic","name":"string"}},{"name":"value","kind":32768,"kindString":"Parameter","comment":{"shortText":"The value to store. Size limit is 2048 bytes."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An [`SecureStoreOptions`](#securestoreoptions) object.\n"},"type":{"type":"reference","name":"SecureStoreOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]}]}