{"name":"expo-battery","kind":1,"kindString":"Project","originalName":"","children":[{"name":"BatteryState","kind":8,"kindString":"Enumeration","children":[{"name":"CHARGING","kind":16,"kindString":"Enumeration member","comment":{"shortText":"if battery is charging."},"defaultValue":"2"},{"name":"FULL","kind":16,"kindString":"Enumeration member","comment":{"shortText":"if the battery level is full."},"defaultValue":"3"},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration member","comment":{"shortText":"if the battery state is unknown or inaccessible."},"defaultValue":"0"},{"name":"UNPLUGGED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"if battery is not charging or discharging."},"defaultValue":"1"}]},{"name":"BatteryLevelEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"batteryLevel","kind":1024,"kindString":"Property","comment":{"shortText":"A number between `0` and `1`, inclusive, or `-1` if the battery level is unknown."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"BatteryStateEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"batteryState","kind":1024,"kindString":"Property","comment":{"shortText":"An enum value representing the battery state."},"type":{"type":"reference","name":"BatteryState"}}]}}},{"name":"PowerModeEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"lowPowerMode","kind":1024,"kindString":"Property","comment":{"shortText":"A boolean value, `true` if lowPowerMode is on, `false` if lowPowerMode is off"},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"PowerState","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"batteryLevel","kind":1024,"kindString":"Property","comment":{"shortText":"A number between `0` and `1`, inclusive, or `-1` if the battery level is unknown."},"type":{"type":"intrinsic","name":"number"}},{"name":"batteryState","kind":1024,"kindString":"Property","comment":{"shortText":"An enum value representing the battery state."},"type":{"type":"reference","name":"BatteryState"}},{"name":"lowPowerMode","kind":1024,"kindString":"Property","comment":{"shortText":"A boolean value, `true` if lowPowerMode is on, `false` if lowPowerMode is off"},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"A method to unsubscribe the listener."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"addBatteryLevelListener","kind":64,"kindString":"Function","signatures":[{"name":"addBatteryLevelListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to the battery level change updates.","text":"On iOS devices, the event fires when the battery level drops one percent or more, but is only\nfired once per minute at maximum.\n\nOn Android devices, the event fires only when significant changes happens, which is when the\nbattery level drops below [`\"android.intent.action.BATTERY_LOW\"`](https://developer.android.com/reference/android/content/Intent#ACTION_BATTERY_LOW)\nor rises above [`\"android.intent.action.BATTERY_OKAY\"`](https://developer.android.com/reference/android/content/Intent#ACTION_BATTERY_OKAY)\nfrom a low battery level. See [here](https://developer.android.com/training/monitoring-device-state/battery-monitoring)\nto read more from the Android docs.\n\nOn web, the event never fires.","returns":"A `Subscription` object on which you can call `remove()` to unsubscribe from the listener.s\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"A callback that is invoked when battery level changes. The callback is provided a\nsingle argument that is an object with a `batteryLevel` key."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BatteryLevelEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"addBatteryStateListener","kind":64,"kindString":"Function","signatures":[{"name":"addBatteryStateListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to the battery state change updates to receive an object with a [`Battery.BatteryState`](#batterystate)\nenum value for whether the device is any of the four states.","text":"On web, the event never fires.","returns":"A `Subscription` object on which you can call `remove()` to unsubscribe from the listener.\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"A callback that is invoked when battery state changes. The callback is provided a\nsingle argument that is an object with a `batteryState` key."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"BatteryStateEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"addLowPowerModeListener","kind":64,"kindString":"Function","signatures":[{"name":"addLowPowerModeListener","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to Low Power Mode (iOS) or Power Saver Mode (Android) updates. The event fires whenever\nthe power mode is toggled.","text":"On web, the event never fires.","returns":"A `Subscription` object on which you can call `remove()` to unsubscribe from the listener.\n"},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"shortText":"A callback that is invoked when Low Power Mode (iOS) or Power Saver Mode (Android)\nchanges. The callback is provided a single argument that is an object with a `lowPowerMode` key."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"PowerModeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getBatteryLevelAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBatteryLevelAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the battery level of the device as a number between `0` and `1`, inclusive. If the device\ndoes not support retrieving the battery level, this method returns `-1`. On web, this method\nalways returns `-1`.","returns":"A `Promise` that fulfils with a number between `0` and `1` representing the battery level,\nor `-1` if the device does not provide it.","tags":[{"tag":"example","text":"\n```ts\nawait Battery.getBatteryLevelAsync();\n// 0.759999\n```\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise"}}]},{"name":"getBatteryStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBatteryStateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Tells the battery's current state. On web, this always returns `BatteryState.UNKNOWN`.","returns":"Returns a `Promise` which fulfills with a [`Battery.BatteryState`](#batterystate) enum\nvalue for whether the device is any of the four states.","tags":[{"tag":"example","text":"\n```ts\nawait Battery.getBatteryStateAsync();\n// BatteryState.CHARGING\n```\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BatteryState"}],"name":"Promise"}}]},{"name":"getPowerStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPowerStateAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the power state of the device including the battery level, whether it is plugged in, and if\nthe system is currently operating in Low Power Mode (iOS) or Power Saver Mode (Android). This\nmethod re-throws any errors that occur when retrieving any of the power-state information.","returns":"Returns a `Promise` which fulfills with [`PowerState`](#powerstate) object.","tags":[{"tag":"example","text":"\n```ts\nawait Battery.getPowerStateAsync();\n// {\n//   batteryLevel: 0.759999,\n//   batteryState: BatteryState.UNPLUGGED,\n//   lowPowerMode: true,\n// }\n```\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PowerState"}],"name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Resolves with whether the battery API is available on the current device. The value of this\nproperty is `true` on Android and physical iOS devices and `false` on iOS simulators. On web,\nit depends on whether the browser supports the web battery API."},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isBatteryOptimizationEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"isBatteryOptimizationEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks whether battery optimization is enabled for your application.\nIf battery optimization is enabled for your app, background tasks might be affected\nwhen your app goes into doze mode state. (only on Android 6.0 or later)","returns":"Returns a `Promise` which fulfills with a `boolean` value of either `true` or `false`,\nindicating whether the battery optimization is enabled or disabled, respectively. (Android only)","tags":[{"tag":"example","text":"\n```ts\nawait Battery.isBatteryOptimizationEnabledAsync();\n// true\n```\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"isLowPowerModeEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"isLowPowerModeEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current status of Low Power mode on iOS and Power Saver mode on Android. If a platform\ndoesn't support Low Power mode reporting (like web, older Android devices), the reported low-power\nstate is always `false`, even if the device is actually in low-power mode.","returns":"Returns a `Promise` which fulfills with a `boolean` value of either `true` or `false`,\nindicating whether low power mode is enabled or disabled, respectively.","tags":[{"tag":"example","text":"\nLow Power Mode (iOS) or Power Saver Mode (Android) are enabled.\n```ts\nawait Battery.isLowPowerModeEnabledAsync();\n// true\n```\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]}]}