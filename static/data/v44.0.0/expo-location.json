{"name":"expo-location","kind":1,"kindString":"Project","originalName":"","children":[{"name":"LocationAccuracy","kind":16777216,"kindString":"Reference"},{"name":"LocationActivityType","kind":16777216,"kindString":"Reference"},{"name":"LocationGeofencingEventType","kind":16777216,"kindString":"Reference"},{"name":"LocationGeofencingRegionState","kind":16777216,"kindString":"Reference"},{"name":"Accuracy","kind":8,"kindString":"Enumeration","comment":{"shortText":"Enum with available location accuracies."},"children":[{"name":"Balanced","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Accurate to within one hundred meters."},"defaultValue":"3"},{"name":"BestForNavigation","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The highest possible accuracy that uses additional sensor data to facilitate navigation apps."},"defaultValue":"6"},{"name":"High","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Accurate to within ten meters of the desired target."},"defaultValue":"4"},{"name":"Highest","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The best level of accuracy available."},"defaultValue":"5"},{"name":"Low","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Accurate to the nearest kilometer."},"defaultValue":"2"},{"name":"Lowest","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Accurate to the nearest three kilometers."},"defaultValue":"1"}]},{"name":"ActivityType","kind":8,"kindString":"Enumeration","comment":{"shortText":"Enum with available activity types of background location tracking."},"children":[{"name":"Airborne","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Intended for airborne activities. Fall backs to `ActivityType.Other` if\nunsupported.","tags":[{"tag":"platform","text":"ios 12+\n"}]},"defaultValue":"5"},{"name":"AutomotiveNavigation","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Location updates are being used specifically during vehicular navigation to track location\nchanges to the automobile."},"defaultValue":"2"},{"name":"Fitness","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Use this activity type if you track fitness activities such as walking, running, cycling,\nand so on."},"defaultValue":"3"},{"name":"Other","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Default activity type. Use it if there is no other type that matches the activity you track."},"defaultValue":"1"},{"name":"OtherNavigation","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Activity type for movements for other types of vehicular navigation that are not automobile\nrelated."},"defaultValue":"4"}]},{"name":"GeofencingEventType","kind":8,"kindString":"Enumeration","comment":{"shortText":"A type of the event that geofencing task can receive."},"children":[{"name":"Enter","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Emitted when the device entered observed region."},"defaultValue":"1"},{"name":"Exit","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Occurs as soon as the device left observed region"},"defaultValue":"2"}]},{"name":"GeofencingRegionState","kind":8,"kindString":"Enumeration","comment":{"shortText":"State of the geofencing region that you receive through the geofencing task."},"children":[{"name":"Inside","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates that the device is inside the region."},"defaultValue":"1"},{"name":"Outside","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Inverse of inside state."},"defaultValue":"2"},{"name":"Unknown","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Indicates that the device position related to the region is unknown."},"defaultValue":"0"}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","defaultValue":"\"denied\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","defaultValue":"\"granted\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","defaultValue":"\"undetermined\""}]},{"name":"LocationPermissionResponse","kind":256,"kindString":"Interface","comment":{"shortText":"`LocationPermissionResponse` extends [PermissionResponse](permissions.md#permissionresponse)\ntype exported by `expo-modules-core` and contains additional platform-specific fields."},"children":[{"name":"android","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"PermissionDetailsLocationAndroid"}},{"name":"canAskAgain","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"UMPermissionResponse.canAskAgain"}},{"name":"expires","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionExpiration"},"inheritedFrom":{"type":"reference","name":"UMPermissionResponse.expires"}},{"name":"granted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"UMPermissionResponse.granted"}},{"name":"ios","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"PermissionDetailsLocationIOS"}},{"name":"status","kind":1024,"kindString":"Property","type":{"type":"reference","name":"PermissionStatus"},"inheritedFrom":{"type":"reference","name":"UMPermissionResponse.status"}}],"extendedTypes":[{"type":"reference","name":"UMPermissionResponse"}]},{"name":"LocationCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Represents `watchPositionAsync` callback."},"parameters":[{"name":"location","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"LocationObject"}}],"type":{"type":"intrinsic","name":"any"}}]}}},{"name":"LocationGeocodedAddress","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing a result of `reverseGeocodeAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"city","kind":1024,"kindString":"Property","comment":{"shortText":"City name of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"country","kind":1024,"kindString":"Property","comment":{"shortText":"Localized country name of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"district","kind":1024,"kindString":"Property","comment":{"shortText":"Additional city-level information like district name."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"isoCountryCode","kind":1024,"kindString":"Property","comment":{"shortText":"Localized (ISO) country code of the address, if available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"The name of the placemark, for example, \"Tower Bridge\"."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"postalCode","kind":1024,"kindString":"Property","comment":{"shortText":"Postal code of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"region","kind":1024,"kindString":"Property","comment":{"shortText":"The state or province associated with the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"street","kind":1024,"kindString":"Property","comment":{"shortText":"Street name of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"streetNumber","kind":1024,"kindString":"Property","comment":{"shortText":"Street number of the address."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"subregion","kind":1024,"kindString":"Property","comment":{"shortText":"Additional information about administrative area."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"timezone","kind":1024,"kindString":"Property","comment":{"shortText":"The timezone identifier associated with the address.","tags":[{"tag":"platform","text":"ios\n"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}}},{"name":"LocationGeocodedLocation","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing a result of `geocodeAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accuracy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The radius of uncertainty for the location, measured in meters."},"type":{"type":"intrinsic","name":"number"}},{"name":"altitude","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The altitude in meters above the WGS 84 reference ellipsoid."},"type":{"type":"intrinsic","name":"number"}},{"name":"latitude","kind":1024,"kindString":"Property","comment":{"shortText":"The latitude in degrees."},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","comment":{"shortText":"The longitude in degrees."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationGeocodingOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"An object of options for forward and reverse geocoding."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"useGoogleMaps","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether to force using Google Maps API instead of the native implementation.\nUsed by default only on Web platform. Requires providing an API key by `setGoogleApiKey`."},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"LocationHeadingCallback","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"shortText":"Represents `watchHeadingAsync` callback."},"parameters":[{"name":"location","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"LocationHeadingObject"}}],"type":{"type":"intrinsic","name":"any"}}]}}},{"name":"LocationHeadingObject","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type of the object containing heading details and provided by `watchHeadingAsync` callback."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accuracy","kind":1024,"kindString":"Property","comment":{"shortText":"Level of calibration of compass.\n- `3`: high accuracy, `2`: medium accuracy, `1`: low accuracy, `0`: none\nReference for iOS:\n- `3`: < 20 degrees uncertainty, `2`: < 35 degrees, `1`: < 50 degrees, `0`: > 50 degrees"},"type":{"type":"intrinsic","name":"number"}},{"name":"magHeading","kind":1024,"kindString":"Property","comment":{"shortText":"Measure of magnetic north in degrees."},"type":{"type":"intrinsic","name":"number"}},{"name":"trueHeading","kind":1024,"kindString":"Property","comment":{"shortText":"Measure of true north in degrees (needs location permissions, will return `-1` if not given)."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationLastKnownOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing options object that can be passed to `getLastKnownPositionAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"maxAge","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A number of milliseconds after which the last known location starts to be invalid and thus\n`null` is returned."},"type":{"type":"intrinsic","name":"number"}},{"name":"requiredAccuracy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The maximum radius of uncertainty for the location, measured in meters. If the last known\nlocation's accuracy radius is bigger (less accurate) then `null` is returned."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationObject","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing the location object."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"coords","kind":1024,"kindString":"Property","comment":{"shortText":"The coordinates of the position."},"type":{"type":"reference","name":"LocationObjectCoords"}},{"name":"timestamp","kind":1024,"kindString":"Property","comment":{"shortText":"The time at which this position information was obtained, in milliseconds since epoch."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationObjectCoords","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing the location GPS related data."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accuracy","kind":1024,"kindString":"Property","comment":{"shortText":"The radius of uncertainty for the location, measured in meters. Can be `null` on Web if it's not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"altitude","kind":1024,"kindString":"Property","comment":{"shortText":"The altitude in meters above the WGS 84 reference ellipsoid. Can be `null` on Web if it's not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"altitudeAccuracy","kind":1024,"kindString":"Property","comment":{"shortText":"The accuracy of the altitude value, in meters. Can be `null` on Web if it's not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"heading","kind":1024,"kindString":"Property","comment":{"shortText":"Horizontal direction of travel of this device, measured in degrees starting at due north and\ncontinuing clockwise around the compass. Thus, north is 0 degrees, east is 90 degrees, south is\n180 degrees, and so on. Can be `null` on Web if it's not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"latitude","kind":1024,"kindString":"Property","comment":{"shortText":"The latitude in degrees."},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","comment":{"shortText":"The longitude in degrees."},"type":{"type":"intrinsic","name":"number"}},{"name":"speed","kind":1024,"kindString":"Property","comment":{"shortText":"The instantaneous speed of the device in meters per second. Can be `null` on Web if it's not available."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}}]}}},{"name":"LocationOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing options argument in `getCurrentPositionAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accuracy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Location manager accuracy. Pass one of `LocationAccuracy` enum values.\nFor low-accuracies the implementation can avoid geolocation providers\nthat consume a significant amount of power (such as GPS)."},"type":{"type":"reference","name":"LocationAccuracy"}},{"name":"distanceInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Receive updates only when the location has changed by at least this distance in meters.\nDefault value may depend on `accuracy` option."},"type":{"type":"intrinsic","name":"number"}},{"name":"mayShowUserSettingsDialog","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"(Android only) Specifies whether to ask the user to turn on improved accuracy location mode\nwhich uses Wi-Fi, cell networks and GPS sensor.","tags":[{"tag":"default","text":"true.\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"timeInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"(Android only) Minimum time to wait between each update in milliseconds.\nDefault value may depend on `accuracy` option."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationProviderStatus","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Represents the object containing details about location provider."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"backgroundModeEnabled","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"}},{"name":"gpsAvailable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the GPS provider is available. If `true` the location data will come\nfrom GPS, especially for requests with high accuracy.","tags":[{"tag":"platform","text":"android\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"locationServicesEnabled","kind":1024,"kindString":"Property","comment":{"shortText":"Whether location services are enabled. See [Location.hasServicesEnabledAsync](#locationhasservicesenabledasync)\nfor a more convenient solution to get this value."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"networkAvailable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the network provider is available. If `true` the location data will\ncome from cellular network, especially for requests with low accuracy.","tags":[{"tag":"platform","text":"android\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"passiveAvailable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Whether the passive provider is available. If `true` the location data will\nbe determined passively.","tags":[{"tag":"platform","text":"android\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"LocationRegion","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing geofencing region object."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"identifier","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The identifier of the region object. Defaults to auto-generated UUID hash."},"type":{"type":"intrinsic","name":"string"}},{"name":"latitude","kind":1024,"kindString":"Property","comment":{"shortText":"The latitude in degrees of region's center point."},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","kind":1024,"kindString":"Property","comment":{"shortText":"The longitude in degrees of region's center point."},"type":{"type":"intrinsic","name":"number"}},{"name":"notifyOnEnter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value whether to call the task if the device enters the region.","tags":[{"tag":"default","text":"true\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"notifyOnExit","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Boolean value whether to call the task if the device exits the region.","tags":[{"tag":"default","text":"true\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"radius","kind":1024,"kindString":"Property","comment":{"shortText":"The radius measured in meters that defines the region's outer boundary."},"type":{"type":"intrinsic","name":"number"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"One of [GeofencingRegionState](#geofencingregionstate) region state. Determines whether the\ndevice is inside or outside a region."},"type":{"type":"reference","name":"LocationGeofencingRegionState"}}]}}},{"name":"LocationSubscription","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Represents subscription object returned by methods watching for new locations or headings."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":2048,"kindString":"Method","signatures":[{"name":"remove","kind":4096,"kindString":"Call signature","comment":{"shortText":"Call this function with no arguments to remove this subscription. The callback will no longer\nbe called for location updates."},"type":{"type":"intrinsic","name":"void"}}]}]}}},{"name":"LocationTaskOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Type representing background location task options."},"type":{"type":"intersection","types":[{"type":"reference","name":"LocationOptions"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"activityType","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The type of user activity associated with the location updates.","tags":[{"tag":"see","text":"See [Apple docs](https://developer.apple.com/documentation/corelocation/cllocationmanager/1620567-activitytype) for more details."},{"tag":"default","text":"LocationActivityType.Other"},{"tag":"platform","text":"ios\n"}]},"type":{"type":"reference","name":"LocationActivityType"}},{"name":"deferredUpdatesDistance","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The distance in meters that must occur between last reported location and the current location\nbefore deferred locations are reported.","tags":[{"tag":"default","text":"0\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"deferredUpdatesInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Minimum time interval in milliseconds that must pass since last reported location before all\nlater locations are reported in a batched update","tags":[{"tag":"default","text":"0\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"deferredUpdatesTimeout","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"foregroundService","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"LocationTaskServiceOptions"}},{"name":"pausesUpdatesAutomatically","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean value indicating whether the location manager can pause location\nupdates to improve battery life without sacrificing location data. When this option is set to\n`true`, the location manager pauses updates (and powers down the appropriate hardware) at times\nwhen the location data is unlikely to change. You can help the determination of when to pause\nlocation updates by assigning a value to the `activityType` property.","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"ios\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"showsBackgroundLocationIndicator","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A boolean indicating whether the status bar changes its appearance when\nlocation services are used in the background.","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"ios 11+\n"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}]}},{"name":"LocationTaskServiceOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"notificationBody","kind":1024,"kindString":"Property","comment":{"shortText":"Subtitle of the foreground service notification."},"type":{"type":"intrinsic","name":"string"}},{"name":"notificationColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Color of the foreground service notification. Accepts `#RRGGBB` and `#AARRGGBB` hex formats."},"type":{"type":"intrinsic","name":"string"}},{"name":"notificationTitle","kind":1024,"kindString":"Property","comment":{"shortText":"Title of the foreground service notification."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"PermissionDetailsLocationAndroid","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"accuracy","kind":1024,"kindString":"Property","comment":{"shortText":"Indicates the type of location provider."},"type":{"type":"union","types":[{"type":"literal","value":"fine"},{"type":"literal","value":"coarse"},{"type":"literal","value":"none"}]}},{"name":"scope","kind":1024,"kindString":"Property","comment":{"tags":[{"tag":"deprecated","text":"__Deprecated.__ Use `accuracy` field instead.\n"}]},"type":{"type":"union","types":[{"type":"literal","value":"fine"},{"type":"literal","value":"coarse"},{"type":"literal","value":"none"}]}}]}}},{"name":"PermissionDetailsLocationIOS","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"scope","kind":1024,"kindString":"Property","comment":{"shortText":"The scope of granted permission. Indicates when it's possible to use location."},"type":{"type":"union","types":[{"type":"literal","value":"whenInUse"},{"type":"literal","value":"always"},{"type":"literal","value":"none"}]}}]}}},{"name":"PermissionHookOptions","kind":4194304,"kindString":"Type alias","typeParameter":[{"name":"Options","kind":131072,"kindString":"Type parameter","type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"EventEmitter","kind":32,"kindString":"Variable","type":{"type":"reference","name":"EventEmitter"},"defaultValue":"..."},{"name":"enableNetworkProviderAsync","kind":64,"kindString":"Function","signatures":[{"name":"enableNetworkProviderAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to turn on high accuracy location mode which enables network provider that uses\nGoogle Play services to improve location accuracy and location-based services.","returns":"A promise resolving as soon as the user accepts the dialog. Rejects if denied.\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"geocodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"geocodeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Geocode an address string to latitude-longitude location.\n> **Note**: Geocoding is resource consuming and has to be used reasonably. Creating too many\n> requests at a time can result in an error, so they have to be managed properly.\n> It's also discouraged to use geocoding while the app is in the background and its results won't\n> be shown to the user immediately.","text":"> On Android, you must request a location permission (`Permissions.LOCATION`) from the user\n> before geocoding can be used.","returns":"A promise which fulfills with an array (in most cases its size is 1) of [`LocationGeocodedLocation`](#locationgeocodedlocation) objects.\n"},"parameters":[{"name":"address","kind":32768,"kindString":"Parameter","comment":{"shortText":"A string representing address, eg. `\"Baker Street London\"`."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{},"type":{"type":"reference","name":"LocationGeocodingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"LocationGeocodedLocation"}}],"name":"Promise"}}]},{"name":"getBackgroundPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBackgroundPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user's permissions for accessing location while the app is in the background.","returns":"A promise that fulfills with an object of type [PermissionResponse](#permissionresponse).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"getCurrentPositionAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCurrentPositionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Requests for one-time delivery of the user's current location.\nDepending on given `accuracy` option it may take some time to resolve,\nespecially when you're inside a building.\n> __Note:__ Calling it causes the location manager to obtain a location fix which may take several\n> seconds. Consider using [`Location.getLastKnownPositionAsync`](#locationgetlastknownpositionasyncoptions)\n> if you expect to get a quick response and high accuracy is not required.","returns":"A promise which fulfills with an object of type [`LocationObject`](#locationobject).\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"LocationOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationObject"}],"name":"Promise"}}]},{"name":"getForegroundPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getForegroundPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user's permissions for accessing location while the app is in the foreground.","returns":"A promise that fulfills with an object of type [PermissionResponse](#permissionresponse).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"Promise"}}]},{"name":"getHeadingAsync","kind":64,"kindString":"Function","signatures":[{"name":"getHeadingAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the current heading information from the device. To simplify, it calls `watchHeadingAsync`\nand waits for a couple of updates, and then returns the one that is accurate enough.","returns":"A promise which fulfills with an object of type [LocationHeadingObject](#locationheadingobject).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationHeadingObject"}],"name":"Promise"}}]},{"name":"getLastKnownPositionAsync","kind":64,"kindString":"Function","signatures":[{"name":"getLastKnownPositionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Gets the last known position of the device or `null` if it's not available or doesn't match given\nrequirements such as maximum age or required accuracy.\nIt's considered to be faster than `getCurrentPositionAsync` as it doesn't request for the current\nlocation, but keep in mind the returned location may not be up-to-date.","returns":"A promise which fulfills with an object of type [LocationObject](#locationobject) or\n`null` if it's not available or doesn't match given requirements such as maximum age or required\naccuracy.\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"LocationLastKnownOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"LocationObject"},{"type":"literal","value":null}]}],"name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user's permissions for accessing location.","returns":"A promise that fulfills with an object of type [LocationPermissionResponse](#locationpermissionresponse).","tags":[{"tag":"deprecated","text":"__Deprecated.__ Use [`getForegroundPermissionsAsync`](#locationgetforegroundpermissionsasync) or [`getBackgroundPermissionsAsync`](#locationgetbackgroundpermissionsasync) instead.\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"Promise"}}]},{"name":"getProviderStatusAsync","kind":64,"kindString":"Function","signatures":[{"name":"getProviderStatusAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check status of location providers.","returns":"A promise which fulfills with an object of type [LocationProviderStatus](#locationproviderstatus).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationProviderStatus"}],"name":"Promise"}}]},{"name":"hasServicesEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasServicesEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks whether location services are enabled by the user.","returns":"A promise which fulfills to `true` if location services are enabled on the device,\nor `false` if not.\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"hasStartedGeofencingAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasStartedGeofencingAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"A promise which fulfills with boolean value indicating whether the geofencing task is\nstarted or not.\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the geofencing task to check."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"hasStartedLocationUpdatesAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasStartedLocationUpdatesAsync","kind":4096,"kindString":"Call signature","comment":{"returns":"A promise which fulfills with boolean value indicating whether the location task is\nstarted or not.\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the location task to check."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"installWebGeolocationPolyfill","kind":64,"kindString":"Function","signatures":[{"name":"installWebGeolocationPolyfill","kind":4096,"kindString":"Call signature","comment":{"shortText":"Polyfills `navigator.geolocation` for interop with the core React Native and Web API approach to geolocation."},"type":{"type":"intrinsic","name":"void"}}]},{"name":"isBackgroundLocationAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isBackgroundLocationAvailableAsync","kind":4096,"kindString":"Call signature","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise"}}]},{"name":"requestBackgroundPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestBackgroundPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for location while the app is in the background.\nOn __Android 11 or higher__: this method will open the system settings page - before that happens\nyou should explain to the user why your application needs background location permission.\nFor example, you can use `Modal` component from `react-native` to do that.\n> __Note__: Foreground permissions should be granted before asking for the background permissions\n(your app can't obtain background permission without foreground permission).","returns":"A promise that fulfills with an object of type [PermissionResponse](#permissionresponse).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise"}}]},{"name":"requestForegroundPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestForegroundPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for location while the app is in the foreground.","returns":"A promise that fulfills with an object of type [PermissionResponse](#permissionresponse).\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for location.","returns":"A promise that fulfills with an object of type [LocationPermissionResponse](#locationpermissionresponse).","tags":[{"tag":"deprecated","text":"__Deprecated.__ Use [`requestForegroundPermissionsAsync`](#locationrequestforegroundpermissionsasync) or [`requestBackgroundPermissionsAsync`](#locationrequestbackgroundpermissionsasync) instead.\n"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"Promise"}}]},{"name":"reverseGeocodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"reverseGeocodeAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Reverse geocode a location to postal address.\n> **Note**: Geocoding is resource consuming and has to be used reasonably. Creating too many\n> requests at a time can result in an error, so they have to be managed properly.\n> It's also discouraged to use geocoding while the app is in the background and its results won't\n> be shown to the user immediately.","text":"> On Android, you must request a location permission (`Permissions.LOCATION`) from the user\n> before geocoding can be used.","returns":"A promise which fulfills with an array (in most cases its size is 1) of [`LocationGeocodedAddress`](#locationgeocodedaddress) objects.\n"},"parameters":[{"name":"location","kind":32768,"kindString":"Parameter","comment":{"shortText":"An object representing a location."},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationGeocodedLocation"},{"type":"union","types":[{"type":"literal","value":"latitude"},{"type":"literal","value":"longitude"}]}],"name":"Pick"}},{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{},"type":{"type":"reference","name":"LocationGeocodingOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"LocationGeocodedAddress"}}],"name":"Promise"}}]},{"name":"setGoogleApiKey","kind":64,"kindString":"Function","signatures":[{"name":"setGoogleApiKey","kind":4096,"kindString":"Call signature","comment":{"shortText":"Sets a Google API Key for using Google Maps Geocoding API which is used by default on Web\nplatform and can be enabled through `useGoogleMaps` option of `geocodeAsync` and `reverseGeocodeAsync`\nmethods. It might be useful for Android devices that do not have Google Play Services, hence no\nGeocoder Service."},"parameters":[{"name":"apiKey","kind":32768,"kindString":"Parameter","comment":{"shortText":"Google API key obtained from Google API Console. This API key must have `Geocoding API`\nenabled, otherwise your geocoding requests will be denied.\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"startGeofencingAsync","kind":64,"kindString":"Function","signatures":[{"name":"startGeofencingAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Starts geofencing for given regions. When the new event comes, the task with specified name will\nbe called with the region that the device enter to or exit from.\nIf you want to add or remove regions from already running geofencing task, you can just call\n`startGeofencingAsync` again with the new array of regions.","returns":"A promise resolving as soon as the task is registered.\n\n# Task parameters\n\nGeofencing task will be receiving following data:\n - `eventType` - Indicates the reason for calling the task, which can be triggered by entering or exiting the region.\n   See [GeofencingEventType](#geofencingeventtype).\n - `region` - Object containing details about updated region. See [LocationRegion](#locationregion) for more details.\n\n# Example\n```ts\nimport { GeofencingEventType } from 'expo-location';\nimport * as TaskManager from 'expo-task-manager';\n\n TaskManager.defineTask(YOUR_TASK_NAME, ({ data: { eventType, region }, error }) => {\n  if (error) {\n    // check `error.message` for more details.\n    return;\n  }\n  if (eventType === GeofencingEventType.Enter) {\n    console.log(\"You've entered region:\", region);\n  } else if (eventType === GeofencingEventType.Exit) {\n    console.log(\"You've left region:\", region);\n  }\n});\n```\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task that will be called when the device enters or exits from specified regions."},"type":{"type":"intrinsic","name":"string"}},{"name":"regions","kind":32768,"kindString":"Parameter","comment":{"shortText":"Array of region objects to be geofenced."},"type":{"type":"array","elementType":{"type":"reference","name":"LocationRegion"}},"defaultValue":"[]"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"startLocationUpdatesAsync","kind":64,"kindString":"Function","signatures":[{"name":"startLocationUpdatesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Registers for receiving location updates that can also come when the app is in the background.","returns":"A promise resolving once the task with location updates is registered.\n\n# Task parameters\n\nBackground location task will be receiving following data:\n- `locations` - An array of the new locations.\n\n```ts\nimport * as TaskManager from 'expo-task-manager';\n\nTaskManager.defineTask(YOUR_TASK_NAME, ({ data: { locations }, error }) => {\n if (error) {\n   // check `error.message` for more details.\n   return;\n }\n console.log('Received new locations', locations);\n});\n```\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task receiving location updates."},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"shortText":"An object of options passed to the location manager."},"type":{"type":"reference","name":"LocationTaskOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"stopGeofencingAsync","kind":64,"kindString":"Function","signatures":[{"name":"stopGeofencingAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Stops geofencing for specified task. It unregisters the background task so the app will not be\nreceiving any updates, especially in the background.","returns":"A promise resolving as soon as the task is unregistered.\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the task to unregister."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"stopLocationUpdatesAsync","kind":64,"kindString":"Function","signatures":[{"name":"stopLocationUpdatesAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Stops geofencing for specified task.","returns":"A promise resolving as soon as the task is unregistered.\n"},"parameters":[{"name":"taskName","kind":32768,"kindString":"Parameter","comment":{"shortText":"Name of the background location task to stop."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise"}}]},{"name":"useBackgroundPermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"useBackgroundPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions for the foreground location.\nThis uses both `requestBackgroundPermissionsAsync` and `getBackgroundPermissionsAsync` to\ninteract with the permissions.","tags":[{"tag":"example","text":"\n```ts\nconst [status, requestPermission] = Location.useBackgroundPermissions();\n```\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"useForegroundPermissions","kind":64,"kindString":"Function","flags":{"isConst":true},"signatures":[{"name":"useForegroundPermissions","kind":4096,"kindString":"Call signature","comment":{"shortText":"Check or request permissions for the foreground location.\nThis uses both `requestForegroundPermissionsAsync` and `getForegroundPermissionsAsync` to interact with the permissions.","tags":[{"tag":"example","text":"\n```ts\nconst [status, requestPermission] = Location.useForegroundPermissions();\n```\n"}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"LocationPermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse"}],"name":"GetPermissionMethod"}]}}]},{"name":"watchHeadingAsync","kind":64,"kindString":"Function","signatures":[{"name":"watchHeadingAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to compass updates from the device.","returns":"A promise which fulfills with a [`LocationSubscription`](#locationsubscription) object.\n"},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"shortText":"This function is called on each compass update. It receives an object of type\n[LocationHeadingObject](#locationheadingobject) as the first argument."},"type":{"type":"reference","name":"LocationHeadingCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationSubscription"}],"name":"Promise"}}]},{"name":"watchPositionAsync","kind":64,"kindString":"Function","signatures":[{"name":"watchPositionAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Subscribe to location updates from the device. Please note that updates will only occur while the\napplication is in the foreground. To get location updates while in background you'll need to use\n[Location.startLocationUpdatesAsync](#locationstartlocationupdatesasynctaskname-options).","returns":"A promise which fulfills with a [`LocationSubscription`](#locationsubscription) object.\n"},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{},"type":{"type":"reference","name":"LocationOptions"}},{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"shortText":"This function is called on each location update. It receives an object of type\n[`LocationObject`](#locationobject) as the first argument."},"type":{"type":"reference","name":"LocationCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationSubscription"}],"name":"Promise"}}]}]}